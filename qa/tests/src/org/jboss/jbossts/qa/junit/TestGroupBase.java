/*
 * JBoss, Home of Professional Open Source
 * Copyright 2009, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags.
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * (C) 2009,
 * @author JBoss Inc.
 */
package org.jboss.jbossts.qa.junit;

import org.junit.Before;
import org.junit.After;
import org.junit.Assert;
import org.junit.Assume;
import org.jboss.jbossts.qa.Utils.RemoveServerIORStore;
import org.jboss.jbossts.qa.Utils.FileServerIORStore;

import java.io.*;

/**
 * Base class from which all autogenerated test suites inherit common behaviour.
 *
 * @author Jonathan Halliday (jonathan.halliday@redhat.com) 2009-05
 */

public class TestGroupBase
{
    @Before public void setUp()
	{
        // no need to do this here as it gets done in tearDown
        // TaskImpl.cleanupTasks();

		Task emptyObjectStore = createTask("emptyObjectStore", org.jboss.jbossts.qa.Utils.EmptyObjectStore.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		emptyObjectStore.perform();
    }

	@After public void tearDown()
	{
        TaskImpl.cleanupTasks();
    }

    public String getTestGroupName() {
        return "TestGroupsShouldOverrideThisDefaultTestGroupName";
    }

    private String testName;

    // jUnit does not appear to make it easy to ask the framework
    // for the name of the current test method, so the tests have to
    // inform us of it explicitly.
    protected void setTestName(String testName) {
        this.testName = testName;
        checkIncludes();
    }

    protected void checkIncludes() {
        String includePattern = System.getProperty("names");
        if(includePattern != null && testName != null) {
            if(!testName.matches(includePattern)) {
                System.out.println("TestGroupBase.checkIncludes: skipping test "+testName+" as it does not match 'names' pattern "+includePattern);
                 // 'assume' causes the default junit4 runner to behave as with @Ignore
                // except that @setUp has already run and @tearDown will still run.
                Assume.assumeTrue(false);
            }
        }
    }

    public Task createTask(String taskName, Class clazz, Task.TaskType taskType, int timeout) {
        OutputStream out;
        String filename = "./testoutput/"+getTestGroupName()+"/"+(testName == null ? "" : testName+"/")+taskName+"_output.txt";
        try {
            File outFile = new File(filename);
            if (outFile.isDirectory()) {
                Assert.fail("createTask : output file name identifies directory " + filename);
            }
            File directory = outFile.getParentFile();
            if (!directory.exists() && !directory.mkdirs()) {
                Assert.fail("createTask : could not create directory for file " + filename);
            }
            out = new FileOutputStream(outFile);

            return new TaskImpl(taskName, clazz, taskType, new PrintStream(out, true), timeout);
        } catch (Exception e) {
            e.printStackTrace();
            Assert.fail("createTask : could not open output stream for file " + filename);
            return null;
        }
    }

    /**
     * 
     */
    public void removeServerIORStore(String name, String... params) {
        // the old, slow way spawned a cleanup task:
        //Task task = createTask(name, org.jboss.jbossts.qa.Utils.RemoveServerIORStore.class, Task.TaskType.EXPECT_PASS_FAIL, 1480);
        //task.perform(params);

        // the new, quick way does it in-process with the test harness.
        // this may break if the tests are changed to use a different store implementation, as it
        // does not bother with the plugin abstraction used by RemoveServerIORStore/ServerIORStore
        FileServerIORStore store = new FileServerIORStore();
        store.remove();
    }
}
