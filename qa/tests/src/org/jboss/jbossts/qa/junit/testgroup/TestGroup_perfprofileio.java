/*
 * JBoss, Home of Professional Open Source
 * Copyright 2009, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags.
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * (C) 2009,
 * @author JBoss Inc.
 */
package org.jboss.jbossts.qa.junit.testgroup;

import org.jboss.jbossts.qa.junit.*;
import org.junit.*;

// Automatically generated by XML2JUnit
public class TestGroup_perfprofileio extends TestGroupBase
{
	public String getTestGroupName()
	{
		return "perfprofileio_b0128";
	}

	protected Task server0 = null;

	@Before public void setUp()
	{
		super.setUp();
		server0 = createTask("server0", com.arjuna.ats.arjuna.recovery.RecoveryManager.class, Task.TaskType.EXPECT_READY, 480);
		server0.start("-test");
	}

	@After public void tearDown()
	{
		try {
			server0.terminate();
		} finally {
			super.tearDown();
		}
	}

	@Test public void PerfProfileIO_B0128_OpenWriteSyncClose()
	{
		setTestName("B0128_OpenWriteSyncClose");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.OpenWriteSyncClose.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0128", "20000", "128");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0128_WriteSync()
	{
		setTestName("B0128_WriteSync");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSync.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0128", "20000", "128");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0128_WriteSyncSeek()
	{
		setTestName("B0128_WriteSyncSeek");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSyncSeek.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0128", "20000", "128");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0256_OpenWriteSyncClose()
	{
		setTestName("B0256_OpenWriteSyncClose");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.OpenWriteSyncClose.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0256", "20000", "256");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0256_WriteSync()
	{
		setTestName("B0256_WriteSync");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSync.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0256", "20000", "256");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0256_WriteSyncSeek()
	{
		setTestName("B0256_WriteSyncSeek");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSyncSeek.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0256", "20000", "256");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0512_OpenWriteSyncClose()
	{
		setTestName("B0512_OpenWriteSyncClose");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.OpenWriteSyncClose.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0512", "20000", "512");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0512_WriteSync()
	{
		setTestName("B0512_WriteSync");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSync.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0512", "20000", "512");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B0512_WriteSyncSeek()
	{
		setTestName("B0512_WriteSyncSeek");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSyncSeek.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B0512", "20000", "512");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B1024_OpenWriteSyncClose()
	{
		setTestName("B1024_OpenWriteSyncClose");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.OpenWriteSyncClose.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B1024", "10000", "1024");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B1024_WriteSync()
	{
		setTestName("B1024_WriteSync");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSync.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B1024", "10000", "1024");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B1024_WriteSyncSeek()
	{
		setTestName("B1024_WriteSyncSeek");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSyncSeek.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B1024", "10000", "1024");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B2048_OpenWriteSyncClose()
	{
		setTestName("B2048_OpenWriteSyncClose");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.OpenWriteSyncClose.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B2048", "10000", "2048");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B2048_WriteSync()
	{
		setTestName("B2048_WriteSync");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSync.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B2048", "10000", "2048");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B2048_WriteSyncSeek()
	{
		setTestName("B2048_WriteSyncSeek");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSyncSeek.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B2048", "10000", "2048");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B4096_OpenWriteSyncClose()
	{
		setTestName("B4096_OpenWriteSyncClose");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.OpenWriteSyncClose.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B4096", "10000", "4096");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B4096_WriteSync()
	{
		setTestName("B4096_WriteSync");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSync.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B4096", "5000", "4096");
		client0.waitFor();
	}

	@Test public void PerfProfileIO_B4096_WriteSyncSeek()
	{
		setTestName("B4096_WriteSyncSeek");
		Task client0 = createTask("client0", org.jboss.jbossts.qa.PerfProfileIOClients.WriteSyncSeek.class, Task.TaskType.EXPECT_PASS_FAIL, 480);
		client0.start("B4096", "10000", "4096");
		client0.waitFor();
	}

}