<?xml version="1.0"?>
<!--
    Build file for comparing performance of various transaction products.

1. Download required jars
=========================
To test a product download the relevant libraries and put them in the lib directory:

Atomikos release 3.7.0
lib/atomikos/transactions-osgi.jar

Bitronix release 2.1.0
lib/btm/btm-2.1.0.jar
lib/btm/lib/slf4j-api-1.6.0.jar
lib/btm/lib/slf4j-log4j12-1.6.0.jar
lib/btm/lib/log4j-1.2.14.jar 

JOTM release 2.2.1
Copy the contents of the lib dir from JOTM distribution to 
lib/jotm

JBossTS jars are sourced from the build

The compile ant target below currently excludes all products (except JBossTS) - once
you have the available jars for a product remember to remove the exclude line.

3. Adding suport for a new product
==================================
The following steps are needed to integrate a new transaction product:
- obtain the required jars and add them to the classpath
- write a class that extends the abstract class org.narayana.tools.perf.WorkerTask

4. Testing a product
====================
To test particular products specify them on the command line with a -p flag (comma separated). For example:

	ant -Dargs="-p org.narayana.tools.perf.AtomikosWorkerTask,org.narayana.tools.perf.NarayanaWorkerTask,org.narayana.tools.perf.BitronixWorkerTask,org.narayana.tools.perf.JotmWorkerTask -i 100 -t 5"

will test Atomikos, JBossTS, Bitronix and JOTM and commit 100 transactions using 5 threads for each product.
  -->

<project name="JBoss" default="run" basedir=".">
    <property name="src.dir" value="${basedir}/src" />
    <property name="lib.dir" value="${basedir}/lib" />
    <property name="build.dir" value="${basedir}/build" />
    <property name="build.classes.dir" value="${build.dir}/classes" />
    <property name="jbossts.install" value="../../dist/narayana-full-4.17.0.Final-SNAPSHOT" />
    <!--
        location of resources needed by the various products
      -->
    <property name="res.dir" value="resources" />
    <property name="log.dir" value="logs" />
    <property name="suspend" value="n" />

    <!-- Bitronix: http://docs.codehaus.org/display/BTM/Download release 2.1.0 -->
    <path id="classpath.bitronix">
		<pathelement location="${lib.dir}/btm/btm-2.1.0.jar" />
		<pathelement location="${lib.dir}/btm/lib/slf4j-api-1.6.0.jar" />
		<pathelement location="${lib.dir}/btm/lib/slf4j-log4j12-1.6.0.jar" />
		<pathelement location="${lib.dir}/btm/lib/log4j-1.2.14.jar" />
    </path>
    <!-- Atomikos: http://www.atomikos.com/Main/TransactionsEssentials release 3.7.0 -->
    <path id="classpath.atomikos">
		<pathelement location="${lib.dir}/atomikos/transactions-osgi.jar" />
    </path>
    <!-- JOTM: http://jotm.objectweb.org/download/index.html release 2.2.1 -->
    <path id="classpath.jotm">
        <pathelement location="${lib.dir}/jotm/ow2-connector-1.5-spec.jar" />
        <pathelement location="${lib.dir}/jotm/howl.jar" />
        <pathelement location="${lib.dir}/jotm/jotm-standalone.jar" />
        <pathelement location="${lib.dir}/jotm/carol.jar" />
        <pathelement location="${lib.dir}/jotm/xapool.jar" />
        <pathelement location="${lib.dir}/jotm/jotm-core.jar" />
        <pathelement location="${lib.dir}/jotm/jotm-client.jar" />
    </path>
    <!-- JBossTS: http://www.jboss.org/download/ the current build -->
    <path id="classpath.jbossts">
        <pathelement location="${jbossts.install}/lib/narayana-jta.jar" />
        <pathelement location="${jbossts.install}/../../ext/netty.jar" />
        <pathelement location="${jbossts.install}/lib/ext/hornetq-core.jar" />
        <pathelement location="${jbossts.install}/lib/ext/jboss-logging.jar" />
    </path>
    <!-- SimpleJTA: https://simple-jta.dev.java.net/servlets/ProjectDocumentList -->
    <path id="classpath.simplejta">
        <pathelement location="${lib.dir}/simplejta/simplejta-1.07.jar" />
    </path>
	<!-- common dependencies -->
    <path id="classpath.common">
        <pathelement location="${build.classes.dir}"/>
        <pathelement location="${res.dir}"/>
    </path>

    <!-- Build classpath -->
    <path id="classpath">
		<path refid="classpath.bitronix"/>
		<path refid="classpath.atomikos"/>
		<path refid="classpath.jotm"/>
		<path refid="classpath.jbossts"/>
		<path refid="classpath.common"/>
    </path>

<!--
    <taskdef name="profile"
             classname="com.jprofiler.ant.ProfileTask"
             classpath="/usr/local/jprofiler5/bin/ant.jar"/>
-->

    <target name="init">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${log.dir}"/>
    </target>

    <target name="compile" depends="init">
        <javac srcdir="${src.dir}"
               destdir="${build.classes.dir}"
               debug="on"
               deprecation="on"
               optimize="on"
               includes="**">
            <classpath refid="classpath"/>

			<exclude name="org/narayana/tools/perf/AtomikosWorkerTask.java" />
			<exclude name="org/narayana/tools/perf/BitronixWorkerTask.java" />
			<exclude name="org/narayana/tools/perf/JotmWorkerTask.java" />

<!--
            <compilerarg value="-Xlint"/>
-->
        </javac>
    </target>

    <property name="args.all" value="-p org.narayana.tools.perf.AtomikosWorkerTask,org.narayana.tools.perf.NarayanaWorkerTask,org.narayana.tools.perf.BitronixWorkerTask,org.narayana.tools.perf.JotmWorkerTask -i 100 -t 5" />
    <property name="args" value="-p org.narayana.tools.perf.NarayanaWorkerTask -i 100 -t 5" />

    <target name="run" depends="compile">
        <java classname="org.narayana.tools.perf.TxnPerformanceTest" fork="yes" dir=".">

            <classpath refid="classpath"/>
            <!-- config files for each supported product -->
			<!--
            <sysproperty key="com.arjuna.ats.arjuna.common.propertiesFile" value="${propfile}" />
            -->
            <sysproperty key="jotm.base" value="${res.dir}" />
            <jvmarg value="-Dcom.atomikos.icatch.file=${res.dir}/atomikos.properties"/>
            <jvmarg value="-Dbitronix.tm.configuration=${res.dir}/btm.properties"/>

			<!-- commandline args -->
            <arg value="${args}" />
<!--
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=${suspend},address=5005" />
            <jvmarg value="-Dcom.sun.management.jmxremote.authenticate=false" />
            <jvmarg value="-Dcom.sun.management.jmxremote=true" />
            <jvmarg value="-Dcom.sun.management.jmxremote.port=1209" />
            <jvmarg value="-Dcom.sun.management.jmxremote.ssl=false" />
-->
        </java>
    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${log.dir}"/>
        <delete dir="ObjectStore"/>
        <delete file="transaction.log"/>
    </target>
</project>
