<!--
  JBoss, Home of Professional Open Source
  Copyright 2008, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a
  full listing of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.

  (C) 2008,
  @author JBoss Inc.
-->

<!--
  Ant build script for running DTF tests locally using the new lightweight test runner (JIRA DTF-4).
  Does not need tomcat, mysql or any DTF server processes running.

  For JBossTS JTS builds.

  1) Run the top level JBossTS ant build:  ant jts
  2) Run the qa build:  cd qa; ant
  2) Run the tests:  ant -f run-dtf-local.xml

  Paths are relative to the JVM's working dir - don't expect to be able to execure this from anywhere but 'qa'.

-->
<project name="Local DTF Test for JBossTS" default="junit" basedir=".">

    <property name="working.dir" location="build"/>

	<path id="tests.classpath">
        <pathelement location="${working.dir}/qa/lib/TestingFramework.jar"/>
        <pathelement location="${working.dir}/lib/ext/junit.jar"/>
        <pathelement location="ext/jdom.jar"/>
    </path>

    <target name="junit">

        <antcall target="junit-tests"><param name="tests" value="currenttests01"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="jtatests01"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="otsserver"/></antcall>

        <antcall target="junit-tests"><param name="tests" value="rawresources01_1"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawresources01_2"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawresources01_3"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawresources02_1"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawresources02_2"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawresources02_3"/></antcall>

        <antcall target="junit-tests"><param name="tests" value="rawsubtransactionawareresources01_1"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawsubtransactionawareresources01_2"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawsubtransactionawareresources01_3"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawsubtransactionawareresources02_1"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawsubtransactionawareresources02_2"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="rawsubtransactionawareresources02_3"/></antcall>

        <antcall target="junit-tests"><param name="tests" value="crashrecovery01"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="crashrecovery02_1"/></antcall>
        <!-- <antcall target="junit-tests"><param name="tests" value="crashrecovery02_2"/></antcall> -->
        <antcall target="junit-tests"><param name="tests" value="crashrecovery03"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="crashrecovery04"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="crashrecovery05_1"/></antcall>
        <!-- <antcall target="junit-tests"><param name="tests" value="crashrecovery05_2"/></antcall> -->
        <antcall target="junit-tests"><param name="tests" value="crashrecovery06"/></antcall>
        <antcall target="junit-tests"><param name="tests" value="crashrecovery07"/></antcall>
        <!-- <antcall target="junit-tests"><param name="tests" value="crashrecovery08"/></antcall> -->
        <antcall target="junit-tests"><param name="tests" value="crashrecovery12"/></antcall>

    </target>

    <target name="junit-tests">

        <echo message="Running test group ${tests} from basedir=${basedir}"/>


        <!-- this runs forked because the product config file it uses has relative paths in it, so we need to guarantee
            the working dir is the same as the location of this script. -->
        <junit printsummary="yes" haltonfailure="yes" fork="true" dir="${basedir}">
            <classpath>
                <path refid="tests.classpath"/>
            </classpath>

            <formatter type="plain"/>

            <sysproperty key="testdefsFile" value="${basedir}/testdefs/jbossts-qa-${tests}-testdefs.xml"/>
            <sysproperty key="productConfigFile" value="${basedir}/config/JBossTS_JTS_JacORB_QA.xml"/>
            <sysproperty key="testnodeConfigFile" value="${basedir}/config/nodeconfig.xml"/>
            <sysproperty key="testnamePattern" value=".*"/>

            <test name="org.jboss.dtf.testframework.local.JUnitTestSuite" outfile="jbossts-qa-${tests}-output"/>

        </junit>

        <echo message="Done test group ${tests}"/>
    </target>


<!--
    unused examples of other approaches to running tests:

    <target name="run2">
        <java classname="org.jboss.dtf.testframework.local.JUnitTestSuite" fork="true">
            <classpath>
                <path refid="tests.classpath"/>
            </classpath>

            <arg value="./testdefs/jbossts-qa-otsserver-testdefs.xml"/>
            <arg value="config/JBossTS_JTS_JacORB_QA.xml"/>
            <arg value="config/nodeconfig.xml"/>
            <arg value="OTSServer_Test001"/>

            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/>

        </java>
    </target>

    <target name="run">
        <antcall target="run-tests"><param name="testdefs.filename" value="jbossts-qa-txcore-testdefs.xml"/></antcall>
    </target>

    <target name="run-tests">
        <java classname="org.jboss.dtf.testframework.local.LocalTestManager" fork="true">
            <classpath>
                <path refid="tests.classpath"/>
                <pathelement location="/usr/local/javastuff/jdom-1.1/lib/xerces.jar"/>
            </classpath>
            <arg value="file:///home/jhalli/IdeaProjects/jboss/jbossts_trunk/qa/testdefs/${testdefs.filename}"/>
            <arg value="/home/jhalli/IdeaProjects/jboss/jbossts_trunk/qa/config/JBossTS_JTS_JacORB_QA.xml"/>
            <arg value="file:///home/jhalli/IdeaProjects/jboss/jbossts_trunk/qa/config/nodeconfig.xml"/>

            <jvmarg value="-Xdebug"/>
            <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/>

        </java>
    </target>
-->
</project>
