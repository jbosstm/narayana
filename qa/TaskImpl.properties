#
# TaskImpl.properties - a config file for the TaskImpl class which is responsible for spawning
# processes (usually JVMs) for multi-process tests.
# The command line used for the spawned JVM is composed by taking the COMMAND_LINE_X
# properties in muleric order, starting at 0 and counting up until a property is found missing.
# Care should be taken when renumbering - don't reuse the same number or miss any out!
#
# Location of the JVM to use. Should usually be jdk6. Tweak according to your machine.
# Note: the version in svn should have the right value for the hudson server - don't check in you own!
#COMMAND_LINE_0=/usr/local/jdk1.6.0_14/bin/java
COMMAND_LINE_0=/opt/jdk1.6.0_11/bin/java
#
COMMAND_LINE_1=-classpath
#
# The classpath consists (appox) of the JBossTS build (from its original home in 'install' - we no longer copy to
# qa/build/) plus its bundled runtime dependencies, including jacorb, plus the qa tests jar, plus a dir in which the build
# script places any requied db driver. Note the use of wildcards for this - don't expect it to work on jdk5.
#
# The effective properties file for JBossTS is the one in ../install/etc but not that later in this
# file we use command line override of some properties.
#
## yeah I know it won't work on windows. - we either need another file or some clever internal munging. TODO.
COMMAND_LINE_2=../install/lib/jbossjts.jar:../install/lib/ext/jta-1_1-classes.zip:../install/lib/ext/connector-api.jar:../install/lib/ext/commons-logging-1.1.jar:../install/lib/ext/log4j-1.2.8.jar:../install/etc/:../install/jacorb/lib/idl.jar:../install/jacorb/lib/backport-util-concurrent.jar:../install/jacorb/lib/jacorb.jar:../install/jacorb/lib/antlr-2.7.2.jar:../install/jacorb/lib/picocontainer-1.2.jar:../install/jacorb/lib/logkit-1.2.jar:../install/jacorb/lib/wrapper-3.1.0.jar:../install/jacorb/lib/avalon-framework-4.1.5.jar:../install/jacorb/etc/:ext/fscontext.jar:ext/providerutil.jar:tests/build/jbossts-jts-qa.jar:dbdrivers/selected_dbdriver/*
#
# properties used by the tests or test framework:
#
COMMAND_LINE_3=-Dqa.debug=true
COMMAND_LINE_4=-DContext.PROVIDER_URL=file:///tmp
COMMAND_LINE_5=-DContext.INITIAL_CONTEXT_FACTORY=com.sun.jndi.fscontext.RefFSContextFactory
COMMAND_LINE_6=-Dperformanceprofilestore.dir=config/perf_profiles/
COMMAND_LINE_7=-Djdbcprofilestore.dir=config/jdbc_profiles
COMMAND_LINE_8=-Dmemorytestprofilestore.dir=config/memory_profiles/
COMMAND_LINE_9=-Dots.server.bindname=value_1
#
# properties that modify the behaviour of the product being tested:
#
COMMAND_LINE_10=-Dcom.arjuna.ats.arjuna.coordinator.maintainHeuristics=NO
COMMAND_LINE_11=-Dcom.arjuna.ats.arjuna.recovery.periodicRecoveryPeriod=10
COMMAND_LINE_12=-Dcom.arjuna.ats.arjuna.recovery.recoveryBackoffPeriod=5
#
# enable these to debug spawned processes. You may need to pause the test
# framework in a debugger too, or it may spawn multiple procs on the same
# debug port.
#
#COMMAND_LINE_13=-Xdebug
#COMMAND_LINE_14=-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5006

#
# task arg properties substitutions - you probably don't need to mess with these.
# Read TaskImpl to understand how they work if you do.
ORBFLAGS_1=
ORBFLAGS_2=
1=value_1
2=value_2
3=value_3
4=value_4
5=value_5
6=value_6
# for JTA set to -local for JTS leave blank
LOCAL_PARAMETER=
#LOCAL_PARAMETER=-local
