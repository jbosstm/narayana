<!--
  JBoss, Home of Professional Open Source
  Copyright 2007, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a
  full listing of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.

  (C) 2005-2006,
  @author JBoss Inc.
-->
<project name="RunQA" default="kick.off.run">

    <!-- Changeable properties -->
    <property name="cvs.tag" value=""/>
    <property name="jdk.version" value=""/>	<!-- "14" for JDK 1.4.x -->
    <property name="use.jdbcstores" value=""/>
    <property name="orb.name" value="JacORB"/>
    <property name="distribution.list" value="jonathan.halliday@redhat.com"/>
	<property name="testdefs.baseurl" value="http://localhost:8080/dtf/producttests"/>
	<property name="testselections.baseurl" value="http://localhost:8080/dtf/producttests"/>
	<property name="nameservice.uri" value="//localhost:1099/NameService"/>

	<!-- Set these properties to select a subset of the available tests,
	 otherwise all the tests are run.  Note that the tests that run
	 are the intersection of "basic", "jdbc", "crashrecovery",
	 "rawresources" and the OS's.
	property name="tests.basic"
	property name="tests.jdbc"
	property name="tests.crashrecovery"
	property name="tests.rawresources"
	property name="tests.hpux"
	property name="tests.linux"
	property name="tests.sunos"
	property name="tests.win2k"
    -->

    <target name="kick.off.run" depends="setup.run, tests.basic, tests.jdbc, tests.crashrecovery, tests.rawresources">

    </target>

    <!-- Setup targets -->
    <target name="setup.run">
	<!-- Run all if nothing selected -->
	<condition property="internal.run.all" value="yes">
		<not>
			<or>
				<isset property="tests.basic"/>
				<isset property="tests.jdbc"/>
				<isset property="tests.crashrecovery"/>
				<isset property="tests.rawresources"/>
				<isset property="tests.hpux"/>
				<isset property="tests.linux"/>
				<isset property="tests.sunos"/>
				<isset property="tests.win2k"/>
			</or>
		</not>
	</condition>

	<!-- Select groups to run -->
	<condition property="internal.run.basic.sunos" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.basic"/>
				<isset property="tests.sunos"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.basic.hpux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.basic"/>
				<isset property="tests.hpux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.basic.linux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.basic"/>
				<isset property="tests.linux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.basic.win2k" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.basic"/>
				<isset property="tests.win2k"/>
			</and>
		</or>
	</condition>

	<condition property="internal.run.jdbc.sunos" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.jdbc"/>
				<isset property="tests.sunos"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.jdbc.hpux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.jdbc"/>
				<isset property="tests.hpux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.jdbc.linux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.jdbc"/>
				<isset property="tests.linux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.jdbc.win2k" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.jdbc"/>
				<isset property="tests.win2k"/>
			</and>
		</or>
	</condition>

	<condition property="internal.run.crashrecovery.sunos" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.crashrecovery"/>
				<isset property="tests.sunos"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.crashrecovery.hpux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.crashrecovery"/>
				<isset property="tests.hpux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.crashrecovery.linux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.crashrecovery"/>
				<isset property="tests.linux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.crashrecovery.win2k" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.crashrecovery"/>
				<isset property="tests.win2k"/>
			</and>
		</or>
	</condition>

	<condition property="internal.run.rawresources.sunos" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.rawresources"/>
				<isset property="tests.sunos"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.rawresources.hpux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.rawresources"/>
				<isset property="tests.hpux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.rawresources.linux" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.rawresources"/>
				<isset property="tests.linux"/>
			</and>
		</or>
	</condition>
	<condition property="internal.run.rawresources.win2k" value="yes">
		<or>
			<isset property="internal.run.all"/>
			<and>
				<isset property="tests.rawresources"/>
				<isset property="tests.win2k"/>
			</and>
		</or>
	</condition>

	<condition property="deploy.name" value="AJQM">
	    <and>
		<or>
		    <equals arg1="${use.jdbcstores}" arg2="MSSQLServer"/>
		    <equals arg1="${use.jdbcstores}" arg2="mssqlserver"/>
		</or>
		<or>
		    <equals arg1="${orb.name}" arg2="JacORB"/>
		    <equals arg1="${orb.name}" arg2="jacorb"/>
		</or>
	    </and>
	</condition>
	<condition property="deploy.name" value="AJQO">
	    <and>
		<or>
		    <equals arg1="${use.jdbcstores}" arg2="Oracle"/>
		    <equals arg1="${use.jdbcstores}" arg2="oracle"/>
		</or>
		<or>
		    <equals arg1="${orb.name}" arg2="JacORB"/>
		    <equals arg1="${orb.name}" arg2="jacorb"/>
		</or>
	    </and>
	</condition>
	<condition property="deploy.name" value="AJQ">
	    <or>
		<equals arg1="${orb.name}" arg2="JacORB"/>
		<equals arg1="${orb.name}" arg2="jacorb"/>
	    </or>
	</condition>

	<condition property="software.version" value="ATS_${orb.name}_MSSQLServer${jdk.version}-${cvs.tag}">
	    <equals arg1="${deploy.name}" arg2="AJQM"/>
	</condition>
	<condition property="software.version" value="ATS_${orb.name}_Oracle${jdk.version}-${cvs.tag}">
	    <equals arg1="${deploy.name}" arg2="AJQO"/>
	</condition>
	<!-- <property name="software.version" value="ATS_${orb.name}_QA${jdk.version}-${cvs.tag}"/> -->
	<property name="software.version" value="JBossTS_JTS_${orb.name}_QA"/>

	<property name="url.version" value="${deploy.name}${jdk.version}"/>

	<taskdef name="schedule" classname="tools.scheduletask.ScheduleTask"
		classpath="DTF/lib/DTFTools.jar;DTF/lib/TestingFramework.jar"/>

	<echo message="Software version: ${software.version}"/>
	<echo message="URL version     : ${url.version}"/>
    </target>

    <!-- Test group targets that run the tests one OS at a time -->

    <target name="tests.basic" depends="tests.basic.sunos.current, tests.basic.hpux.current, tests.basic.linux.current, tests.basic.win2k.current, tests.basic.sunos.jta, tests.basic.hpux.jta, tests.basic.linux.jta, tests.basic.win2k.jta, tests.basic.sunos.otsserver, tests.basic.hpux.otsserver, tests.basic.linux.otsserver, tests.basic.win2k.otsserver">

    </target>

    <target name="tests.jdbc" depends="tests.jdbc.sunos.jdbcres.01-firstsql, tests.jdbc.hpux.jdbcres.01-firstsql, tests.jdbc.linux.jdbcres.01-firstsql, tests.jdbc.win2k.jdbcres.01-firstsql, tests.jdbc.sunos.jdbcres.01-oracle, tests.jdbc.hpux.jdbcres.01-oracle, tests.jdbc.linux.jdbcres.01-oracle, tests.jdbc.win2k.jdbcres.01-oracle, tests.jdbc.sunos.jdbcres.01-mssql, tests.jdbc.hpux.jdbcres.01-mssql, tests.jdbc.linux.jdbcres.01-mssql, tests.jdbc.win2k.jdbcres.01-mssql, tests.jdbc.sunos.jdbcres.02-firstsql, tests.jdbc.hpux.jdbcres.02-firstsql, tests.jdbc.linux.jdbcres.02-firstsql, tests.jdbc.win2k.jdbcres.02-firstsql, tests.jdbc.sunos.jdbcres.02-oracle, tests.jdbc.hpux.jdbcres.02-oracle, tests.jdbc.linux.jdbcres.02-oracle, tests.jdbc.win2k.jdbcres.02-oracle, tests.jdbc.sunos.jdbcres.02-mssql, tests.jdbc.hpux.jdbcres.02-mssql, tests.jdbc.linux.jdbcres.02-mssql, tests.jdbc.win2k.jdbcres.02-mssql">

    </target>
    <target name="tests.crashrecovery" depends="tests.crashrec.sunos.01, tests.crashrec.hpux.01, tests.crashrec.linux.01, tests.crashrec.win2k.01, tests.crashrec.sunos.02_1, tests.crashrec.hpux.02_1, tests.crashrec.linux.02_1, tests.crashrec.win2k.02_1, tests.crashrec.sunos.02_2, tests.crashrec.hpux.02_2, tests.crashrec.linux.02_2, tests.crashrec.win2k.02_2, tests.crashrec.sunos.03, tests.crashrec.hpux.03, tests.crashrec.linux.03, tests.crashrec.win2k.03, tests.crashrec.sunos.04, tests.crashrec.hpux.04, tests.crashrec.linux.04, tests.crashrec.win2k.04, tests.crashrec.sunos.05_1, tests.crashrec.hpux.05_1, tests.crashrec.linux.05_1, tests.crashrec.win2k.05_1, tests.crashrec.sunos.05_2, tests.crashrec.hpux.05_2, tests.crashrec.linux.05_2, tests.crashrec.win2k.05_2, tests.crashrec.sunos.06, tests.crashrec.hpux.06, tests.crashrec.linux.06, tests.crashrec.win2k.06, tests.crashrec.sunos.07, tests.crashrec.hpux.07, tests.crashrec.linux.07, tests.crashrec.win2k.07, tests.crashrec.sunos.08, tests.crashrec.hpux.08, tests.crashrec.linux.08, tests.crashrec.win2k.08, tests.crashrec.sunos.12, tests.crashrec.hpux.12, tests.crashrec.linux.12, tests.crashrec.win2k.12">
    </target>

    <target name="tests.rawresources" depends="tests.rawres.sunos.01_1, tests.rawres.hpux.01_1, tests.rawres.linux.01_1, tests.rawres.win2k.01_1, tests.rawres.sunos.01_2, tests.rawres.hpux.01_2, tests.rawres.linux.01_2, tests.rawres.win2k.01_2, tests.rawres.sunos.01_3, tests.rawres.hpux.01_3, tests.rawres.linux.01_3, tests.rawres.win2k.01_3, tests.rawres.sunos.02_1, tests.rawres.hpux.02_1, tests.rawres.linux.02_1, tests.rawres.win2k.02_1, tests.rawres.sunos.02_2, tests.rawres.hpux.02_2, tests.rawres.linux.02_2, tests.rawres.win2k.02_2, tests.rawres.sunos.02_3, tests.rawres.hpux.02_3, tests.rawres.linux.02_3, tests.rawres.win2k.02_3, tests.rawsubres.sunos.01_1, tests.rawsubres.hpux.01_1, tests.rawsubres.linux.01_1, tests.rawsubres.win2k.01_1, tests.rawsubres.sunos.01_2, tests.rawsubres.hpux.01_2, tests.rawsubres.linux.01_2, tests.rawsubres.win2k.01_2, tests.rawsubres.sunos.01_3, tests.rawsubres.hpux.01_3, tests.rawsubres.linux.01_3, tests.rawsubres.win2k.01_3, tests.rawsubres.sunos.02_1, tests.rawsubres.hpux.02_1, tests.rawsubres.linux.02_1, tests.rawsubres.win2k.02_1, tests.rawsubres.sunos.02_2, tests.rawsubres.hpux.02_2, tests.rawsubres.linux.02_2, tests.rawsubres.win2k.02_2, tests.rawsubres.sunos.02_3, tests.rawsubres.hpux.02_3, tests.rawsubres.linux.02_3, tests.rawsubres.win2k.02_3">
    </target>

    <!-- Individual tests targets -->

    <target name="tests.basic.sunos.current" if="internal.run.basic.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: current tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-currenttests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/66_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.hpux.current" if="internal.run.basic.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: current tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-currenttests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/66_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.linux.current" if="internal.run.basic.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: current tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-currenttests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/66_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.win2k.current" if="internal.run.basic.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: current tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-currenttests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/66_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.sunos.jta" if="internal.run.basic.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JTA tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jtatests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/70_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.hpux.jta" if="internal.run.basic.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JTA tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jtatests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/70_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.linux.jta" if="internal.run.basic.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JTA tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jtatests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/70_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.win2k.jta" if="internal.run.basic.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JTA tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jtatests01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/70_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.sunos.otsserver" if="internal.run.basic.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: OTS server on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-otsserver-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/71_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.hpux.otsserver" if="internal.run.basic.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: OTS server on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-otsserver-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/71_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.linux.otsserver" if="internal.run.basic.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: OTS server on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-otsserver-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/71_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.basic.win2k.otsserver" if="internal.run.basic.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: OTS server on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-otsserver-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/71_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.sunos.jdbcres.01-firstsql" if="internal.run.jdbc.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - First SQL tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/137_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.hpux.jdbcres.01-firstsql" if="internal.run.jdbc.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - First SQL tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/137_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.linux.jdbcres.01-firstsql" if="internal.run.jdbc.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - First SQL tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/137_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.win2k.jdbcres.01-firstsql" if="internal.run.jdbc.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - First SQL tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/137_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.sunos.jdbcres.01-oracle" if="internal.run.jdbc.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - Oracle tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/117_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.hpux.jdbcres.01-oracle" if="internal.run.jdbc.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - Oracle tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/117_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.linux.jdbcres.01-oracle" if="internal.run.jdbc.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - Oracle tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/117_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.win2k.jdbcres.01-oracle" if="internal.run.jdbc.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - Oracle tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/117_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.sunos.jdbcres.01-mssql" if="internal.run.jdbc.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - MS SQL tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/119_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.hpux.jdbcres.01-mssql" if="internal.run.jdbc.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - MS SQL tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/119_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.linux.jdbcres.01-mssql" if="internal.run.jdbc.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - MS SQL tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/119_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.win2k.jdbcres.01-mssql" if="internal.run.jdbc.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 01 - MS SQL tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources01_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/119_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.sunos.jdbcres.02-firstsql" if="internal.run.jdbc.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - First SQL tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/141_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.hpux.jdbcres.02-firstsql" if="internal.run.jdbc.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - First SQL tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/141_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.linux.jdbcres.02-firstsql" if="internal.run.jdbc.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - First SQL tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/141_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.win2k.jdbcres.02-firstsql" if="internal.run.jdbc.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - First SQL tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-firstsql_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/141_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.sunos.jdbcres.02-oracle" if="internal.run.jdbc.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - Oracle tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/138_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.hpux.jdbcres.02-oracle" if="internal.run.jdbc.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - Oracle tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/138_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.linux.jdbcres.02-oracle" if="internal.run.jdbc.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - Oracle tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/138_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.win2k.jdbcres.02-oracle" if="internal.run.jdbc.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - Oracle tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02-oracle_thin_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/138_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.sunos.jdbcres.02-mssql" if="internal.run.jdbc.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - MS SQL tests on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/147_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.hpux.jdbcres.02-mssql" if="internal.run.jdbc.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - MS SQL tests on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/147_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.linux.jdbcres.02-mssql" if="internal.run.jdbc.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - MS SQL tests on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/147_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.jdbc.win2k.jdbcres.02-mssql" if="internal.run.jdbc.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: JDBC resouces 02 - MS SQL tests on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-jdbcresources02_mssqlserver_jndi-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/147_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.01" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 01 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/72_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.01" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 01 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/72_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.01" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 01 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/72_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.01" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 01 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery01-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/72_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.02_1" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_1 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/73_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.02_1" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_1 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/73_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.02_1" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_1 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/73_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.02_1" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_1 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/73_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.02_2" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_2 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/74_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.02_2" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_2 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/74_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.02_2" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_2 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/74_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.02_2" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 02_2 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/74_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.03" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 03 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery03-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/75_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.03" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 03 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery03-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/75_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.03" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 03 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery03-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/75_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.03" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 03 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery03-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/75_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.04" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 04 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery04-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/76_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.04" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 04 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery04-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/76_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.04" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 04 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery04-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/76_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.04" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 04 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery04-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/76_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.05_1" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_1 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/77_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.05_1" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_1 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/77_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.05_1" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_1 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/77_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.05_1" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_1 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/77_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.05_2" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_2 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/78_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.05_2" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_2 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/78_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.05_2" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_2 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/78_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.05_2" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 05_2 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery05_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/78_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.06" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 06 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery06-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/79_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.06" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 06 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery06-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/79_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.06" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 06 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery06-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/79_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.06" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 06 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery06-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/79_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.07" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 07 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery07-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/80_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.07" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 07 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery07-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/80_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.07" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 07 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery07-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/80_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.07" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 07 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery07-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/80_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.08" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 08 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery08-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/81_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.08" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 08 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery08-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/81_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.08" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 08 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery08-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/81_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.08" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 08 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery08-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/81_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.sunos.12" if="internal.run.crashrecovery.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 12 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery12-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/146_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.hpux.12" if="internal.run.crashrecovery.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 12 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery12-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/146_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.linux.12" if="internal.run.crashrecovery.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 12 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery12-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/146_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.crashrec.win2k.12" if="internal.run.crashrecovery.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: crash recovery 12 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-crashrecovery12-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/146_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.sunos.01_1" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_1 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/84_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.hpux.01_1" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_1 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/84_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.linux.01_1" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_1 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/84_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.win2k.01_1" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_1 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/84_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.sunos.01_2" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_2 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/85_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.hpux.01_2" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_2 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/85_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.linux.01_2" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_2 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/85_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.win2k.01_2" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_2 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/85_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.sunos.01_3" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_3 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/86_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.hpux.01_3" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_3 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/86_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.linux.01_3" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_3 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/86_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.win2k.01_3" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 01_3 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/86_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.sunos.02_1" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_1 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/87_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.hpux.02_1" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_1 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/87_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.linux.02_1" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_1 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/87_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.win2k.02_1" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_1 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/87_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.sunos.02_2" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_2 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/88_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.hpux.02_2" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_2 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/88_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.linux.02_2" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_2 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/88_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.win2k.02_2" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_2 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/88_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.sunos.02_3" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_3 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/89_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.hpux.02_3" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_3 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/89_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.linux.02_3" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_3 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/89_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawres.win2k.02_3" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw resources 02_3 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/89_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.sunos.01_1" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_1 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/90_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.hpux.01_1" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_1 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/90_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.linux.01_1" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_1 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/90_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.win2k.01_1" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_1 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/90_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.sunos.01_2" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_2 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/91_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.hpux.01_2" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_2 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/91_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.linux.01_2" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_2 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/91_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.win2k.01_2" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_2 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/91_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.sunos.01_3" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_3 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/92_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.hpux.01_3" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_3 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/92_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.linux.01_3" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_3 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/92_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.win2k.01_3" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 01_3 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources01_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/92_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.sunos.02_1" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_1 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/93_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.hpux.02_1" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_1 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/93_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.linux.02_1" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_1 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/93_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.win2k.02_1" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_1 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_1-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/93_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.sunos.02_2" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_2 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/94_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.hpux.02_2" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_2 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/94_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.linux.02_2" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_2 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/94_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.win2k.02_2" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_2 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_2-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/94_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.sunos.02_3" if="internal.run.rawresources.sunos">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_3 on SunOS"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/95_${url.version}_SunOS.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.hpux.02_3" if="internal.run.rawresources.hpux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_3 on HPUX"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/95_${url.version}_HPUX.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.linux.02_3" if="internal.run.rawresources.linux">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_3 on Linux"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/95_${url.version}_Linux.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

    <target name="tests.rawsubres.win2k.02_3" if="internal.run.rawresources.win2k">

	<sleep seconds="1"/>

	<echo message="Scheduling test run: raw sub-transaction aware resources 02_3 on Win2K"/>

	<schedule nameserviceuri="${nameservice.uri}">

	    <runwhenpossible>

		<testrun    testdefsurl="${testdefs.baseurl}/jbossts-qa-rawsubtransactionawareresources02_3-testdefs.xml"
			    testselectionsurl="${testselections.baseurl}/95_${url.version}_Win2K.xml"
			    distributionlist="${distribution.list}"
			    softwareversion="${software.version}"/>

	    </runwhenpossible>

	</schedule>

    </target>

</project>
