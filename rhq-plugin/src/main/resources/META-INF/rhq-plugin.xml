<?xml version="1.0" encoding="UTF-8" ?>

<plugin name="JBossTS"
        displayName="Transaction Services"
        package="org.rhq.plugins.jbossts"
        description="Provides transaction monitoring"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns="urn:xmlns:rhq-plugin"
        xmlns:c="urn:xmlns:rhq-configuration">

    <depends plugin="JMX" />

    <service name="Transaction Manager"
             discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
             class="TransactionEngineComponent"
             description="Transaction Management"
             singleton="true">

        <runs-inside>
            <parent-resource-type name="JMX Server" plugin="JMX"/>
            <parent-resource-type name="JBossAS Server" plugin="JBossAS"/>
            <parent-resource-type name="JBossAS Server" plugin="JBossAS5"/>
        </runs-inside>

        <plugin-configuration>
            <c:simple-property name="objectName" readOnly="true" default="jboss.jta:name=TransactionStatistics"/>
            <c:simple-property name="nameTemplate" default="Transaction Manager"/>
            <c:simple-property name="descriptionTemplate" default="JBossTS Transaction Management"/>
            <c:simple-property name="Version" default="0.2" readOnly="true"/>
        </plugin-configuration>

        <operation name="probe" displayName="Scan Transaction Logs" description="Scan recovery logs looking for completing transactions">
            <results>
                <c:simple-property name="operationResult" type="string" description="Count of how many log records were detected"/>
            </results>
        </operation>

        <metric property="NumberOfTransactions"
                displayName="NumberOfTransactions"
                description="the total number of transactions (top-level and nested) created since last restart"
                displayType="summary"
                defaultOn="true"
                defaultInterval="10000"
                measurementType="trendsup" dataType="measurement"/>
        <metric property="NumberOfNestedTransactions"
                displayName="NumberOfNestedTransactions"
                description="the total number of nested (sub) transactions created"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <metric property="NumberOfHeuristics"
                displayName="NumberOfHeuristics"
                description="the number of transactions which have terminated with heuristic outcomes"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <metric property="NumberOfCommittedTransactions"
                displayName="NumberOfCommittedTransactions"
                description="the number of committed transactions"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <metric property="NumberOfAbortedTransactions"
                displayName="NumberOfAbortedTransactions"
                description="the number of aborted (i.e. rolledback) transactions"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <metric property="NumberOfInflightTransactions"
                displayName="NumberOfInflightTransactions"
                description="the number of transactions that have begun but not yet terminated"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>
        <metric property="NumberOfTimedOutTransactions"
                displayName="NumberOfTimedOutTransactions"
                description="the number of transactions that have rolled back due to timeout"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <metric property="NumberOfApplicationRollbacks"
                displayName="NumberOfApplicationRollbacks"
                description="the number of transactions that have been rolled back by application request (including ones that have timed out)"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <metric property="NumberOfResourceRollbacks"
                displayName="NumberOfResourceRollbacks"
                description="the number of transactions that rolled back due to resource (participant) failure"
                measurementType="trendsup" dataType="measurement" displayType="summary"/>

        <resource-configuration>
            <c:simple-property name="BuildId" type="string" displayName="Software build identification" required="false" readOnly="true"
                               description="Indication of who built the release, on which date and on which machine"/>
            <c:simple-property name="BuildVersion" type="string" displayName="Source code version control tag" required="false" readOnly="true"
                               description="The version control tag of the source used for this build"/>
            <c:simple-property name="EnableStatistics" type="boolean" displayName="Enable Statistics" required="true" readOnly="false"
                               description="Start/stop collecting statistics"/>
        </resource-configuration>

        <service name="Coordinator Configuration"
                 discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
                 class="XMBeanResourceComponent"
                 description="Transaction Coordinator Configuration"
                 singleton="true">

            <plugin-configuration>
                <c:simple-property name="objectName" readOnly="true" default="jboss.jta:name=CoordinatorEnvironmentBean"/>
                <c:simple-property name="nameTemplate" default="Coordinator Configuration"/>
                <c:simple-property name="descriptionTemplate" default="Configuration properties for the core transaction coordinator."/>
                <c:simple-property name="Version" default="0.2" readOnly="true"/>
            </plugin-configuration>

            <resource-configuration>
                <c:simple-property name="EnableStatistics" type="boolean" description="transaction statistics should be recorded" displayName="EnableStatistics" required="true" readOnly="false"/>

                <c:simple-property name="AsyncCommit" type="boolean" description="Enable asynchronous commit" displayName="AsyncCommit" required="false" readOnly="true"/>
                <c:simple-property name="AsyncPrepare" type="boolean" description="Enable asynchronous prepare behaviour" displayName="AsyncPrepare" required="false" readOnly="true"/>
                <c:simple-property name="AsyncRollback" type="boolean" description="Enable asynchronous rollback behaviour" displayName="AsyncRollback" required="false" readOnly="true"/>

                <c:simple-property name="CommitOnePhase" type="boolean" description="Enable one phase commit optimization" displayName="CommitOnePhase" required="false" readOnly="true"/>
                <c:simple-property name="MaintainHeuristics" type="boolean" description="Indicates that heuristic outcomes should be recorded" displayName="MaintainHeuristics" required="false" readOnly="true"/>

                <c:simple-property name="WriteOptimisation" type="boolean" description="The write optimisation protocol should be used for PersistenceRecord" displayName="WriteOptimisation" required="false" readOnly="true"/>

                <c:simple-property name="ReadonlyOptimisation" type="boolean" description="handling of read only resources should be optimized" displayName="ReadonlyOptimisation" required="false" readOnly="true"/>
                <c:simple-property name="ClassicPrepare" type="boolean" description="the old style of prepare handling should be used for PersistenceRecord" displayName="ClassicPrepare" required="false" readOnly="true"/>
                <c:simple-property name="SharedTransactionLog" type="boolean" description="the transaction log should be run in shared mode" displayName="SharedTransactionLog" required="false" readOnly="true"/>
                <c:simple-property name="StartDisabled" type="boolean" description="the transaction manager should be created in a disabled state" displayName="StartDisabled" required="false" readOnly="true"/>


                <c:simple-property name="TxReaperMode" type="string" description="the operating mode of the transaction timeout processing system" displayName="TxReaperMode" required="false" readOnly="true"/>
                <c:simple-property name="TxReaperTimeout" type="long" description="the timeout (wakeup) interval of the reaper's PERIODIC mode, in milliseconds" displayName="TxReaperTimeout" required="false" readOnly="true"/>
                <c:simple-property name="TxReaperCancelWaitPeriod" type="long" description="the number of millisecs delay afer a cancel is scheduled, before the reaper tries to interrupt the worker thread executing the cancel" displayName="TxReaperCancelWaitPeriod" required="false" readOnly="true"/>
                <c:simple-property name="TxReaperCancelFailWaitPeriod" type="long" description="the number of millisecs delay afer a worker thread is interrupted, before the reaper writes the it off as a zombie and starts a new thread" displayName="TxReaperCancelFailWaitPeriod" required="false" readOnly="true"/>
                <c:simple-property name="TxReaperZombieMax" type="integer" description="the threshold for count of non-exited zombies at which the system starts logging error messages" displayName="TxReaperZombieMax" required="false" readOnly="true"/>
                <c:simple-property name="DefaultTimeout" type="integer" description="the default interval after which a transaction may be considered for timeout, in seconds (depending on the reaper mode and workload, transactions may not be timed out immediately)" displayName="DefaultTimeout" required="false" readOnly="true"/>
                <c:simple-property name="TransactionStatusManagerEnable" type="boolean" description="Indicates whether the transaction status manager (TSM) service, needed for out of process recovery, should be provided or not" displayName="TransactionStatusManagerEnable" required="false" readOnly="true"/>
                <c:simple-property name="BeforeCompletionWhenRollbackOnly" type="boolean" description="Should beforeCompletion should be called on Synchronizations when completing transactions that are marked rollback only" displayName="BeforeCompletionWhenRollbackOnly" required="false" readOnly="true"/>
                <c:simple-property name="CheckedActionFactoryClassName" type="string" description="the class name of an implementation of CheckedActionFactory" displayName="CheckedActionFactoryClassName" required="false" readOnly="true"/>
                <c:simple-property name="CommunicationStore" type="string" description="the symbolic name for the communication store type" displayName="CommunicationStore" required="false" readOnly="true"/>

            </resource-configuration>
        </service>

        <service name="Core Engine Configuration"
                 discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
                 class="XMBeanResourceComponent"
                 description="Assorted configuration properties for the core transaction system"
                 singleton="true">

            <plugin-configuration>
                <c:simple-property name="objectName" readOnly="true" default="jboss.jta:name=CoreEnvironmentBean"/>
                <c:simple-property name="nameTemplate" default="Core Environment Configuration"/>
                <c:simple-property name="descriptionTemplate" default="Assorted configuration properties for the core transaction system."/>
                <c:simple-property name="Version" default="0.2" readOnly="true"/>
            </plugin-configuration>

            <resource-configuration>
                <c:simple-property name="VarDir" type="string" description="the 'var' directory path." displayName="VarDir" required="false" readOnly="true"/>
                <c:simple-property name="NodeIdentifier" type="string" description="the Node Identifier." displayName="NodeIdentifier" required="false" readOnly="true"/>
                <c:simple-property name="SocketProcessIdPort" type="integer" description="the port number for the Socket based process id implementation." displayName="SocketProcessIdPort" required="false" readOnly="true"/>
                <c:simple-property name="SocketProcessIdMaxPorts" type="integer" description="the maximum number of ports to search when looking for one that is free." displayName="SocketProcessIdMaxPorts" required="false" readOnly="true"/>
                <c:simple-property name="ProcessImplementation" type="string" description="the class name of the Process implementation to use." displayName="ProcessImplementation" required="false" readOnly="true"/>
                <c:simple-property name="Pid" type="integer" description="the process id to use if ManualProcessId is selected. Should be uniq across all instances on the same host." displayName="Pid" required="false" readOnly="true"/>
                <c:simple-property name="AllowMultipleLastResources" type="boolean" description="true if multiple last (i.e. one-phase) resources are allowed in the same transaction or not." displayName="AllowMultipleLastResources" required="false" readOnly="true"/>
                <c:simple-property name="DisableMultipleLastResourcesWarning" type="boolean" description="if the per-transaction warning on enlistment of multiple last resources is disabled or not." displayName="DisableMultipleLastResourcesWarning" required="false" readOnly="true"/>
                <c:simple-property name="BuildVersion" type="string" description="the version control tag of the source used, or unknown" displayName="BuildVersion" required="false" readOnly="true"/>
                <c:simple-property name="BuildId" type="string" description="the build identification line indicating the os name and version and build date" displayName="BuildId" required="false" readOnly="true"/>
            </resource-configuration>
        </service>

        <service name="Recovery Configuration"
                 discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
                 class="XMBeanResourceComponent"
                 description="Configuration properties for the recovery system"
                 singleton="true">

            <plugin-configuration>
                <c:simple-property name="objectName" readOnly="true" default="jboss.jta:name=RecoveryEnvironmentBean"/>
                <c:simple-property name="nameTemplate" default="Recovery Configuration"/>
                <c:simple-property name="descriptionTemplate" default="Recovery Configuration."/>
                <c:simple-property name="Version" default="0.2" readOnly="true"/>
            </plugin-configuration>

            <resource-configuration>
                <c:simple-property name="PeriodicRecoveryPeriod" type="integer" displayName="PeriodicRecoveryPeriod" required="false" readOnly="true" description="the interval between recovery scans, in seconds."/>
                <c:simple-property name="RecoveryBackoffPeriod" type="integer" displayName="RecoveryBackoffPeriod" required="false" readOnly="true" description="the interval between recovery phases within a recovery scan, in seconds."/>
                <c:simple-property name="RecoveryListener" type="boolean" displayName="RecoveryListener" required="false" readOnly="true" description="true if the recovery system should listen on a network socket."/>
                <c:simple-property name="RecoveryPort" type="integer" displayName="RecoveryPort" required="false" readOnly="true" description="the network port number on which the recovery listener should bind.
"/>
                <c:simple-property name="RecoveryAddress" type="string" displayName="RecoveryAddress" required="false" readOnly="true" description="the hostname on which the recovery listener shoud bind."/>
                <c:simple-property name="TransactionStatusManagerPort" type="integer" displayName="TransactionStatusManagerPort" required="false" readOnly="true" description="the network port number on which the transaction status manager should bind."/>
                <c:simple-property name="TransactionStatusManagerAddress" type="string" displayName="TransactionStatusManagerAddress" required="false" readOnly="true" description="the hostname on which the transaction status manager should bind."/>
                <c:simple-property name="ExpiryScanInterval" type="integer" displayName="ExpiryScanInterval" required="false" readOnly="true" description="the interval on which the ObjectStore will be scanned for expired items, in hours. Default: 12 hours"/>
                <c:simple-property name="TransactionStatusManagerExpiryTime" type="integer" displayName="TransactionStatusManagerExpiryTime" required="false" readOnly="true" description="the time period after which items will be considered to have expired, in hours. Default: 12 hours"/>
                <c:simple-property name="TimeoutSocket" type="boolean" displayName="TimeoutSocket" required="false" readOnly="true" description="true if SO_TIMEOUT should be set on Listener socket instances."/>

                <!-- the next three have type java.util.List -->
                <c:simple-property name="ExpiryScanners" displayName="ExpiryScanners" required="false" readOnly="true" description="a list of names of classes that implement ExpiryScanner."/>
                <c:simple-property name="RecoveryExtensions" displayName="RecoveryExtensions" required="false" readOnly="true" description="a list of names of classes that implement RecoveryModule.
"/>
                <c:simple-property name="RecoveryActivators" displayName="RecoveryActivators" required="false" readOnly="true" description="a list of names of classes that implement RecoveryActivator."/>

            </resource-configuration>
        </service>

        <service name="JTA Configuration"
                 discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
                 class="XMBeanResourceComponent"
                 description="Configuration properties for the JTA subsystem"
                 singleton="true">

            <plugin-configuration>
                <c:simple-property name="objectName" readOnly="true" default="jboss.jta:name=JTAEnvironmentBean"/>
                <c:simple-property name="nameTemplate" default="JTA Configuration"/>
                <c:simple-property name="descriptionTemplate" default="Configuration properties for the JTA subsystem"/>
                <c:simple-property name="Version" default="0.2" readOnly="true"/>
            </plugin-configuration>

            <resource-configuration>
                <c:simple-property name="SupportSubtransactions" type="boolean" displayName="SupportSubtransactions" required="false" readOnly="true" description="indicates whether subtransactions are allowed. Warning: subtransactions are not JTA spec compliant and most XA resource managers don't understand them."/>
                <c:simple-property name="TransactionManagerClassName" type="string" displayName="TransactionManagerClassName" required="false" readOnly="true" description="the class name of the javax.transaction.TransactionManager implementation."/>

                <c:simple-property name="UserTransactionClassName" type="string" displayName="UserTransactionClassName" required="false" readOnly="true" description="the class name of the javax.transaction.UserTransaction implementation."/>
                <c:simple-property name="TransactionSynchronizationRegistryClassName" type="string" displayName="TransactionSynchronizationRegistryClassName" required="false" readOnly="true" description="the class name of the javax.transaction.TransactionSynchronizationRegistry implementation."/>
                <c:simple-property name="XaRollbackOptimization" type="boolean" displayName="XaRollbackOptimization" required="false" readOnly="true" description="Returns if connections associated to XAResources that fail during prepare should be cleaned up immediately."/>
                <c:simple-property name="XaAssumeRecoveryComplete" type="boolean" displayName="XaAssumeRecoveryComplete" required="false" readOnly="true" description="indicates whether XAResources that can't be recovered should be assumed to have completed. WARNING: enabling this property is not recommended and may cause inconsistency if your recovery configuration is incorrect or resource managers are not available."/>
                <c:simple-property name="UserTransactionJNDIContext" type="string" displayName="UserTransactionJNDIContext" required="false" readOnly="true" description="the JNDI bind name for the implementation of UserTransaction."/>
                <c:simple-property name="TransactionManagerJNDIContext" type="string" displayName="TransactionManagerJNDIContext" required="false" readOnly="true" description="the JNDI bind name for the implementation of TransactionManager."/>
                <c:simple-property name="TransactionSynchronizationRegistryJNDIContext" type="string" displayName="TransactionSynchronizationRegistryJNDIContext" required="false" readOnly="true" description="the JNDI bind name for the implementation of TransactionSynchronizationRegistry."/>
                <c:simple-property name="XaTransactionTimeoutEnabled" type="boolean" displayName="XaTransactionTimeoutEnabled" required="false" readOnly="true" description="indicates whether the transaction timeout is passed on to the enlisted XAResources"/>
                <c:simple-property name="LastResourceOptimisationInterface" type="string" displayName="LastResourceOptimisationInterface" required="false" readOnly="true" description="the classname of the marker interface used to indicate a LastResource."/>

                <!-- the next four have type java.util.List<String> -->
                <c:simple-property name="XaRecoveryNodes" displayName="XaRecoveryNodes" required="false" readOnly="true" description="Returns the set of node identifiers for which recovery will be performed."/>
                <c:simple-property name="XaResourceRecoveryClassNames" displayName="XaResourceRecoveryClassNames" required="false" readOnly="true" description="the set of XAResourceRecovery implementation class names, each of which may have configuration data appended to it."/>
                <c:simple-property name="XaResourceOrphanFilterClassNames" displayName="XaResourceOrphanFilterClassNames" required="false" readOnly="true" description="Returns a list of names of classes that implement XAResourceOrphanFilter."/>
                <c:simple-property name="XaResourceMapClassNames" displayName="XaResourceMapClassNames" required="false" readOnly="true" description="the set of XAResourceMap implementation class names used to configure XAException handling."/>

                <!-- these properties are for complex times (ie not supported)
                TransactionManager getTransactionManager()
                UserTransaction getUserTransaction()
                TransactionSynchronizationRegistry getTransactionSynchronizationRegistry()
                List<XAResourceRecovery> getXaResourceRecoveries()
                List<XAResourceOrphanFilter> getXaResourceOrphanFilters()
                List<XAResourceMap> getXaResourceMaps()
                -->
            </resource-configuration>
        </service>

        <service name="ObjectStore Configuration"
                 discovery="org.rhq.plugins.jmx.MBeanResourceDiscoveryComponent"
                 class="XMBeanResourceComponent"
                 description="Configuration properties for the object store and its various implementations"
                 singleton="true">

            <plugin-configuration>
                <c:simple-property name="objectName" readOnly="true" default="jboss.jta:name=ActionStoreObjectStoreEnvironmentBean"/>
                <c:simple-property name="nameTemplate" default="ObjectStore Configuration"/>
                <c:simple-property name="descriptionTemplate" default="Configuration properties for the object store and its various implementations"/>
                <c:simple-property name="Version" default="0.2" readOnly="true"/>
                <c:simple-property name="version" default="x0.2" readOnly="true"/>
            </plugin-configuration>

            <resource-configuration>
                <c:simple-property name="CacheStoreSize" type="integer" displayName="CacheStoreSize" required="false" readOnly="true" description="Returns the maximum allowed size, in bytes, of the cache store's in-memory cache."/>
                <c:simple-property name="CacheStoreSync" type="boolean" displayName="CacheStoreSync" required="false" readOnly="true" description="Returns true if writes to the objectstore should include a disk sync. Unlikely to be worthwile since the store caches state in memory anyhow."/>
                <c:simple-property name="CacheStoreRemovedItems" type="integer" displayName="CacheStoreRemovedItems" required="false" readOnly="true" description="Returns the maximum number of removed items that may be held in the cache before being purged."/>
                <c:simple-property name="CacheStoreScanPeriod" type="integer" displayName="CacheStoreScanPeriod" required="false" readOnly="true" description="Returns the interval on which the cache will wake and process outstanding work. Default: 120000 milliseconds"/>
                <c:simple-property name="CacheStoreWorkItems" type="integer" displayName="CacheStoreWorkItems" required="false" readOnly="true" description="Returns the maximum number of outstanding writes that may be held in the cache. Default: 100"/>
                <c:simple-property name="CacheStoreHash" type="integer" displayName="CacheStoreHash" required="false" readOnly="true" description="Returns the number of hash buckets used for the cache work queue. Default: 128"/>
                <c:simple-property name="LocalOSRoot" type="string" displayName="LocalOSRoot" required="false" readOnly="true" description="Returns the local ObjectStore root directory name. This should be a path element, not a complete path. Default: defaultStore"/>
                <c:simple-property name="ObjectStoreDir" type="string" displayName="ObjectStoreDir" required="false" readOnly="true" description="Returns the ObjectStore directory path. Default: {user.dir}/ObjectStore"/>
                <c:simple-property name="ObjectStoreSync" type="boolean" displayName="ObjectStoreSync" required="false" readOnly="true" description="Returns true if ObjectStore operations should be synched to disk. Note that this value may be overridden by store implementation specific configuration. See also: TransactionSync Default: true"/>
                <c:simple-property name="ObjectStoreType" type="string" displayName="ObjectStoreType" required="false" readOnly="true" description="Returns the symbolic name for the ObjectStore implementation. Default: ShadowNoFileLockStore TODO test"/>
                <c:simple-property name="HashedDirectories" type="integer" displayName="HashedDirectories" required="false" readOnly="true" description="Returns the number of directories over which the ObjectStore contents will be distributed. Splitting the contents is important for performance on some file systems, as it reduces chain length (number of items in a directory) and directory lock contention. Default: 255"/>
                <c:simple-property name="TransactionSync" type="boolean" displayName="TransactionSync" required="false" readOnly="true" description="Returns true if transaction log operations should be synched to disk. Default: true"/>
                <c:simple-property name="Share" type="integer" displayName="Share" required="false" readOnly="true" description="Returns the share mode for the ObjectStore, i.e., is this being shared between VMs? Default: ObjectStore.OS_UNKNOWN"/>
                <c:simple-property name="HierarchyRetry" type="integer" displayName="HierarchyRetry" required="false" readOnly="true" description="Returns the maximum number of attempts which may be made to create a file path in the store. Default: 100"/>
                <c:simple-property name="HierarchyTimeout" type="integer" displayName="HierarchyTimeout" required="false" readOnly="true" description="Returns true if the LogStore should write removal records synchronously. Disabling this may increase performance at the cost of recovery complexity. Default: true"/>
                <c:simple-property name="SynchronousRemoval" type="boolean" displayName="SynchronousRemoval" required="false" readOnly="true" description="Returns the time in milliseconds to wait between file creation retries. Default: 100 milliseconds."/>
                <c:simple-property name="TxLogSize" type="long" displayName="TxLogSize" required="false" readOnly="true" description="Returns the default size of the LogStore file, in bytes. Default: 10MB"/>
                <c:simple-property name="PurgeTime" type="long" displayName="PurgeTime" required="false" readOnly="true" description="Returns the purge interval for the LogStore, in milliseconds. Default: 100000 milliseconds"/>
            </resource-configuration>
        </service>

        <service name="Transaction"
                 discovery="TransactionDiscovery"
                 class="TransactionComponent"
                 createDeletePolicy="delete-only"
                 description="Completing Transactions"
                 singleton="false">

            <plugin-configuration>
                <c:simple-property name="Version" default="0.2" readOnly="true"/>
                <c:simple-property name="description" default="A Terminating Transaction" readOnly="true"/>
            </plugin-configuration>

            <operation name="remove" displayName="Remove Transaction" description="Tell the Transaction Manager to remove this action and all its participants">
                <results><c:simple-property name="operationResult" type="string" description="Indication of whether the transaction was removed"/></results>
            </operation>

            <metric property="CreationTime"
                    displayName="CreationTime"
                    description="Time when the txn was prepared"
                    dataType="trait" displayType="summary"/>
            <metric property="AgeInSeconds"
                    displayName="AgeInSeconds"
                    description="The elapsed time since prepare was called on this transaction"
                    units="seconds"
                    dataType="trait" displayType="summary"/>

            <service name="Participant"
                     discovery="ParticipantDiscovery"
                     class="ParticipantComponent"
                     singleton="false">

                <plugin-configuration>
                    <c:simple-property name="Version" default="0.2" readOnly="true"/>
                    <c:simple-property name="description" default="A Transaction Participant" readOnly="true"/>
                </plugin-configuration>

                <operation name="setStatus" displayName="Clear Heuristic" description="Modify the status of this participant. This operation is most useful in
                     those cases where the participant generated a heuristic  outcome and the administrator wants the Transaction manager to re-run phase 2 of
                     the commitment protocol.">
                    <parameters>
                        <c:simple-property required="true" name="status" displayName="New status">
                            <c:property-options>
                                <c:option value="PREPARED" default="true"/>
                                <c:option value="HEURISTIC"/>
                            </c:property-options>
                        </c:simple-property>
                    </parameters>
                    <results><c:simple-property name="operationResult" type="string" description="Indication of whether the status was modified"/></results>
                </operation>

                <metric property="Status"
                        displayName="Status"
                        description="Reports the commitment status of this participant (can be one of Pending, Prepared, Failed, Heuristic or Readonly)"
                        dataType="trait" displayType="summary"/>
                <metric property="Type"
                        displayName="Type"
                        description="The record type used for storing this transaction"
                        dataType="trait" displayType="detail"/>
                <metric property="ClassName"
                        displayName="XA Resource Class Name"
                        description="The java type that implements this XAResource"
                        dataType="trait" displayType="detail"/>
                <metric property="EisProductName"
                        displayName="JNDI Name"
                        description="JNDI name of the JCA resource"
                        dataType="trait" displayType="summary"/>
                <metric property="EisProductVersion"
                        displayName="Product Version"
                        description="JCA product version"
                        dataType="trait" displayType="summary"/>
                <metric property="Timeout"
                        displayName="Timeout"
                        description="The number of seconds before the resource can rollback the branch"
                        units="seconds" dataType="trait" displayType="detail"/>
            </service>
        </service>
    </service>
</plugin>
