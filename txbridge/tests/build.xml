<?xml version="1.0" encoding="UTF-8"?>

<!--
 * JBoss, Home of Professional Open Source
 * Copyright 2010, Red Hat, Inc. and/or its affiliates,
 * and individual contributors as indicated by the @author tags.
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * (C) 2010
 * @author JBoss, by Red Hat.
-->

<project name="TxBridgeTests" default="dist" basedir=".">
	<description>
		JBossTS Transaction Bridge Test Suite
	</description>

    <property name="jboss.home" location="/home/jhalli/IdeaProjects/jboss/jbossas_trunk/build/target/jboss-6.0.0-SNAPSHOT"/>
    
    <property name="jbossts.home" location="../.."/>
    <property name="byteman.home" location="${jbossts.home}/build/extlib"/>

    <property name="java.home" location="/usr/local/jdk1.6.0_22/"/>

    <!-- ######################################################################### -->

	<property name="src" location="src"/>
    <property name="dd" location="dd"/>
	<property name="build.dir" location="build"/>

	<path id="build-prereqs">
        <fileset dir="../../build/extlib">
            <include name="jboss-servlet-api_3.0_spec.jar"/>
            <include name="jboss-transaction-api_1.1_spec.jar"/>
            <include name="hibernate-jpa-2.0-api.jar"/>
            <include name="jboss-ejb-api_3.1_spec.jar"/>
            <include name="junit.jar"/>
            <include name="commons-httpclient.jar"/>
            <include name="commons-logging.jar"/>
            <include name="commons-codec.jar"/>
            <include name="jboss-server-manager.jar"/>
            <include name="jboss-logging.jar"/>
            <include name="jnp-client.jar"/>
            <include name="byteman.jar"/>
            <include name="byteman-dtest.jar"/>
        </fileset>

        <fileset dir="${jbossts.home}/install/lib">
            <include name="jbossjta.jar"/>
            <include name="jbossjts.jar"/>
        </fileset>

        <fileset dir="${jbossts.home}/XTS/xts-install">
            <include name="lib/jbossxts-api.jar"/>
            <include name="tests/localjunit.jar"/>
        </fileset>

        <pathelement location="../build/txbridge.jar"/>

        <pathelement location="${jboss.home}/client/jboss-system-client.jar"/>

        <!--<pathelement location="/home/jhalli/IdeaProjects/jboss/jbossas_trunk/build/target/jboss-6.0.0-SNAPSHOT/client/jboss-system-client.jar"/>-->

	</path>

	<target name="clean" description="clean up">
		<delete dir="${build.dir}"/>
	</target>

	<target name="init">
		<tstamp/>
		<mkdir dir="${build.dir}"/>
	</target>

	<target name="compile" depends="init"
			description="compile the source ">
		<mkdir dir="${build.dir}/classes"/>
		<javac srcdir="${src}" destdir="${build.dir}/classes" debug="true" includeantruntime="false">
			<classpath refid="build-prereqs"/>
		</javac>
	</target>

    <target name="dist" depends="compile"
			description="generate the distribution">

        <copy file="dd/inbound/jaxws-handlers-server.xml"
              todir="${build.dir}/classes/org/jboss/jbossts/txbridge/tests/inbound/service"/>
        <jar destfile="${build.dir}/txbridge-inbound-tests-service.jar">
			<fileset dir="${build.dir}/classes">
				<include name="org/jboss/jbossts/txbridge/tests/inbound/service/*"/>
                <include name="org/jboss/jbossts/txbridge/tests/inbound/utility/*"/>
			</fileset>
            <metainf dir="dd/inbound">
                <include name="jboss-beans.xml"/>
            </metainf>
		</jar>

        <war warfile="${build.dir}/txbridge-inbound-tests-client.war" webxml="dd/inbound/web.xml">
			<classes dir="${build.dir}/classes">
                <include name="org/jboss/jbossts/txbridge/tests/inbound/client/*"/>
			</classes>
		</war>

        <copy file="dd/outbound/jaxws-handlers-server.xml"
              todir="${build.dir}/classes/org/jboss/jbossts/txbridge/tests/outbound/service"/>
        <war warfile="${build.dir}/txbridge-outbound-tests-service.war" webxml="dd/outbound/service-web.xml">
			<classes dir="${build.dir}/classes">
				<include name="org/jboss/jbossts/txbridge/tests/outbound/service/*"/>
                <include name="org/jboss/jbossts/txbridge/tests/outbound/utility/*"/>
			</classes>
            <webinf dir="dd/outbound">
                <include name="jboss-beans.xml"/>
            </webinf>
		</war>

        <war warfile="${build.dir}/txbridge-outbound-tests-client.war" webxml="${dd}/outbound/web.xml">
			<classes dir="${build.dir}/classes">
                <include name="org/jboss/jbossts/txbridge/tests/outbound/client/*"/>
			</classes>
		</war>

        <jar destfile="${build.dir}/byteman-test-server.jar">
            <fileset dir="${build.dir}/classes">
                <include name="org/jboss/jbossts/txbridge/tests/inbound/junit/*.class"/>
            </fileset>
        </jar>
	</target>

    <!-- Note: running tests requires JBossAS to be started and the relevant artifacts
        (XTS, txbridge, test -client and -service) to be deployted in it. Additionally,
        the AS needs to be running with byteman installed e.g.

        export JAVA_OPTS="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5006 -Xmx1024m -javaagent:/home/jhalli/IdeaProjects/jboss/jbossts_trunk/build/extlib/byteman.jar=port:9091,listener:true,sys:/home/jhalli/IdeaProjects/jboss/jbossts_trunk/build/extlib/byteman-dtest.jar -Dorg.jboss.byteman.debug=true -Dorg.jboss.byteman.verbose=true -Dorg.jboss.byteman.contrib.dtest.rmiregistry.port=1199"
    -->


    <target name="run-inbound-tests" depends="compile">
        <run.tests.macro>
            <tests>
                <fileset dir="src" includes="**/inbound/**/BasicTests.java">
                </fileset>
            </tests>
        </run.tests.macro>
    </target>

    <target name="run-inbound-crashrec-tests" depends="compile">
        <run.tests.macro>
            <tests>
                <fileset dir="src" includes="**/inbound/**/CrashRecoveryTests.java">
                </fileset>
            </tests>
        </run.tests.macro>
    </target>

    <target name="run-outbound-tests" depends="compile">
        <run.tests.macro>
            <tests>
                <fileset dir="src" includes="**/outbound/**/BasicTests.java">
                </fileset>
            </tests>
        </run.tests.macro>
    </target>

    <target name="run-outbound-crashrec-tests" depends="compile">
        <run.tests.macro>
            <tests>
                <fileset dir="src" includes="**/outbound/**/CrashRecoveryTests.java">
                </fileset>
            </tests>
        </run.tests.macro>
    </target>

    <macrodef name="run.tests.macro">

        <attribute name="showoutput" default="true"/>
        <element name="tests"/>
        <element name="additional.classpath" optional="true"/>
        <element name="additional.jvmargs" optional="true"/>

        <sequential>

        <mkdir dir="${build.dir}/testresults"/>
        <junit printsummary="yes" fork="yes" dir="${build.dir}" showoutput="@{showoutput}" includeantruntime="true">
            <formatter type="xml"/>
            <classpath>
                <path refid="build-prereqs"/>
                <pathelement location="${build.dir}/classes"/>
                <additional.classpath/>
            </classpath>

            <batchtest haltonerror="yes" haltonfailure="yes" fork="yes" todir="${build.dir}/testresults">
                <tests/>
            </batchtest>

            <jvmarg value="-DJAVA_HOME=${java.home}"/>
            <jvmarg value="-DJBOSS_HOME=${jboss.home}"/>
            <jvmarg value="-DBYTEMAN_HOME=${byteman.home}"/>
            <jvmarg value="-DSERVER_NAME=${jbossas.server}"/>

            <jvmarg value="-Djava.rmi.server.codebase=file://build/classes/"/>
            <!--<jvmarg value="-Xdebug"/>-->
            <!--<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=5005"/>-->
	        <additional.jvmargs/>
        </junit>
        </sequential>

    </macrodef>

    <!-- ######################################################################### -->

    <property name="jbossas.server" value="default"/>

    <target name="deploy-inbound-service" depends="dist" description="deploy EJB to JBossAS">
        <copy file="${build.dir}/txbridge-inbound-tests-service.jar"
              todir="${jboss.home}/server/${jbossas.server}/deploy"
              overwrite="true"/>
    </target>

    <!-- http://localhost:8080/txbridge-inbound-tests-client/testclient -->
    <target name="deploy-inbound-client" depends="dist" description="deploy Servlet to JBossAS">
        <copy file="${build.dir}/txbridge-inbound-tests-client.war"
              todir="${jboss.home}/server/${jbossas.server}/deploy"
              overwrite="true"/>
    </target>

    <target name="deploy-outbound-service" depends="dist" description="deploy WS to JBossAS">
        <copy file="${build.dir}/txbridge-outbound-tests-service.war"
              todir="${jboss.home}/server/${jbossas.server}/deploy"
              overwrite="true"/>
    </target>

    <!-- http://localhost:8080/txbridge-outbound-tests-client/testclient -->
    <target name="deploy-outbound-client" depends="dist" description="deploy Servlet to JBossAS">
        <copy file="${build.dir}/txbridge-outbound-tests-client.war"
              todir="${jboss.home}/server/${jbossas.server}/deploy"
              overwrite="true"/>
    </target>

</project>

