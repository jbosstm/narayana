<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.


  (C) 2005-2006,
  @author JBoss Inc.
-->
<project name="WSCF" default="war" basedir=".">

	<!-- Set module name -->
	<property name="modulename" value="wscf"/>

    <!-- set root before including shared build -->

    <property name="root.dir" location = ".."/>

    <import file="../sharedbuild.xml"/>

    <!-- use $JBOSS_HOME to locate directory for deploy and undeploy -->
    <property  environment="env"/>
    <property  name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property  name="jboss.server" value="default"/>
    <property  name="deploy.dir" value="${jboss.home}/derver/${jboss.server}/deploy}"/>

	<!-- internal paths and jars -->

    <property name="src.dir" value="classes"/>
    <property name="src10.dir" value="classes10"/>
    <property name="src11.dir" value="classes11"/>

	<property name="build.dir" value="build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.classes10.dir" value="${build.dir}/classes10/classes"/>
    <property name="build.classes11.dir" value="${build.dir}/classes11/classes"/>
	<property name="build.lib.dir" value="${build.dir}/lib"/>
	<property name="build.webapps.dir" value="${build.dir}/webapps"/>
	<property name="htdocs.dest" value="${build.dir}/htdocs"/>

	<!-- test path names -->
	<property name="tests.src.dir" value="tests/classes"/>
	<property name="tests.dd.dir" value="tests/dd"/>

	<property name="tests.build.dir" value="tests/build"/>
	<property name="tests.build.classes.dir" value="${tests.build.dir}/classes"/>
	<property name="tests,build.dd.dir" value="${tests.build.dir}/dd"/>
	<property name="tests.build.webapps.dir" value="${tests.build.dir}/webapps"/>
	<property name="tests.build.lib.dir" value="${tests.build.dir}/lib"/>

    <!--sibling module directories and jars -->

    <property name="wsas.build.lib.dir" value="${wsas.dir}/build/lib"/>
    <property name="wsas.tests.build.lib.dir"  value="${wsas.dir}/tests/build/lib"/>
    <property name="wsc.build.lib.dir" value="${ws-c.dir}/build/lib"/>

    <property name="wsas.libs" value="wsas.jar"/>
    <property name="wsc.libs" value="ws-c.jar"/>
    <property name="wsc.api.libs" value="ws-c-api.jar"/>
    <property name="wsc10.libs" value="ws-c10.jar"/>
    <property name="wsc10.api.libs" value="ws-c10-api.jar"/>
    <property name="wsc11.libs" value="ws-c11.jar"/>

    <property name="wscf.resourcebundle" value="wscf_msg_en_US.properties"/>

    <path id="wscf.lib.classpath">
        <path refid="build.classpath"/>
        <fileset dir="${wsas.build.lib.dir}" includes="${wsas.libs}"/>
        <fileset dir="${wsc.build.lib.dir}" includes="${wsc.libs} ${wsc.api.libs}"/>
    </path>

	<!-- tests library and path to library -->
	<property name="tests.libs" value="junit.jar"/>

	<path id="tests.lib.path">
	  <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
        <path refid="wscf.lib.classpath"/>
	</path>

	<!-- Initialisation -->
	<target name="init">
		<!-- Define default build properties -->
		<tstamp>
			<format property="wscf.date" pattern="yyyy/mm/dd hh:mm aa"/>
		</tstamp>
		<!-- Make the destination directory -->
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.classes10.dir}"/>
        <mkdir dir="${build.classes11.dir}"/>
		<mkdir dir="${build.webapps.dir}"/>
	</target>

	<!-- Compilation targets -->
    <target name="compile" depends="compile10, compile11"/>
    <target name="compile11" depends="compile-generic">
		<echo message="Compiling module 1.1 code"/>
		<javac srcdir="${src11.dir}"
                       destdir="${build.classes11.dir}"
                       debug="on">
			<classpath>
                <path>
                    <pathelement path="${build.classes.dir}"/>
                    <pathelement path="${wsc.build.lib.dir}/${wsc11.libs}"/>
                </path>
				<path refid="wscf.lib.classpath"/>
			</classpath>
		</javac>
	</target>
    <target name="compile10" depends="compile-generic">
		<echo message="Compiling module 1.0 code"/>
		<javac srcdir="${src10.dir}"
                       destdir="${build.classes10.dir}"
                       debug="on">
			<classpath>
                <path>
                    <pathelement path="${build.classes.dir}"/>
                    <pathelement path="${wsc.build.lib.dir}/${wsc10.libs}"/>
                    <pathelement path="${wsc.build.lib.dir}/${wsc10.api.libs}"/>
                </path>
				<path refid="wscf.lib.classpath"/>
			</classpath>
		</javac>
	</target>
    <target name="compile-generic" depends="init">
		<echo message="Compiling module generic code"/>
		<javac srcdir="${src.dir}"
                       destdir="${build.classes.dir}"
                       debug="on">
			<classpath>
				<path refid="wscf.lib.classpath"/>
			</classpath>
		</javac>
	</target>

	<!-- htdocs paths -->
	<path id="htdocs.path">
		<pathelement path="classes"/>
	</path>

	<!-- Build htdocs for just mw, or mw and mwlabs -->
	<property name="htdocs.list" value="*"/>

	<target name="war" depends="jar">
	  <war warfile="${build.webapps.dir}/${modulename}10.war" webxml="xml/wscf_web-app.xml"/>
        <war warfile="${build.webapps.dir}/${modulename}11.war" webxml="xml/wscf11_web-app.xml"/>
	</target>

	<!-- Jar targets -->
    <target name="jar" depends="jar11, jar10"/>

    <target name="jar11" depends="jar-generic">
        <copy file="xml/ArjunaCoreHLS.xml"
        tofile="${build.classes11.dir}/com/arjuna/mwlabs/wscf/model/as/coordinator/arjunacore/ArjunaCoreHLS.xml"/>
        <copy file="xml/JTAHLS.xml"
        tofile="${build.classes11.dir}/com/arjuna/mwlabs/wscf/model/as/coordinator/jta/JTAHLS.xml"/>
        <copy file="xml/TwoPhase11HLSImple.xml"
        tofile="${build.classes11.dir}/com/arjuna/mwlabs/wscf11/model/twophase/arjunacore/TwoPhaseHLSImple.xml"/>
        <copy file="xml/Sagas11HLSImple.xml"
        tofile="${build.classes11.dir}/com/arjuna/mwlabs/wscf11/model/sagas/arjunacore/SagasHLSImple.xml"/>

        <jar jarfile="${build.lib.dir}/${modulename}11.jar"
            basedir="${build.classes11.dir}">
        </jar>
    </target>

    <target name="jar10" depends="jar-generic">
        <copy file="xml/ArjunaCoreHLS.xml"
        tofile="${build.classes10.dir}/com/arjuna/mwlabs/wscf/model/as/coordinator/arjunacore/ArjunaCoreHLS.xml"/>
        <copy file="xml/JTAHLS.xml"
        tofile="${build.classes10.dir}/com/arjuna/mwlabs/wscf/model/as/coordinator/jta/JTAHLS.xml"/>
        <copy file="xml/TwoPhaseHLSImple.xml"
        tofile="${build.classes10.dir}/com/arjuna/mwlabs/wscf/model/twophase/arjunacore/TwoPhaseHLSImple.xml"/>
        <copy file="xml/SagasHLSImple.xml"
        tofile="${build.classes10.dir}/com/arjuna/mwlabs/wscf/model/sagas/arjunacore/SagasHLSImple.xml"/>
        <copy file="xml/JTAHLSImple.xml"
        tofile="${build.classes10.dir}/com/arjuna/mwlabs/wscf/model/jta/arjunajta/JTAHLSImple.xml"/>

        <jar jarfile="${build.lib.dir}/${modulename}10.jar"
            basedir="${build.classes10.dir}">
        </jar>
    </target>

    <target name="jar-generic" depends="compile, htdocs, generateresourcebundle">
        <echo message="Building jar files"/>
        <mkdir dir="${build.lib.dir}"/>
        <jar jarfile="${build.lib.dir}/${modulename}.jar"
            basedir="${build.classes.dir}">
        </jar>
    </target>


	<target name="htdocs"
				depends="init">
		<echo message="Building htdocs "/>
		<mkdir dir="${htdocs.dest}"/>

		<javadoc
			sourcepathref="htdocs.path"
			destdir="${htdocs.dest}"
			packagenames="${htdocs.list}"
	        >
			<classpath>
				<path refid="wscf.lib.classpath"/>
				<path path="${src.dir}"/>
			</classpath>
		</javadoc>
	</target>

        <target name="generateresourcebundle">

            <echo message="Generating WSCF Bundle"/>

            <javadoc    packagenames="com.arjuna.*"
                        failonerror="yes"
                        private="yes"
                        defaultexcludes="yes"
                        classpathref="build.classpath">

                <packageset dir="${src.dir}" defaultexcludes="yes">
                  <include name="com/arjuna/**"/>
                </packageset>

                <packageset dir="${src10.dir}" defaultexcludes="yes">
                  <include name="com/arjuna/**"/>
                </packageset>

                <packageset dir="${src11.dir}" defaultexcludes="yes">
                  <include name="com/arjuna/**"/>
                </packageset>

                 <doclet name="com.hp.mw.buildsystem.doclet.resbundledoclet.ResourceBundleDoclet">
                    <path refid="doclet.classpath"/>
                    <param name="-basedir" value="${basedir}/${build.classes.dir}"/>
                    <param name="-resourcebundle" value="${wscf.resourcebundle}"/>
                 </doclet>
            </javadoc>

        </target>

	<!-- test targets -->
	<target name="tests.init">
        <!-- delete the test destination directories -->
        <delete dir="${tests.build.dir}"/>
		<!-- make the test destination directories -->
		<mkdir dir="${tests.build.dir}"/>
		<mkdir dir="${tests.build.classes.dir}"/>
		<mkdir dir="${tests,build.dd.dir}"/>
		<mkdir dir="${tests.build.webapps.dir}"/>
		<mkdir dir="${tests.build.lib.dir}"/>
	</target>
    
    <!-- this assumes the required libs have already been built-->
	<target name="tests.compile" depends="tests.init">
	  <javac destdir="${tests.build.classes.dir}" debug="yes" optimize="no">
	    <classpath>
	      <pathelement path="${build.lib.dir}/${modulename}.jar"/>
          <pathelement path="${build.lib.dir}/${modulename}10.jar"/>
          <pathelement path="${build.lib.dir}/${modulename}11.jar"/>
          <pathelement path="${wsc.build.lib.dir}/${wsc10.libs}"/>
          <pathelement path="${wsc.build.lib.dir}/${wsc10.api.libs}"/>
          <pathelement path="${wsc.build.lib.dir}/${wsc11.libs}"/>
	      <path refid="tests.lib.path"/>
	      <path refid="wscf.lib.classpath"/>
	    </classpath>
	    <src path="${tests.src.dir}"/>
	  </javac>
	</target>

    <!-- this assumes the required libs have already been built-->
	<target name="tests.compile11" depends="tests.init">
	  <javac destdir="${tests.build.classes.dir}" debug="yes" optimize="no">
	    <classpath>
	      <pathelement path="${build.lib.dir}/${modulename}.jar"/>
          <pathelement path="${build.lib.dir}/${modulename}11.jar"/>
          <pathelement path="${wsc.build.lib.dir}/${wsc11.libs}"/>
	      <path refid="tests.lib.path"/>
	      <path refid="wscf.lib.classpath"/>
	    </classpath>
	    <src path="${tests.src.dir}"/>
        <exclude name="com/arjuna/wscf/**"/>
	  </javac>
	</target>

    <target name="tests.webapps" depends="tests.compile">
        <copy file="${tests.dd.dir}/wscf-tests_web-app.xml" tofile="${tests,build.dd.dir}/web-app.xml">
        </copy>
        <copy file="${tests.dd.dir}/wscf11-tests_web-app.xml" tofile="${tests,build.dd.dir}/web-app11.xml">
        </copy>
        <jar jarfile="${tests.build.webapps.dir}/wscf-tests.jar">
            <fileset dir="${tests.build.classes.dir}"/>
        </jar>
        <war warfile="${tests.build.webapps.dir}/wscf-tests.war" webxml="${tests,build.dd.dir}/web-app.xml"/>
        <war warfile="${tests.build.webapps.dir}/wscf11-tests.war" webxml="${tests,build.dd.dir}/web-app11.xml"/>
        <ear earfile="${tests.build.webapps.dir}/wscf-tests.ear" appxml="${tests.dd.dir}/wscf-tests_application.xml">
            <!-- we only need to deploy the ext test libs (junit) and
	         the tests war in JBoss AS 5.0. the rest of the XTS
	         code is deployed as a sar and the TS code is deployed
	         in the server lib
	         -->
            <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
            <fileset dir="${tests.build.webapps.dir}" includes="wscf-tests.war wscf11-tests.war wscf-tests.jar"/>
            <fileset dir="${wsas.tests.build.lib.dir}" includes="xts-test-servlet.jar"/>
        </ear>
    </target>

    <target name="tests.webapps11" depends="tests.compile11">
        <copy file="${tests.dd.dir}/wscf11-tests_web-app.xml" tofile="${tests,build.dd.dir}/web-app11.xml">
        </copy>
        <jar jarfile="${tests.build.webapps.dir}/wscf-tests.jar">
            <fileset dir="${tests.build.classes.dir}"/>
        </jar>
        <war warfile="${tests.build.webapps.dir}/wscf11-tests.war" webxml="${tests,build.dd.dir}/web-app11.xml"/>
        <ear earfile="${tests.build.webapps.dir}/wscf-tests.ear" appxml="${tests.dd.dir}/wscf11-tests_application.xml">
            <!-- we only need to deploy the ext test libs (junit) and
	         the tests war in JBoss AS 5.0. the rest of the XTS
	         code is deployed as a sar and the TS code is deployed
	         in the server lib
	         -->
            <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
            <fileset dir="${tests.build.webapps.dir}" includes="wscf11-tests.war wscf-tests.jar"/>
            <fileset dir="${wsas.tests.build.lib.dir}" includes="xts-test-servlet.jar"/>
        </ear>
    </target>

    <target name="tests.deploy" depends="tests.webapps, tests.undeploy">
        <copy file="${tests.build.webapps.dir}/wscf-tests.ear" tofile="${deploy.dir}/wscf-tests.ear"/>
    </target>

    <target name="tests.deploy11" depends="tests.webapps11, tests.undeploy">
        <copy file="${tests.build.webapps.dir}/wscf-tests.ear" tofile="${deploy.dir}/wscf-tests.ear"/>
    </target>

    <target name="tests.undeploy">
        <delete file="${deploy.dir}/wscf-tests.ear"/>
    </target>

    <!-- Clean targets -->
    <target name="clean">
        <echo message="Cleaning module"/>
        <delete dir="${build.classes.dir}"/>
        <delete dir="${build.dir}"/>
        <delete dir="${htdocs.dest}"/>
        <delete file="${build.lib.dir}/${modulename}.jar"/>
        <!-- delete the test destination directories -->
        <delete dir="${tests.build.dir}"/>
    </target>

    <!-- production target for 1.1 tests -->
    <target name="tests-11" depends="tests.webapps11"/>
    <target name="tests-both" depends="tests.webapps"/>
</project>
