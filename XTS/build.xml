<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.


  (C) 2005-2006,
  @author JBoss Inc.
-->
<project name="XTS" default="build" basedir=".">

    <import file="sharedbuild.xml"/>

	<!-- Initialisation -->
	<target name="init">
		<!-- Define default build properties -->
		<tstamp>
		<format property="xts.date" pattern="yyyy/MMM/dd HH:mm"/>
	  	</tstamp>

		<property name="xts.installationdirectory" location="xts-install"/>
		<property name="xts.sourceid" value="unknown"/>
		<property name="xts.version" value="unknown"/>

		<property name="xts.builder" value="JBoss Inc. [${user.name}] (${os.name} ${os.version})"/>
		<property name="xts.notes" value=""/>

		<echo message="Source ID = ${xts.sourceid}"/>
		<echo message="Version   = ${xts.version}"/>
		<echo message="Builder   = ${xts.builder}"/>
		<echo message="Date      = ${xts.date}"/>
		<echo message="Notes     = ${xts.notes}"/>

		<!-- Compile with debugging? -->
		<property name="xts.debug" value="yes"/>

		<!-- Compile with deprecation? -->
		<property name="xts.deprecation" value="no"/>

		<property name="xts.htdocs.list" value="com.arjuna.mw.wst.*, com.arjuna.wsc.*, com.arjuna.wst.*, com.arjuna.mw.wst11.*, com.arjuna.wsc11.*, com.arjuna.wst11.* "/>

	</target>

    <target name="init.install.dir">
        <mkdir dir="${xts.installationdirectory}"/>
    </target>

    <target name="init.emma.report.dir" if="@{includeemma}">
        <mkdir dir="${emma.report.dir}"/>
    </target>

	<!-- Project targets - must add all module names to each target -->
    <target name="build-projects" depends="init, init.install.dir,
					    init.emma.report.dir, wsas.build,
                                            ws-c.build, wscf.build,
                                            ws-t.build, wstx.build,
                                            recovery.build, bridge.build, htdocs">

    </target>

    <!-- sar build target - note, requires prior build and *install* of the projects -->
    <target name="build-sar" depends="install-projects, sar.build">

	</target>

    <target name="build-tests" depends="install-projects, tests.build">

	</target>

    <target name="build-interop-tests" depends="install-projects, interop-tests.build">

	</target>

    <property name="xts.htdocs.dest" location="htdocs"/>

    <target name="htdocs" depends="init">
		<echo message="Building htdocs "/>
		<mkdir dir="${xts.htdocs.dest}"/>

		<path id="xts.htdocs.path">
            <pathelement path="${ws-c.dir}/dev/src"/>
            <pathelement path="${ws-t.dir}/dev/src"/>
            <pathelement path="${wstx.dir}/classes"/>
            <pathelement path="${ws-c.dir}/dev/src11"/>
            <pathelement path="${ws-t.dir}/dev/src11"/>
            <pathelement path="${wstx.dir}/classes11"/>
            <pathelement path="${ws-c.dir}/dev/src10"/>
            <pathelement path="${ws-t.dir}/dev/src10"/>
            <pathelement path="${wstx.dir}/classes10"/>
            <pathelement path="${recovery.dir}/src"/>
		</path>

		<path id="xts.lib.classpath">
			<path refid="build.classpath"/>
			<fileset dir="${ws-c.dir}/build/lib" includes="*.jar"/>
			<fileset dir="${wscf.dir}/build/lib" includes="*.jar"/>
			<fileset dir="${ws-t.dir}/build/lib" includes="*.jar"/>
            <fileset dir="${wstx.dir}/build/lib" includes="*.jar"/>
            <fileset dir="${recovery.dir}/build/lib" includes="*.jar"/>
		</path>

		<javadoc
			sourcepathref="xts.htdocs.path"
			destdir="${xts.htdocs.dest}"
			packagenames="${xts.htdocs.list}"
		>
			<classpath>
				<path refid="xts.lib.classpath"/>
			</classpath>
		</javadoc>
	</target>

	<target name="install-projects" depends="build-projects">
		<echo message="Installation directory : ${xts.installationdirectory}"/>

		<echo message="Installing jar files"/>
		<mkdir dir="${xts.installationdirectory}/lib"/>
		<copy todir="${xts.installationdirectory}/lib">
			<fileset dir="${wsas.dir}/build/lib" includes="*.jar"/>
			<fileset dir="${ws-c.dir}/build/lib" includes="*.jar"/>
			<fileset dir="${wscf.dir}/build/lib" includes="*.jar"/>
			<fileset dir="${ws-t.dir}/build/lib" includes="*.jar"/>
            <fileset dir="${wstx.dir}/build/lib" includes="*.jar"/>
            <fileset dir="${recovery.dir}/build/lib" includes="*.jar"/>
            <fileset dir="${bridge.dir}/build/lib" includes="*.jar"/>
		</copy>

		<echo message="Installing webapps"/>
		<mkdir dir="${xts.installationdirectory}/webapps"/>
		<copy todir="${xts.installationdirectory}/webapps">
			<fileset dir="WS-C/build/webapps"/>
			<fileset dir="WSCF/build/webapps"/>
			<fileset dir="WS-T/build/webapps"/>
			<fileset dir="WSTX/build/webapps"/>
		</copy>

        <echo message="Installing configuration"/>
        <mkdir dir="${xts.installationdirectory}/conf"/>
        <copy todir="${xts.installationdirectory}/conf">
            <fileset  dir="${config.dir}" includes="xts-properties.xml, xts-properties11.xml"/>
        </copy>

		<echo message="Installing htdocs"/>
		<mkdir dir="${xts.installationdirectory}/docs/api"/>
		<copy todir="${xts.installationdirectory}/docs/api">
			<fileset dir="${xts.htdocs.dest}"/>
		</copy>

        <if>
            <istrue value="${publican}" />
            <then>
                <delete dir="${publican.build.dir}" failonerror="false"/>
                <exec dir="docs/Transactions_XTS_Programmers_Guide" executable="publican">
                    <arg value="build"/>
                    <arg value="--langs=en-US"/>
                    <arg value="--formats=pdf,html"/>
                </exec>
            </then>
        </if>

		<copy todir="${xts.installationdirectory}/docs" flatten="true">
            <fileset dir="${publican.build.dir}" includes="*/en-US/pdf/*.pdf"/>
		</copy>

		<echo message="Installing licences"/>
        <mkdir dir="${xts.installationdirectory}/lib/ext"/>
		<copy todir="${xts.installationdirectory}/lib/ext">
			<fileset dir="${basedir}" includes="third_party_licenses.txt"/>
		</copy>

    </target>

    <target name="install-demo">
        <echo message="Installing demo"/>
        <mkdir dir="${xts.installationdirectory}/demo"/>
        <!-- overlay the demo app onto the install -->
        <ant dir="${demo.dir}" target="distribution"/>
	</target>

    <target name="install-sar" depends="build-sar">
        <echo message="Installing service archive"/>
        <mkdir dir="${xts.installationdirectory}/sar"/>
        <copy todir="${xts.installationdirectory}/sar">
            <fileset dir="${sar.dir}/build" includes="jbossxts.sar"/>
        </copy>
    </target>

    <target name="install-tests" depends="build-tests">
        <echo message="Installing service tests"/>
        <mkdir dir="${xts.installationdirectory}/tests"/>
        <copy todir="${xts.installationdirectory}/tests">
            <!-- ears providing test servlets -->
            <fileset dir="${wsas.dir}/tests/build/webapps" includes="wsas-tests.ear"/>
            <fileset dir="${wscf.dir}/tests/build/webapps" includes="wscf-tests.ear"/>
            <fileset dir="${ws-c.dir}/tests/build/webapps" includes="ws-c-tests.ear"/>
            <fileset dir="${ws-t.dir}/tests/build/webapps" includes="ws-t-tests.ear"/>
            <fileset dir="${wstx.dir}/tests/build/webapps" includes="wstx-tests.ear"/>
            <!-- xts test servlet jar for use by bridge code -->
            <fileset dir="${wsas.dir}/tests/build/lib" includes="xts-test-servlet.jar"/>
            <!-- ant script and client jar used to exercise servlets-->
            <fileset dir="${localjunit.dir}/build/" includes="localjunit.jar"/>
            <fileset dir="${localjunit.dir}" includes="run-tests.xml"/>
        </copy>
        <zip destfile="${xts.installationdirectory}/tests/jbossxts-tests.zip">
          <fileset dir="${xts.installationdirectory}/tests" includes="*.ear *.jar *.xml"/>
        </zip>
    </target>

    <target name="install-interop-tests" depends="build-interop-tests">
        <echo message="Installing service tests"/>
        <mkdir dir="${xts.installationdirectory}/interop-tests"/>
        <copy todir="${xts.installationdirectory}/interop-tests">
            <!-- wars providing test servlets -->
            <fileset dir="${interop.sc007.dir}/build/lib" includes="sc007.war"/>
            <fileset dir="${interop.wstx11.dir}/build/lib" includes="interop11.war"/>
            <!-- ant script and client jar used to exercise servlets-->
            <fileset dir="${localjunit.dir}/build/" includes="localjunit.jar"/>
            <fileset dir="${localjunit.dir}" includes="run-interop-tests.xml"/>
        </copy>
	<zip destfile="${xts.installationdirectory}/interop-tests/jbossxts-interop-tests.zip">
	  <fileset dir="${xts.installationdirectory}/interop-tests" includes="*.war *.jar *.xml"/>
	</zip>
    </target>

    <!-- build target just builds the main projects but not the sar since
        the latter cannot be built until after the projects have been installed -->
    <target name="build" depends="build-projects"/>

    <!-- install target builds and installs the main projects
        then builds and installs the sar then installs the demo -->
    <target name="install" depends="install-sar, install-tests, install-interop-tests, install-demo"/>

    <!-- TODO why do we need to depend on init here? -->
    <target name="clean" depends="init,
		wsas.clean,
		ws-c.clean,
		wscf.clean,
		ws-t.clean,
		wstx.clean,
		wstx.clean,
		recovery.clean,
		sar.clean,
		localjunit.clean,
		interop-tests.clean">

		<delete dir="${xts.htdocs.dest}"/>
		<delete dir="${xts.installationdirectory}"/>

        <ant dir="${demo.dir}" target="clean"/>

	</target>


	<!-- Module targets -->
	<target name="wsas.build">
		<ant dir="${wsas.dir}" inheritall="false">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
	</target>

	<target name="ws-c.build">
		<ant dir="${ws-c.dir}" inheritall="false">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
	</target>

	<target name="wscf.build">
		<ant dir="${wscf.dir}" inheritall="false">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
	</target>

	<target name="ws-t.build">
		<ant dir="${ws-t.dir}" inheritall="false">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
       </ant>
	</target>

    <target name="wstx.build">
        <ant dir="${wstx.dir}" inheritall="false">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
    </target>

    <target name="recovery.build">
        <ant dir="recovery">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
    </target>

    <target name="bridge.build">
        <ant dir="${bridge.dir}">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
    </target>

    <target name="sar.build">
        <ant dir="${sar.dir}">
            <property name="sartype" value="${sartype}"/> 
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
    </target>

    <target name="tests.build">
        <ant dir="${wsas.dir}" target="tests">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
        <ant dir="${wscf.dir}" target="tests">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
        <ant dir="${ws-c.dir}" target="tests">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
        <ant dir="${ws-t.dir}" target="tests">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
        <ant dir="${wstx.dir}" target="tests">
            <property name="sartype" value="${sartype}"/>
            <property name="emma.enabled" value="${emma.enabled}"/>
        </ant>
        <ant dir="${localjunit.dir}" target="all">
        </ant>
    </target>

    <target name="interop-tests.build">
        <property name="xts.home" location="${xts.installationdirectory}"/>
        <ant dir="${interop.sc007.dir}" target="war"/>
        <ant dir="${interop.wstx11.dir}" target="war"/>
    </target>

	<target name="wsas.clean">
		<ant dir="${wsas.dir}" target="clean"/>
	</target>

	<target name="ws-c.clean">
		<ant dir="${ws-c.dir}" target="clean"/>
	</target>

	<target name="wscf.clean">
		<ant dir="${wscf.dir}" target="clean"/>
	</target>

	<target name="ws-t.clean">
		<ant dir="${ws-t.dir}" target="clean"/>
	</target>

    <target name="wstx.clean">
        <ant dir="${wstx.dir}" target="clean"/>
    </target>

    <target name="recovery.clean">
        <ant dir="${recovery.dir}" target="clean"/>
    </target>

    <target name="sar.clean">
        <ant dir="${sar.dir}" target="clean"/>
    </target>

    <target name="localjunit.clean">
        <ant dir="${localjunit.dir}" target="clean"/>
    </target>

    <target name="interop-tests.clean">
        <property name="xts.home" location="${xts.installationdirectory}"/>
        <ant dir="${interop.sc007.dir}" target="clean"/>
        <ant dir="${interop.wstx11.dir}" target="clean"/>
    </target>

</project>
