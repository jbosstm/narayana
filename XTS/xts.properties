# JBoss, Home of Professional Open Source
# Copyright 2010, Red Hat and individual contributors
# as indicated by the @author tags.
# See the copyright.txt in the distribution for a full listing
# of individual contributors.
# This copyrighted material is made available to anyone wishing to use,
# modify, copy, or redistribute it subject to the terms and conditions
# of the GNU Lesser General Public License, v. 2.1.
# This program is distributed in the hope that it will be useful, but WITHOUT A
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
# You should have received a copy of the GNU Lesser General Public License,
# v.2.1 along with this distribution; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
# MA  02110-1301, USA.
#
# @author JBoss Inc.


# XTS property file
#
# This property file is used to configure some XTS properties which are
# not normally editable without also modifying the XTS build and/or
# source code. It also provides a means of specifying values for some
# editable configuration properties when using XTS outside of JBoss AS.
# If you intend to use XTS inside JBoss AS then you should configure
# these properties in file META-INF/jboss-beans.xml in the deployable
# XTS sar.
#
# bind address/ports - these are used to construct the URLS handed out
# to provide references to XTS services. These URLs can refer to services
# deployed in the client, coordinator or participant web service container.
#
# in JBoss AS these properties will be injected by the microcontainer
# using values derived from service JBoss Web as specified in file
# jboss-beans.xml
#
org.jboss.jbossts.xts11.bind.address=localhost
org.jboss.jbossts.xts11.bind.port=8080
org.jboss.jbossts.xts11.bind.port.secure=8443

org.jboss.jbossts.xts.bind.address=localhost
org.jboss.jbossts.xts.bind.port=8080
org.jboss.jbossts.xts.bind.port.secure=8080

# coordinator url - these are used in the client container only to
# construct the url used to address the coordinator contacted under a
# WSAT or WSBA begin call. if these are not set the 1.1 URL defaults to
# http://<bind.address>:<bind.port>/ws-c11/ActivationService
# using the properties defined above to fill in the address and port
# the 1.0 url defaults to
# http://<bind.address>:<bind.port>/ws-c/soap/ActivationCoordinator
# if the coordinatorURL property is not set then a URL is constructed
# using whichever of the componnet values have been set and defaulting
# the remaining components. the bind properties above are used to
# default the address and port. the scheme defaults to http. the
# path values will only need to be reset if using a non-JBoss
# coordinator or if the XTS coordinator is deployed in a container
# other than JBoss AS which maps the coordinator service endpoints
# using a different path.

# in JBoss AS these properties will be injected by the microcontainer
# using values specified in file jboss-beans.xml

# properties for 1.1 implementation
# org.jboss.jbossts.xts11.coordinatorURL=http://localhost:8080/ws-c11/ActivationService
# org.jboss.jbossts.xts11.coordinator.scheme=http
# org.jboss.jbossts.xts11.coordinator.host=localhost
# org.jboss.jbossts.xts11.coordinator.port=8080
# org.jboss.jbossts.xts11.coordinator.path=ws-c11/ActivationService


# properties for 1.0 implementation
# org.jboss.jbossts.xts.coordinatorURL=http://localhost:8080/ws-c10/soap/ActivationCoordinator
# org.jboss.jbossts.xts.coordinator.scheme=http
# org.jboss.jbossts.xts.coordinator.host=localhost
# org.jboss.jbossts.xts.coordinator.port=8080
# org.jboss.jbossts.xts.coordinator.path=ws-c10/soap/ActivationCoordinator

# user transaction and transaction manager implementation mappings
# these are used in the client container only to identify the classes
# used to implement the WSAT and WSBA client APIs. they will not
# normally be reconfigured since doing so requires modifing the
# implementation to include new versions of these classes.

# mappings for the 1.1 implementation
#

org.jboss.jbossts.xts.wsat11.UserTransaction=com.arjuna.mwlabs.wst11.at.remote.UserTransactionImple
org.jboss.jbossts.xts.wsba11.UserBusinessActivity=com.arjuna.mwlabs.wst11.ba.remote.UserBusinessActivityImple
org.jboss.jbossts.xts.wsat11.TransactionManager=com.arjuna.mwlabs.wst11.at.remote.TransactionManagerImple
org.jboss.jbossts.xts.wsba11.BusinessActivityManager=com.arjuna.mwlabs.wst11.ba.remote.BusinessActivityManagerImple

# mappings for the 1.0 implementation
#
# these should only be defined if the 1.0 implementation
# is deployed
#

org.jboss.jbossts.xts.wsat.UserTransaction=com.arjuna.mwlabs.wst.at.remote.UserTransactionImple
org.jboss.jbossts.xts.wsba.UserBusinessActivity=com.arjuna.mwlabs.wst.ba.remote.UserBusinessActivityImple
org.jboss.jbossts.xts.wsat.TransactionManager=com.arjuna.mwlabs.wst.at.remote.TransactionManagerImple
org.jboss.jbossts.xts.wsba.BusinessActivityManager=com.arjuna.mwlabs.wst.ba.remote.BusinessActivityManagerImple

# protocol mappings - these will not normally be reconfigured as they
# are used to establish mappings from coordination service types to
# their implementation classes and from coordination types to
# coordination context factories.
#
# coordination service implementation classes must be tagged with an
# HLSProvider annotation identifying the implemented service type.
# the annotation must also declare the coordination type of the
# coordination protocol supported by the service.
#
# context factory classes must be tagged with a ContextProvider
# annotation identifying the coordination type and implementation
# class of the contexts created by the factory. the annotation must
# also declare the service type for which the context is appropriate.
#

# protocol definitions for 1.1 implementation
#
org.jboss.jbossts.xts.protocolImplementation1=com.arjuna.mwlabs.wscf11.model.twophase.arjunacore.TwoPhaseHLSImple
org.jboss.jbossts.xts.protocolImplementation2=com.arjuna.mwlabs.wscf11.model.sagas.arjunacore.SagasHLSImple

# these identify the context factory implementation classes
#
org.jboss.jbossts.xts.protocolImplementation3=com.arjuna.mwlabs.wst11.at.ContextFactoryImple
org.jboss.jbossts.xts.protocolImplementation4=com.arjuna.mwlabs.wst11.ba.ContextFactoryImple

# protocol definitions for 1.0 implementation
#
# these should only be defined if the 1.0 implementation
# is deployed
#
# these identify the HLS implementation classes
#
org.jboss.jbossts.xts.protocolImplementation5=com.arjuna.mwlabs.wscf.model.twophase.arjunacore.TwoPhaseHLSImple
org.jboss.jbossts.xts.protocolImplementation6=com.arjuna.mwlabs.wscf.model.sagas.arjunacore.SagasHLSImple

# these identify the context factory implementation classes
#
org.jboss.jbossts.xts.protocolImplementation7=com.arjuna.mwlabs.wst.at.ContextFactoryImple
org.jboss.jbossts.xts.protocolImplementation8=com.arjuna.mwlabs.wst.ba.ContextFactoryImple

