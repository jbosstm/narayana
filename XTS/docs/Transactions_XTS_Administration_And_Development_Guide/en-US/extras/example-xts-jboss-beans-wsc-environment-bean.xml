<bean name="XTS:WSCEnvironmentBean" class="org.jboss.jbossts.xts.environment.WSCEnvironmentBean">
  <constructor factoryClass="org.jboss.jbossts.xts.environment.XTSPropertyManager"
               factoryMethod="getWSCEnvironmentBean"/>
  <!-- we need the bind address and port from jboss web -->
  <depends>jboss.web:service=WebServer</depends>
  <depends>jboss:service=TransactionManager</depends>
  . . .
  <!--
      if you want to use a coordinator running in a remote JVM then you can
      simply configure the URL. This will also be necessary if you are using
      a non-JBoss coordination service.
      
      <property name="coordinatorURL11">
         <value>http://10.0.1.99:8080/ws-c11/ActivationService</value>
      </property>
  -->
  <!--
      if you are using a remote JBoss XTS coordinator you can just redefine
      the scheme, address, port or path to the desired value and the ones
      left undefined will be defaulted to use the standard XTS coordinator
      URL elements. So, for example if your XTS coordinator services is
      deployed in another AS on host myhost.myorg.com you only need to define
      property coordinatorAddress11 to have value myhost.myorg.com and the
      coordinator address used by clients will be
      http://myhost.myorg.com:8080/ws-c11/ActivationService n.b. if the remote
      machine is using JBoss XTS then you won't want to redefine the port
      unless you have monkeyed around with the port config in the remote AS. also
      you won't need to change the path unless you have tweaked the deployment
      descriptor to relocate the XTS services.

      <property name="coordinatorScheme11">
         <value>http</value>
      </property>
      <property name="coordinatorAddress11">
         <value>10.0.1.99</value>
      </property>
      <property name="coordinatorPort11">
         <value>9191</value>
      </property>
      <property name="coordinatorPath11">
         <value>ws-c11/ActivationService</value>
      </property>
  -->
</bean>
