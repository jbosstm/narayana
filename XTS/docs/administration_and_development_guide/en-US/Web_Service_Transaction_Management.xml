<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "ArjunaCore_Administration_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter>
  <title>Web Service Transaction Service (XTS) Management</title>
  <para>
    The basic building blocks of a transactional Web Services application include the application itself, the Web
    services that the application consumes, the Transaction Manager, and the transaction participants which support
    those Web services. Although it is likely that different developers will be responsible for each piece, the concepts
    are presented here so that you can see the whole picture. Often, developers produce services, or applications that
    consume services, and system administrators run the transaction-management infrastructure.
  </para>
  
  <section>
    <title>Transaction manager overview</title>
    <para>
      The transaction manager is a Web service which coordinates JBossTS transactions. It is the only software component
      in JBossTS that is designed to be run directly as a network service, rather than to support end-user code. The
      transaction manager runs as a JAXM request/response Web service.
    </para>
    <note>
      <para>
        When starting up an application server instance that has JBossTS transaction manager deployed within it, you may
        see various “error” messages in the console or log. For example 16:53:38,850 ERROR [STDERR] Message Listener
        Service: started, message listener jndi name activationcoordinator". These are for information purposes only and
        are not actual errors.
      </para>
    </note>
  </section>

  
  <section>
    <title>Configuring the transaction manager</title>
    <para>
      You can configure the Transaction Manager and related infrastructure by using three properties files:
      <filename>wscf.xml</filename>, <filename>wst.xml</filename>, and <filename>wstx.xml</filename>.  Each file is
      located in the <filename>conf/</filename> directory. Both the demo application and the stand-alone module rely on
      them for configuration.
    </para>
    <para>
      For the most part the default values in these files are suitable. However, the
      <varname>ObjectStoreEnvironmentBean.objectStoreDir</varname> property, which determines the location of the
      persistent store used to record transaction state, should be modified to suit your environment. The default value
      is <literal>C:/temp/ObjectStore</literal>. For production environments this directory should reside on
      fault-tolerant media such as a RAID array.
    </para>
    <para>
      When an application uses a standalone coordinator, you must enable and modify two additional
      properties in <filename>wstx.xml</filename>. These properties are
      <varname>com.arjuna.mw.wst.coordinatorURL</varname> and <varname>com.arjuna.mw.wst.terminatorURL</varname>.  They specify the
      URLs needed by client application to contact the standalone coordinator, and need to specify the correct hostname
      and port for the stand-alone server.
    </para>
    <para>
      JBossTS is extremely modular. To allow flexible deployment of individual components, the same property values
      sometimes need to appear in more than one configuration file. Except in special circumstances, maintain consistent
      values for properties that are defined in more than one file.
    </para>
    
  </section>
  
  <section>
    <title>Deploying the transaction manager</title>
    <para>
      The JBossTS XTS component consists of a number of <filename>.jar</filename> files containing the application’s
      class files, plus Web service (<filename>.war</filename>) files which expose the necessary services. These
      components are typically included in an application's Enterprise Archive (<filename>.ear</filename>) file during
      application development, as this simplifies deployment of the transaction infrastructure. For production, you can
      install the Transaction Manager as an application in its own right, allowing for centralized configuration and
      management at the server level, independent of specific applications. The demonstration application shipped with
      JBossTS provides a sample deployment descriptor illustrating how the Transaction Manager components can be
      included in an application.
    </para>
    <para>
      JBossTS 4.x uses fixed endpoints for its underlying protocol communication.  Therefore, problems may arise if you
      deploy multiple applications using JBossTS to the same server concurrently. If you need to deploy several
      transactional applications in the same server, you must deploy the Transaction Manger as a separate application,
      rather than embedding it within the development of individual applications.
    </para>
    <para>
      The <filename>coordinator/</filename> directory in the JBossTS installation can assist in the configuration and
      deployment of a stand-alone transaction manager.
    </para>
    <procedure>
      <title>Using the <filename>coordinator/</filename> diretory to configure and deploy a stand-alone transaction manager</title>
      <step>
        <para>
          Install JBossTS 4.15.
        </para>
      </step>
      <step>
        <para>
          Use a separate application server installation for the coordinator. This installation can be on a separate
          machine. To set this up on JBoss Application Server, see <ulink
          url="http://www.yorku.ca/dkha/jboss/docs/MultipleInstances.htm" /> for more information.
        </para>
      </step>
      <step>
        <para>
          Install Ant 1.4 or later.
        </para>
        <warning>
          <para>
            A separate application server installation must be used, separate from the one that clients and services are
            deployed into, to prevent conflicts between the various JBossTS components.
          </para>
        </warning>
      </step>
      <step>
        <para>
          Edit the <filename>build.xml</filename> included in the <filename>coordinator/</filename> directory, to point
          to the application server installation where the transaction coordinator will be deployed and the location of
          the JBossTS installation. The files <filename>ws-c_jaxm_web-app.xml</filename> and
          <filename>ws-t_jaxm_web-app.xml</filename> in the <filename>dd/</filename> subdirectory of
          <filename>coordinator/</filename> are the deployment descriptors for the WS-C and WS-T
          <filename>war</filename> files. These files contain templated URLs. During the build phase, ant will
          substitute the hostname and port values you specify in the <filename>build.xml</filename> into these files.
        </para>
      </step>
      <step>
        <para>
          Run ant, with one of targets <systemitem>deploy-weblogic</systemitem>, <systemitem>deploy-jboss</systemitem>,
          or <systemitem>deploy-webmethods</systemitem>, to create and deploy a new coordinator into the correct
          application server installation.
        </para>
      </step>
      <step>
        <para>
          Finally, point your client at the required coordinator. To do this, generate the demo
          application. specifying the port and hostname of the coordinator.
        </para>
      </step>
    </procedure>
  </section>

  <section>
    <title>Deployment descriptors</title>
    <para>
      In general, changing the contents of the various deployment descriptors used by JBossTS is not necessary. However,
      if you do need to modify them they are all included in the coordinator module.
    </para>
    <para>
      Not all JBossTS components have ready access to the information in the deployment descriptors. Therefore, if you
      modify the JNDI names used by any of the WS-C or WS-T deployment descriptors, you may need to inform other JBossTS
      components at runtime, by setting an appropriate property in the <filename>wstx.xml</filename> configuration
      file.
    </para>
    <important>
      <para>
        You need to prefix each property in this table with the string <literal>com.arjuna.mw.wst.</literal>. The
        prefix has been removed for formatting reasons, and has been replaced by <literal>...</literal>.
      </para>
    </important>
    <table>
      <title>Deployment descriptor values and properties</title>
      <tgroup cols="2">
        <thead>
          <row>
            <entry>JNDI Name</entry>
            <entry>Property</entry>
          </row>
        </thead>
        <tbody>
          <row>
            <entry>Activationrequester</entry>
            <entry>...at.activationrequester</entry>
          </row>
          <row>
            <entry>Activationcoordinator</entry>
            <entry>...at.activationcoordinator</entry>
          </row>
          <row>
            <entry>Completionparticipant</entry>
            <entry>...at.completionparticipant</entry>
          </row>
          <row>
            <entry>Registrationrequester</entry>
            <entry>...at.registrationrequester</entry>
          </row>
          <row>
            <entry>durable2pcdispatcher</entry>
            <entry>...at.durable2pcdispatcher</entry>
          </row>
          <row>
            <entry>durable2pcparticipant</entry>
            <entry>...at.durable2pcparticipant</entry>
          </row>
          <row>
            <entry>volatile2pcdispatcher</entry>
            <entry>...at.volatile2pcdispatcher</entry>
          </row>
          <row>
            <entry>volatile2pcparticipant</entry>
            <entry>...at.volatile2pcparticipant</entry>
          </row>
          <row>
            <entry>businessagreementwithparticipantcompletiondispatcher</entry>
            <entry>...ba.businessagreementwpcdispatcher</entry>
          </row>
          <row>
            <entry>businessagreementwithparticipantcompletionparticipant</entry>
            <entry>...ba.businessagreementwpcparticipant</entry>
          </row>
          <row>
            <entry>businessagreementwithcoordinatorcompletiondispatcher</entry>
            <entry>...ba.businessagreementwccdispatcher</entry>
          </row>
          <row>
            <entry>Businessagreementwithcoordinatorcompletionparticipant</entry>
            <entry>...ba.businessagreementwccparticipant</entry>
          </row>
        </tbody>
      </tgroup>
    </table>
  </section>
</chapter>

