<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.


  (C) 2005-2006,
  @author JBoss Inc.
-->
<project name="WSAS" default="wsas.jar" basedir=".">

	<!-- Set module name -->
	<property name="modulename" value="wsas"/>

    <!-- location of JBossTS parent tree -->
    <property name="jbossts.dir" location="../.."/>

    <!-- all libraries external to JBossTS should be found in parent build/extlib -->
    <property name="jbossts.build.dir" location="${jbossts.dir}/build"/>
    <property name="jbossts.build.extlib.dir" location="${jbossts.build.dir}/extlib"/>

    <!-- JBossTS products are in parent install/lib  -->
    <property name="jbossts.install.dir" location="${jbossts.dir}/install"/>
    <property name="jbossts.install.lib.dir" location="${jbossts.install.dir}/lib"/>

    <!-- JBossTS resource bundle doclet code is in parent antbuildsystem build tree -->
    <property name="jbossts.buildsystem.build.dir" location="${jbossts.dir}/antbuildsystem/build"/>
    <property name="jbossts.buildsystem.build.lib.dir" location="${jbossts.buildsystem.build.dir}/lib"/>

    <!-- TODO ok, I lied. stop using the old junit from our own ext lib and use the new one in the parent build/extlib -->

    <property name="xts.ext.dir" location="../ext"/>

    <!-- required JBossTS product jars -->
    <property name="jbossts.install.lib.jars" value="jbossjta.jar jbossjts.jar"/>

    <!-- external jars also used by JBossTS -->
    <property name="jbossts.build.extlib.jars" value="jbossts-common.jar commons-logging-1.1.jar"/>

    <!-- buildsystem jar from JBossTS containg resource bundle doclet for messages -->
    <property name="jbossts.buildsystem.jars" value="buildsystem.jar"/>

    <!-- external jars used by XTS for CXF enabled builds -->
    <condition property="cxf.build.extlib.jars" value="cxf-api.jar saaj-api.jar jaxrpc-api.jar jaxws-api.jar
            geronimo-ws-metadata_2.0_spec.jar">
        <isset property="cxf.build"/>
    </condition>

    <!-- external jars used by XTS for all builds -->
    <property name="xts.build.extlib.jars" value="jaxb-api.jar jboss-javaee.jar jbossws-native-jaxrpc.jar
            jbossws-native-jaxws.jar jbossws-client.jar stax-api.jar jbossws-native-saaj.jar
            jbossws-native-jaxws-ext.jar jbossws-native-core.jar jbossws-common.jar jboss-logging-spi.jar
            jta.jar servlet-api.jar dom4j.jar ${cxf.build.extlib.jars}"/>

    <!-- paths internal to build -->

    <path id="build.classpath">
        <fileset dir="${jbossts.install.lib.dir}" includes="${jbossts.install.lib.jars}"/>
        <fileset dir="${jbossts.build.extlib.dir}" includes="${jbossts.build.extlib.jars} ${xts.build.extlib.jars}"/>
    </path>

    <path id="doclet.classpath">
        <fileset dir="${jbossts.buildsystem.build.lib.dir}" includes="${jbossts.buildsystem.jars}"/>
    </path>

    <property name="build.classpath" refid="build.classpath"/>

    <property name="doclet.classpath" refid="doclet.classpath"/>

    <!-- use $JBOSS_HOME to locate directory for deploy and undeploy -->
    <property  environment="env"/>
    <property  name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property  name="jboss.server" value="default"/>
    <property  name="deploy.dir" value="${jboss.home}/derver/${jboss.server}/deploy}"/>

	<!-- internal paths and jars -->

    <property name="wsas.resourcebundle" value="wsas_msg_en_US.properties"/>

	<!-- Set internal property defaults -->
	<!-- Path names -->
	<property name="wsas.src" value="classes"/>
	<property name="wsas.dest.root" value="build"/>
	<property name="wsas.dest" value="${wsas.dest.root}/classes"/>
	<property name="wsas.jar.dest" value="${wsas.dest.root}/lib"/>
	<property name="wsas.htdocs.dest" value="build/htdocs"/>

	<!-- test path names -->
	<property name="wsas.tests.src" value="tests/classes"/>
	<property name="wsas.tests.dd" value="tests/dd"/>
	<property name="wsas.tests.dest.root" value="tests/build"/>
	<property name="wsas.tests.dest" value="tests/build/classes"/>
	<property name="wsas.tests.dd.dest" value="tests/build/dd"/>
	<property name="wsas.tests.webapps.dest" value="tests/build/webapps"/>
	<property name="wsas.tests.jar.dest" value="tests/build/lib"/>

	<!-- tests library and path to library -->
	<property name="tests.libs" value="junit.jar"/>
	<property name="tests.depend.libs" value="${tests.libs} ${modulename}.jar"/>

	<path id="wsas.tests.lib.path">
	  <fileset dir="${xts.ext.dir}" includes="${tests.libs}"/>
	</path>

	<!-- Initialisation -->
	<target name="wsas.init">
		<!-- Define default build properties -->
		<tstamp>
			<format property="wsas.date" pattern="yyyy/mm/dd hh:mm aa"/>
		</tstamp>
		<!-- Compile with debugging? -->
		<condition property="debug" value="no">
			<equals arg1="${debug}" arg2="no"/>
		</condition>
		<property name="debug" value="yes"/>

		<!-- Compile with deprecation? -->
		<condition property="deprecation" value="yes">
			<equals arg1="${deprecation}" arg2="yes"/>
		</condition>
		<property name="deprecation" value="no"/>
		<!-- Make the destination directory -->
		<mkdir dir="${wsas.dest}"/>
	</target>

	<!-- Compilation targets -->
	<target name="wsas.compile" depends="wsas.init">
		<echo message="Compiling module"/>
		<javac srcdir="${wsas.src}" destdir="${wsas.dest}"
               debug="${debug}" deprecation="${deprecation}"
		       classpathref = "build.classpath"/>
	</target>

	<!-- htdocs paths -->
	<path id="wsas.htdocs.path" path="${wsas.src}"/>

	<!-- Build htdocs for just mw, or mw and mwlabs -->
	<property name="wsas.htdocs.list" value="*"/>

	<!-- Jar targets -->
	<target name="wsas.jar" depends="wsas.compile, wsas.htdocs, wsas.generateresourcebundle">
		<echo message="Building jar file"/>
		<mkdir dir="${wsas.jar.dest}"/>
		<jar jarfile="${wsas.jar.dest}/${modulename}.jar" basedir="${wsas.dest}"/>
	</target>

	<target name="wsas.htdocs"
				depends="wsas.init">
		<echo message="Building htdocs "/>
		<mkdir dir="${wsas.htdocs.dest}"/>

		<javadoc
			sourcepathref="wsas.htdocs.path"
			destdir="${wsas.htdocs.dest}"
			packagenames="${wsas.htdocs.list}"
	        >
			<classpath>
				<path refid="build.classpath"/>
				<path path="${wsas.src}"/>
			</classpath>
		</javadoc>
	</target>

    <target name="wsas.generateresourcebundle">

        <echo message="Generating WSAS Bundle"/>

        <javadoc    sourcepath="${wsas.src}"
                    packagenames="com.arjuna.*"
                    failonerror="yes"
                    private="yes"
                    defaultexcludes="yes"
                classpath="${build.classpath}">
             <doclet name="com.hp.mw.buildsystem.doclet.resbundledoclet.ResourceBundleDoclet">
                 <path refid="doclet.classpath"/>
                 <param name="-basedir" value="${basedir}/${wsas.dest}"/>
                <param name="-resourcebundle" value="${wsas.resourcebundle}"/>
             </doclet>
        </javadoc>

    </target>

	<!-- test targets -->
	<target name="wsas.tests.init">
        <delete dir="${wsas.tests.dest.root}"/>
		<!-- make the test destination directories -->
		<mkdir dir="${wsas.tests.dest.root}"/>
		<mkdir dir="${wsas.tests.dest}"/>
		<mkdir dir="${wsas.tests.dd.dest}"/>
		<mkdir dir="${wsas.tests.webapps.dest}"/>
		<mkdir dir="${wsas.tests.jar.dest}"/>
	</target>

    <!-- this assumes the required libs have already been built -->
    
	<target name="wsas.tests.compile" depends="wsas.tests.init">
	  <javac destdir="${wsas.tests.dest}" debug="yes" optimize="no">
	    <classpath>
	      <pathelement path="${wsas.jar.dest}/${modulename}.jar"/>
	      <path refid="wsas.tests.lib.path"/>
	      <path refid="build.classpath"/>
	    </classpath>
	    <src path="${wsas.tests.src}"/>
	  </javac>
	</target>

	<target name="wsas.tests.webapps" depends="wsas.tests.compile">
	  <copy file="${wsas.tests.dd}/wsas-tests_web-app.xml" tofile="${wsas.tests.dd.dest}/web-app.xml">
	  </copy>
	  <war warfile="${wsas.tests.webapps.dest}/wsas-tests.war" webxml="${wsas.tests.dd.dest}/web-app.xml">
	    <classes dir="${wsas.tests.dest}"/>
	  </war>
	  <ear earfile="${wsas.tests.webapps.dest}/wsas-tests.ear" appxml="${wsas.tests.dd}/wsas-tests_application.xml">
	    <!-- we only need to deploy the ext test libs (junit) and
	         the tests war in JBoss AS 5.0. the rest of the XTS
	         code is deployed as a sar and the TS code is deployed
	         in the server lib
	    -->
	    <fileset dir="${xts.ext.dir}" includes="${tests.libs}"/>
	    <fileset dir="${wsas.tests.webapps.dest}" includes="wsas-tests.war"/>
	  </ear>
	</target>

	<target name="wsas.tests.deploy" depends="wsas.tests.webapps, wsas.tests.undeploy">
	  <copy file="${wsas.tests.webapps.dest}/wsas-tests.ear" tofile="${deploy.dir}/wsas-tests.ear"/>
	</target>

	<target name="wsas.tests.undeploy">
	  <delete file="${deploy.dir}/wsas-tests.ear"/>
	</target>

	<!-- Clean targets -->
	<target name="wsas.clean">
		<echo message="Cleaning module"/>
		<delete dir="${wsas.dest}"/>
		<delete dir="${wsas.dest.root}"/>
		<delete dir="${wsas.htdocs.dest}"/>
		<delete file="${wsas.jar.dest}/${modulename}.jar"/>
		<!-- delete the test destination directories -->
		<delete dir="${wsas.tests.dest.root}"/>
	</target>

	<!-- Short target names -->
	<target name="compile" depends="wsas.compile"/>
	<target name="jar" depends="wsas.jar"/>
	<target name="clean" depends="wsas.clean"/>
	<target name="tests-webapps" depends="wsas.tests.webapps"/>
	<!-- production target for 1.1 tests - tests are not version specific -->
    <target name="tests-11" depends="tests-webapps"/>
    <target name="tests-both" depends="tests-webapps"/>
	<target name="tests-deploy" depends="wsas.tests.deploy"/>
	<target name="tests-undeploy" depends="wsas.tests.undeploy"/>
</project>
