<!--
  JBoss, Home of Professional Open Source
  Copyright 2007, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU General Public License, v. 2.0.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU General Public License for more details.
  You should have received a copy of the GNU General Public License,
  v. 2.0 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.

  (C) 2007,
  @author JBoss Inc.
-->

<project name="sar" default="sar" basedir=".">

    <!-- ================================================================== -->
    <!-- build and install the XTS component as a service archive           -->

    <!-- The properties to override are the following:                      -->
    <!--    hostname (defaults to localhost)                                -->
    <!--    port (defaults to 8080 for jboss)                               -->
    <!--    xts.home The installation directory for XTS                     -->
    <!--    server deployment directory (set via env var JBOSS_HOME)        -->
    <!-- ================================================================== -->

    <!-- devs: run 'ant jta; cd XTS; ant install' after svn checkout -->

    <!-- the directory in which XTS resides -->
    <property name="xts.home" value="../xts-install"/>

    <!-- the name of the host running JBOSS -->
    <property name="hostname" value="localhost"/>

    <!-- the name of the port used by the JBoss web listener -->
    <property name="port" value="8080"/>

    <!-- the directory in which your installed app server resides -->
    <property environment="env"/>

    <condition property="jbossas.home" value="${env.JBOSS_HOME}">
      <isset property="env.JBOSS_HOME"/>
    </condition>

    <fail unless="jbossas.home">
The JBoss installation directory must be specified with the JBOSS_HOME environment variable or the jboss.home property.
    </fail>

    <property name="lib.dir" location="${xts.home}/lib"/>
    <property name="ext.dir" location="${lib.dir}/ext"/>

    <property name="webinf.dir"         value="WEB-INF"/>
    <property name="build.dir"         value="build"/>
    <property name="build.webinf.dir"       value="${build.dir}/WEB-INF"/>

    <target name="init">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.webinf.dir}"/>
    </target>

    <!-- TODO are the xts engine and its WS stack conceptually separate deployments? at what level do they integrate? spi or jax-ws?-->
    <target name="sar" depends="init">

      <!--
	  as a jbossas component we would like to use just the
	  integration jar here. however it does not contain some stuff
	  we need e.g. rmi, system, logger classes etc, so we pick up
	  jbossall-client instead. also, pending some refactoring in
	  the AS we still depend upon class
	  org.jboss.system.ServiceMBeanSupport which is not in the
	  integration/client jars. we can find it in the lib dir in
	  jboss-system-jmx.jar.
      -->
      <!--
        <javac srcdir="src" destdir="${build.dir}">
            <classpath>
                <pathelement location="${jbossas.home}/lib/jboss-common.jar"/>
                <pathelement location="${jbossas.home}/lib/jboss-system.jar"/>
                <pathelement location="${jbossas.home}/lib/jboss-jmx.jar"/>
                <fileset dir="${lib.dir}" includes="*.jar"/>
                <fileset dir="${lib.dir}/ext" includes="jbossjta.jar jbossts-common.jar"/>
            </classpath>
        </javac>
	-->
        <javac srcdir="src" destdir="${build.dir}">
            <classpath>
                <pathelement location="${jbossas.home}/client/jbossall-client.jar"/>
                <pathelement location="${jbossas.home}/lib/jboss-system-jmx.jar"/>
                <!-- XTS -->
                <fileset dir="${lib.dir}" includes="*.jar"/>
                <fileset dir="${lib.dir}/ext" includes="jbossjta.jar jbossts-common.jar"/>
            </classpath>
        </javac>

	<!-- substitute host and port in deployment descriptor -->
        <filter token="hostname" value="${hostname}"/>
        <filter token="port" value="${port}"/>
	<copy file="${webinf.dir}/web.xml" tofile="${build.webinf.dir}/web.xml" filtering="true"/>

	<!-- build the war containing the XTS HTTP multiplexor -->

        <jar jarfile="${build.dir}/jbossxts.war">
            <fileset dir="${build.dir}" includes="WEB-INF/web.xml"/>
        </jar>

        <jar jarfile="${build.dir}/jbossxts.sar">
            <fileset dir="${lib.dir}" includes="*.jar"/>

            <fileset dir="." includes="META-INF/jboss-service.xml"/>
            <fileset dir="${build.dir}" includes="**/*.class"/>

            <fileset dir="${build.dir}" includes="jbossxts.war"/>

            <!-- AS /lib supplies servlet.jar, jbossjta.jar, commons-logging.jar, jbossts-common.jar
                saaj-api.jar, jaxrpc.jar.  stax is in jbossws.sar but not server /lib    -->
            <fileset dir="${ext.dir}" includes="stax-api-1.0.jar wstx-asl-2.0.3.jar"/>

            <fileset dir="." includes="jbossxts.xml"/>
        </jar>
    </target>

    <target name="clean">
      <delete dir="${build.dir}"/>
    </target>

    <target name="deploy" depends="sar">
        <copy file="${build.dir}/jbossxts.sar" todir="${jbossas.home}/server/default/deploy"/>
    </target>

    <target name="undeploy">
        <delete file="${jbossas.home}/server/default/deploy/jbossxts.sar"/>
    </target>

</project>
