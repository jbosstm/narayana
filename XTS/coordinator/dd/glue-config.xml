<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags. 
  See the copyright.txt in the distribution for a full listing 
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU General Public License, v. 2.0.
  This program is distributed in the hope that it will be useful, but WITHOUT A 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE.  See the GNU General Public License for more details.
  You should have received a copy of the GNU General Public License,
  v. 2.0 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
  MA  02110-1301, USA.
  
  (C) 2005-2006,
  @author JBoss Inc.
-->

<!--
  Welcome to the Glue configuration file.

  A copy of this file is located in glue.jar with the name "glue-default-config.xml".
  If Glue runs a web application and no "glue-config.xml" is found in the application's
  class path or WEB-INF directory, the file "glue-default-config.xml" is used instead.

  If the newapp utility is used to create a skeleton J2EE application structure,
  this file is copied from <GLUE-HOME>/app-template/WEB-INF/glue-config.xml
  into the new application's WEB-INF directory.

  The configuration file is comprised of the following sections:

  PRODUCT INFORMATION
    - the product name and version information

  SERVER SETTINGS
    - specifies the URL of the application's web server and optional JMS servers

  BASE WEB.XML MAPPINGS
    - specifies the base web-app mappings that are added to the ones in web.xml

  MAP FILE LIST
    - if Glue is hosted in an old servlet 2.1 container, this section is used to
      list all the map files in WEB-INF\maps

  SERVICE DESCRIPTOR LIST
    - if Glue is hosted in an old servlet 2.1 container, this section is used to
      list all the service descriptors in WEB-INF\services

  STARTUP COMMANDS
    - lists static methods to invoke on application startup

  LOGGING
    - configures logging channels
    - sets log file
    - sets the format of logged events

  INSTRUMENTATION
    - enables/disables instrumentation of web services and/or http messaging

  HOT DEPLOYMENT
    - enables/disables hot deployment
    - sets cycle time for monitoring changes

  THREADS
    - sets the thread pool size

  SOCKETS
    - sets socket timeout values, pool sizes, buffer sizes, and factories

  SOCKET FACTORIES
    - lists socket factories

  MESSAGE FACTORIES
    - lists message factories

  HTTP
    - sets http buffer sizes

  HTTP PROXIES
    - sets the host, port and authentication for an http proxy

  SSL
    - specifies authentication and cipher suites for ssl sockets

  AUTHENTICATION
    - lists realms
    - sets default realm
    - sets the default authentication method

  WS-SECURITY
    - lists predefined security templates

  XML-SIGNATURES/ENCRYPTION
    - canonicalization, signature and encryption algorithms

  SESSIONS
    - sets the session timeout value
    - sets cycle time for checking sessions

  SOAP HTTP
    - sets the max retries for soap messages

  SOAP INTERCEPTORS
    - lists inbound and outbound soap interceptors

  SOAP OPTIMIZATIONS
    - enables/disables various soap message optimizations

  SOAP OPERATION LOOKUP
    - lists the factories for soap operation lookup

  SOAP ATTACHMENTS
    - lists the content id used for soap attachments
    - sets the attachments buffer size

  WSDL
    - lists the wsdl bindings to generate
    - sets the default target namespace
    - lists the protocols to support

  SERVICES
    - sets the default messaging style
    - sets the wrapper class for objects published as web services
    - sets handlers for initializing a service from a descriptor

  HOLDERS
    - enable/disable JAX/RPC holders

  SOAP HANDLER FACTORIES
    - list of factories for creating server-side soap handler chain

  SOAP REFERENCE FACTORIES
    - list of factories for creating client-side soap reference chain

  REGISTRIES
    - registry chain for resolving publish/bind requests

  LOAD BALANCER FACTORIES
    - set up fabric load balancing

  APPLICATION CONTEXT
    - list of properties to add to application context at startup

  MIME TYPES
    - list of default mime type mappings

  XPATHS
    - set default xpath factory
    - enable/disable xpath caching

  JAXP
    - set default dom and sax factories

  XML/JAVA MAPPING
    - enable/disable direct field access
    - enable/disable property supression
    - enable/disable java serialization
    - set namespace prefix
    - enable/disable type attributes when writing literals

  TYPE FACTORIES
    - lists type factories
    - specify the default array type

  XML SCHEMAS
    - lists all supported xml schemas
    - sets the default schema

  XML ENCODINGS
    - sets suggested encodings

  HTTP ENCODINGS
    - sets assumed encodings

  SOAP ENCODINGS
    - sets default encodings for soap messages

  JMS ADAPTORS
    - lists installed jms adapters

  MANAGEMENT CONSOLE
    - lists console panels

  UDDI
    - lists default tmodels

  GENERAL FABRIC
    - allows an application to automatically join fabric
    
  FABRIC SECURITY
    - selects the realm to use as the fabric realm
    - selects fabric username and password
    - selects fabric key store and trust store

  FABRIC DISCOVERY
    - selects locator to use
    - lists available locators

  FABRIC XML DATABASE
    - seconds between server syncs
    - default replication factor
    - factory for creating data stores

  FABRIC ENDPOINT ACTIVITY
    - seconds between keep-alive cycles
    - seconds between check for rule updates

  FABRIC LIVENESS CHECKING
    - seconds between checking nodes for liveness
    - seconds after which a dead node should be removed
    - seconds between checking services for liveness
    - seconds after which a dead service should be removed
-->

<config>
  <!--***************************************************************-->
  <!--PRODUCT INFORMATION-->
  <!--***************************************************************-->

  <!--name and version information-->
  <product>
    <name>Glue</name>
    <version>
      <major>5</major>
      <minor>0</minor>
      <patch>1</patch>
    </version>
  </product>


  <!--***************************************************************-->
  <!--SERVER SETTINGS-->
  <!--***************************************************************-->

  <!--web server-->
  <!--this entry is only used when glue is running in standalone mode-->
  <!--the runapp -p and -u options may be used to override this default url-->
  <!--$APPNAME is replaced at runtime by the application name-->
  <webServer>
    <url>http://localhost:8004/$APPNAME</url>
  </webServer>

  <!--jms/soap server (Glue professional only)-->
  <!--$APPNAME is replaced at runtime by the application name-->
  <!--
    <url>jms:///$APPNAME</url>
    <registryPath>/</registryPath>
  </jmsSoapServer>
  -->


  <!--***************************************************************-->
  <!--BASE WEB.XML MAPPINGS-->
  <!--***************************************************************-->

  <!--when glue is running in standalone mode and web.xml is-->
  <!--read, any url patterns that are in this base web-app but not-->
  <!--in the web.xml are automatically added. this feature is currently-->
  <!--used to automatically add jsp support to user applications-->
  <base-web-app>
    <servlet>
      <servlet-name>glue-jsp</servlet-name>
      <servlet-class>electric.jsp.JSPServlet</servlet-class>
      <load-on-startup>3</load-on-startup>
      <!-- valid logVerbosityLevel settings are FATAL -->
      <!-- ERROR, WARNING, INFORMATION and DEBUG -->
      <!--
      <init-param>
        <param-name>logVerbosityLevel</param-name>
        <param-value>DEBUG</param-value>
      </init-param>
      -->
    </servlet>

    <servlet-mapping>
      <servlet-name>glue-jsp</servlet-name>
      <url-pattern>*.jsp</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
      <welcome-file>index.htm</welcome-file>
      <welcome-file>index.html</welcome-file>
      <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
  </base-web-app>


  <!--***************************************************************-->
  <!--MAP FILES-->
  <!--***************************************************************-->

  <mapFiles>
    <!--list of map files to read from WEB-INF\maps-->
    <!--only needed when Glue is hosted in a 3rd-party non-2.3 servlet engine-->
    <!--attempts to load the same file twice are benign and ignored-->
    <!--<path>mymap.map</path>-->
  </mapFiles>


  <!--***************************************************************-->
  <!--SERVICE DESCRIPTORS-->
  <!--***************************************************************-->

  <serviceDescriptors>
    <!--list of descriptors to read from WEB-INF\services-->
    <!--only needed when Glue is hosted in a 3rd-party non-2.3 servlet engine-->
    <!--attempts to load the same file twice are benign and ignored-->
    <!-- <path>system/application.xml</path>
    <path>system/console.xml</path>
    <path>system/jndi.xml</path> -->
  </serviceDescriptors>


  <!--***************************************************************-->
  <!--STARTUP COMMANDS-->
  <!--***************************************************************-->

  <!--list of static methods to invoke on startup-->
  <!--a method is located using its qualified name and number of arguments-->
  <!--if a formal argument is not a primitive or string, an instance is-->
  <!--created by calling its constructor with the string as an argument-->
  <!--
  <command>
    <invoke>mypackage.MyClass.foo()</invoke>
    <invoke>mypackage.MyClass.bar( 42, "cats" )</invoke>
  </command>
  -->


  <!--***************************************************************-->
  <!--LOGGING-->
  <!--***************************************************************-->

  <logging>
    <!-- each logger entry defines an instance of a logger to be used-->
    <logger>
      <name>default</name>
      <constructor>
        <class>electric.util.log.WriterLogger</class>
        <args>
          <!--log date and time?-->
          <logDateTime>false</logDateTime>
          <logDateTimeFormat>MM:dd:yy hh:mm:ss</logDateTimeFormat>
          <!--log name of thread?-->
          <logThreadName>false</logThreadName>
          <!--log to file?-->
          <logToFile>false</logToFile>
          <!-- change this to a reasonable file name-->
          <fileName>log/default.log</fileName>
          <append>true</append>
        </args>
      </constructor>

      <!--list of logging channels-->
      <log enabled="yes">STARTUP</log>
      <log enabled="yes">ERROR</log>
      <log enabled="yes">COMMENT</log>
      <log enabled="yes">WARNING</log>
      <log enabled="yes">SCHEMA</log>
      <log enabled="no">SECURITY</log>
      <log enabled="no">SECURITY_DETAIL</log>
      <log enabled="no">SECURITY_DEBUG</log>
      <log enabled="no">CONSOLE_DEBUG</log>
      <log enabled="no">DEPLOYMENT</log>
      <log enabled="no">CLASSLOADER</log>
      <log enabled="no">COMMAND</log>
      <log enabled="no">EXCEPTION</log>
      <log enabled="no">HTTP</log>
      <log enabled="no">JMS</log>
      <log enabled="no">MAPPING</log>
      <log enabled="no">SERVLET</log>
      <log enabled="no">SOAP</log>
      <log enabled="no">SOURCE</log>
      <log enabled="no">RESOURCES</log>

      <!--fabric channels-->
      <log enabled="yes">FAILOVER</log>
      <log enabled="no">XDB_CLIENT</log>
      <log enabled="no">XDB_SERVER</log>
      <log enabled="no">XDB_SYNC</log>
      <log enabled="no">LOCATOR</log>
      <log enabled="no">INTERMEDIARY</log>
      <log enabled="no">SERVICE_MANAGER</log>
    </logger>
  </logging>


  <!--***************************************************************-->
  <!--INSTRUMENTATION-->
  <!--***************************************************************-->

  <instrumentation>
    <!--gather statistics for individual services?-->
    <instrumentServices>yes</instrumentServices>

    <!--gather statistics for individual http calls?-->
    <instrumentHttp>yes</instrumentHttp>
  </instrumentation>


  <!--***************************************************************-->
  <!--HOT DEPLOYMENT-->
  <!--***************************************************************-->

  <hotDeployment>
    <!--enable hot deployment?-->
    <enabled>no</enabled>

    <!--milliseconds between checks for resource changes-->
    <syncCycle>5000</syncCycle>
  </hotDeployment>


  <!--***************************************************************-->
  <!--THREADS-->
  <!--***************************************************************-->

  <!--maximum number of threads in shared thread pool-->
  <threadPoolSize>70</threadPoolSize>


  <!--***************************************************************-->
  <!--SOCKETS-->
  <!--***************************************************************-->

  <sockets>
    <!--max socket connections kept alive in server-side socket pool-->
    <maxInboundKeepAlive>50</maxInboundKeepAlive>

    <!--max socket connections kept alive in client-side socket pool-->
    <maxOutboundKeepAlive>30</maxOutboundKeepAlive>

    <!--keep alive connections by default?-->
    <keepAlive>yes</keepAlive>

    <!--timeout in milliseconds for a client reading a response, 0 => infinite-->
    <clientReadTimeout>0</clientReadTimeout>

    <!--timeout in milliseconds for a server reading a request, 0 => infinite-->
    <serverReadTimeout>15000</serverReadTimeout>

    <!--buffer size in bytes for socket streams-->
    <bufferSize>8192</bufferSize>

    <!--max queue length for incoming connection requests-->
    <backlog>200</backlog>
  </sockets>


  <!--***************************************************************-->
  <!--SOCKET FACTORIES-->
  <!--***************************************************************-->

  <!--list of socket factories-->
  <socketFactories>
    <factory>electric.net.socket.tcp.TCPSocketFactory</factory>
    <factory>electric.net.socket.ssl.SSLSocketFactory</factory>
  </socketFactories>


  <!--***************************************************************-->
  <!--SERVLET MESSAGE FACTORIES-->
  <!--***************************************************************-->

  <!--list of servlet message factories-->
  <messageFactories>
    <factory>electric.webserver.messages.tcp.TCPMessageFactory</factory>
    <factory>electric.webserver.messages.ssl.SSLMessageFactory</factory>
  </messageFactories>


  <!--***************************************************************-->
  <!--HTTP-->
  <!--***************************************************************-->

  <http>
    <!--buffer size in bytes for streaming http responses-->
    <responseBufferSize>2048</responseBufferSize>

    <!--buffer size in bytes for copying files from docbase to http response-->
    <copyBufferSize>16384</copyBufferSize>

    <!--the default http authentication method (basic/digest)-->
    <defaultAuthMethod>basic</defaultAuthMethod>
  </http>


  <!--***************************************************************-->
  <!--HTTP PROXIES-->
  <!--***************************************************************-->

  <!--
  <httpProxy>
    <host>proxyhost</host>
    <port>8000</port>
    <user>username</user>
    <password>password</password>
  </httpProxy>
  -->


  <!--***************************************************************-->
  <!--SSL-->
  <!--***************************************************************-->

  <ssl>
    <!--glue server asks clients for ssl certificates? if the client-->
    <!--does not send a certificate, or if the client cert is not in the-->
    <!--server's trust store, the request will be rejected.-->
    <serverNeedsClientAuth>no</serverNeedsClientAuth>

    <!--glue client forced to ssl server mode (with client auth)? this-->
    <!--setting is useful only with unusual configurations, and should-->
    <!--not normally be changed.-->
    <clientNeedsClientAuth>no</clientNeedsClientAuth>

    <!--cipher suites for client sockets-->
    <clientCipherSuite>SSL_DH_anon_WITH_RC4_128_MD5</clientCipherSuite>
    <clientCipherSuite>SSL_DH_anon_WITH_DES_CBC_SHA</clientCipherSuite>
    <clientCipherSuite>SSL_DH_anon_WITH_3DES_EDE_CBC_SHA</clientCipherSuite>
    <clientCipherSuite>SSL_DH_anon_EXPORT_WITH_RC4_40_MD5</clientCipherSuite>
    <clientCipherSuite>SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA</clientCipherSuite>

    <!--cipher suites for server sockets-->
    <serverCipherSuite>SSL_DH_anon_WITH_RC4_128_MD5</serverCipherSuite>
    <serverCipherSuite>SSL_DH_anon_WITH_DES_CBC_SHA</serverCipherSuite>
    <serverCipherSuite>SSL_DH_anon_WITH_3DES_EDE_CBC_SHA</serverCipherSuite>
    <serverCipherSuite>SSL_DH_anon_EXPORT_WITH_RC4_40_MD5</serverCipherSuite>
    <serverCipherSuite>SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA</serverCipherSuite>
  </ssl>


  <!--***************************************************************-->
  <!--AUTHENTICATION-->
  <!--***************************************************************-->

  <realms>
    <!--the default realm-->
    <!--<defaultRealm>acl</defaultRealm>-->

    <!--list of realms, used by security guards to authenticate clients-->
    <!--
    <realm>
      <constructor>
        <class>electric.security.acl.ACLRealm</class>
        <args>
          <name>acl</name>
          <path>security\acl.xml</path>
        </args>
      </constructor>
    </realm>
    -->

    <!--
    <realm>
      <constructor>
        <class>electric.security.jaas.JAASRealm</class>
        <args>
          <name>jaas</name>
          <config>security\jaas.config</config>
        </args>
      </constructor>
    </realm>
    -->

    <realm>
      <constructor>
        <class>com.webmethods.fabric.security.realm.FabricRealm</class>
        <args>
          <realmName>realm</realmName>
          <fabricUser>fabric</fabricUser>
          <!--<fabricPassword>changeit</fabricPassword>-->
          <fabricRoles>read,write</fabricRoles>
        </args>
      </constructor>
    </realm>

  </realms>


  <!--***************************************************************-->
  <!--WS-SECURITY -->
  <!--***************************************************************-->

  <!--ws-security depends on the xml-canonicalization, xml-signature-->
  <!--and xml-encryption specifications. to use these algorithms it-->
  <!--may be necessary to uncomment the jaxen xpath factory listed-->
  <!--in the xpath section-->
  <wsSecurity>
    <!--template that specifies that outgoing soap requests-->
    <!--have the entire soap body element signed-->
    <!--
    <signatureTemplate>
      <name>ExampleSignature</name>
      <reference>soap:Envelope/soap:Body</reference>
      <keyStore>clientcert</keyStore>
      <keyStorePassword>changeit</keyStorePassword>
      <alias>test</alias>
    </signatureTemplate>
    -->

    <!--template that specifies encryption of the body-->
    <!--contents of outgoing soap requests with the given-->
    <!--user and key-->
    <!--
    <encryptionTemplate>
      <name>ExampleEncryptionTemplate</name>
      <reference>soap:Envelope/soap:Body/*</reference>
      <secretKey>
        <user>crypto</user>
        <base64Key>kn89W7byFYz4EOXWs0UxnpJ/PVu28hWM</base64Key>
      </secretKey>
    </encryptionTemplate>
    -->
  </wsSecurity>


  <!--***************************************************************-->
  <!--XML SIGNATURES/ENCRYPTION -->
  <!--***************************************************************-->

  <xmlCanonicalization>
    <factory>
      <id>http://www.w3.org/2001/10/xml-exc-c14n</id>
      <class>electric.soap.security.signature.xml.canonical.ExclusiveFactory</class>
    </factory>

    <factory>
      <id>http://www.w3.org/TR/2001/REC-xml-c14n-20010315</id>
      <class>electric.soap.security.signature.xml.canonical.CanonicalFactory</class>
    </factory>
  </xmlCanonicalization>

  <xmlSignature>
    <signatureAlgorithm>
      <id>http://www.w3.org/2000/09/xmldsig#rsa-sha1</id>
      <class>electric.soap.security.signature.xml.crypto.SHA1withRSA</class>
    </signatureAlgorithm>

    <signatureAlgorithm>
      <id>http://www.w3.org/2000/09/xmldsig#hmac-sha1</id>
      <class>electric.soap.security.signature.xml.crypto.HMACwithSHA1</class>
    </signatureAlgorithm>
  </xmlSignature>

  <xmlEncryption>
    <encryptionAlgorithm>
      <id>http://www.w3.org/2001/04/xmlenc#tripledes-cbc</id>
      <class>electric.soap.security.encryption.xml.crypto.TripleDESCBC</class>
    </encryptionAlgorithm>
  </xmlEncryption>


  <!--***************************************************************-->
  <!--SESSIONS-->
  <!--***************************************************************-->

  <sessions>
    <!--session timeout in seconds-->
    <timeout>300</timeout>

    <!--milliseconds between checks for session expiration-->
    <reapCycle>60000</reapCycle>
  </sessions>


  <!--***************************************************************-->
  <!--SOAP HTTP-->
  <!--***************************************************************-->

  <soapHttp>
    <!--max number of retries for soap invocations-->
    <invokeMaxRetry>2</invokeMaxRetry>
  </soapHttp>


  <!--***************************************************************-->
  <!--SOAP INTERCEPTORS-->
  <!--***************************************************************-->

  <soapInterceptors>
    <!--list of interceptors for outbound soap responses-->
    <!--<outboundSoapResponseInterceptor>pkg.MyInterceptor</outboundSoapResponseInterceptor>-->

    <!--list of interceptors for outbound soap requests-->
    <!--<outboundSoapRequestInterceptor>pkg.MyInterceptor</outboundSoapRequestInterceptor>-->

    <!--list of interceptors for inbound soap responses-->
    <!--<inboundSoapResponseInterceptor>pkg.MyInterceptor</inboundSoapResponseInterceptor>-->

    <!--list of interceptors for inbound soap requests-->
    <!--<inboundSoapRequestInterceptor>pkg.MyInterceptor</inboundSoapRequestInterceptor>-->
  </soapInterceptors>


  <!--***************************************************************-->
  <!--SOAP OPTIMIZATIONS-->
  <!--***************************************************************-->

  <soapOptimizations>
    <!--omit xsi:type attributes when possible?-->
    <typeOmission>yes</typeOmission>

    <!--dynamically compress tags? (glue to glue only)-->
    <tagSubstitution>yes</tagSubstitution>

    <!--omit envelope when there's just a simple body? (glue to glue only)-->
    <envelopeOmission>yes</envelopeOmission>

    <!--inline hrefs? (glue to glue only)-->
    <hrefInlining>yes</hrefInlining>
  </soapOptimizations>


  <!--***************************************************************-->
  <!--SOAP OPERATION LOOKUP-->
  <!--***************************************************************-->

  <soapOperationLookupFactories>
    <!--list of operation lookup factories-->
    <factory>electric.soap.local.handlers.service.rpc.RPCOperationLookupFactory</factory>
    <factory>electric.soap.local.handlers.service.wrapped.WrappedOperationLookupFactory</factory>
  </soapOperationLookupFactories>


  <!--***************************************************************-->
  <!--SOAP ATTACHMENTS-->
  <!--***************************************************************-->

  <soapAttachments>
    <!--default style, may be overridden in service descriptors-->
    <defaultStyle>mime</defaultStyle>

    <!--content id of soap message inside of attachments-->
    <rootContentId>http://www.webmethods.com/rootpart.xml</rootContentId>

    <!--buffer size in bytes for writing soap requests in soap Attachments-->
    <streamSourceBufferSize>2048</streamSourceBufferSize>
  </soapAttachments>


  <!--***************************************************************-->
  <!--WSDL-->
  <!--***************************************************************-->

  <wsdl>
    <!--list of bindings-->
    <binding>soap</binding>
    <!--<binding>getpost</binding>-->

    <!--target namespace prefix-->
    <targetNamespacePrefix>http://www.webmethods.com/wsdl/</targetNamespacePrefix>

    <!--target namespace (overrides use of target namespace prefix)-->
    <!--<targetNamespace>http://www.mytarget.com/mynamespace</targetNamespace>-->

    <!--list of get/post protocols-->
    <getPostProtocol>http</getPostProtocol>
    <getPostProtocol>https</getPostProtocol>

    <!-- process wsdl faults -->
    <wsdlFaults>true</wsdlFaults>

    <!-- generate stack traces on faults -->
    <enableStackTraces>false</enableStackTraces>

    <!-- allow java.lang.Errors to be thrown from services-->
    <transmitErrors>false</transmitErrors>
  </wsdl>


  <!--***************************************************************-->
  <!--SERVICES-->
  <!--***************************************************************-->

  <services>
    <!--default messaging style (rpc/document)-->
    <defaultStyle>rpc</defaultStyle>

    <!--wrapper class for objects published as web services-->
    <wrapper>electric.service.object.ObjectService</wrapper>

    <!--list of handlers for initializing a service from a descriptor-->
    <initializer>electric.service.descriptor.initializer.Default</initializer>
    <initializer>electric.service.descriptor.initializer.Security</initializer>
    <initializer>electric.service.descriptor.initializer.Role</initializer>
    <initializer>electric.service.descriptor.initializer.ServiceContext</initializer>
    <initializer>electric.service.descriptor.initializer.Attachments</initializer>
    <initializer>electric.soap.security.initializer.Security</initializer>
  </services>


  <!--***************************************************************-->
  <!--HOLDERS-->
  <!--***************************************************************-->

  <!--use jax/rpc holders?-->
  <jaxRpcHolders>no</jaxRpcHolders>


  <!--***************************************************************-->
  <!--SOAP HANDLER FACTORIES-->
  <!--***************************************************************-->

  <soapHandlerFactories>
    <!--setup handler-->
    <factory>
      <name>setup</name>
      <constructor>
        <class>electric.soap.handlers.setup.SetupHandlerFactory</class>
      </constructor>
      <priority>1</priority>
    </factory>

    <!--logging-->
    <factory>
      <name>logging</name>
      <constructor>
        <class>electric.soap.handlers.logging.SOAPLoggingHandlerFactory</class>
      </constructor>
      <priority>2</priority>
    </factory>

    <!--ws-routing-->
    <factory>
      <name>ws-routing</name>
      <constructor>
        <class>electric.soap.routing.RoutingHandlerFactory</class>
      </constructor>
      <priority>3</priority>
    </factory>

    <!--user-defined interceptors-->
    <factory>
      <name>interceptors</name>
      <constructor>
        <class>electric.soap.handlers.interceptor.SOAPInterceptorHandlerFactory</class>
      </constructor>
      <priority>4</priority>
    </factory>

    <!--ws-security-->
    <factory>
      <name>ws-security</name>
      <constructor>
        <class>electric.soap.security.handlers.SecurityHandlerFactory</class>
      </constructor>
      <priority>5</priority>
    </factory>

    <!--objects that implement IService-->
    <factory>
      <name>soap-to-service</name>
      <constructor>
        <class> electric.soap.local.handlers.service.SOAPToServiceHandlerFactory </class>
      </constructor>
      <priority>6</priority>
    </factory>

    <!--objects that implement ISOAPHandler-->
    <factory>
      <name>soap-to-user-handler</name>
      <constructor>
        <class> electric.soap.local.handlers.user.SOAPToUserHandlerFactory </class>
      </constructor>
      <priority>7</priority>
    </factory>
  </soapHandlerFactories>


  <!--***************************************************************-->
  <!--SOAP REFERENCE FACTORIES-->
  <!--***************************************************************-->

  <soapReferenceFactories>
    <!--user-defined interceptors-->
    <factory>
      <name>interceptors</name>
      <constructor>
        <class>electric.soap.references.interceptor.InterceptorSOAPReferenceFactory</class>
      </constructor>
      <priority>1</priority>
    </factory>

    <!--ws-routing-->
    <factory>
      <name>ws-routing</name>
      <constructor>
        <class>electric.soap.routing.RoutingReferenceFactory</class>
      </constructor>
      <priority>2</priority>
    </factory>

    <!--ws-security-->
    <factory>
      <name>ws-security</name>
      <constructor>
        <class>electric.soap.security.references.SecuritySOAPReferenceFactory</class>
      </constructor>
      <priority>3</priority>
    </factory>

    <!--logging-->
    <factory>
      <name>logging</name>
      <constructor>
        <class>electric.soap.references.logging.LoggingSOAPReferenceFactory</class>
      </constructor>
      <priority>4</priority>
    </factory>

    <!--transport: soap to local service loaded by different classloader-->
    <factory>
      <name>soap-local</name>
      <constructor>
        <class>electric.soap.local.reference.SOAPLocalTransportFactory</class>
      </constructor>
      <priority>5</priority>
    </factory>

    <!--transport: soap over http-->
    <factory>
      <name>soap-to-http</name>
      <constructor>
        <class>electric.soap.http.reference.SOAPToHTTPFactory</class>
      </constructor>
      <priority>6</priority>
    </factory>

    <!--transport: soap over jms-->
    <factory>
      <name>soap-to-jms</name>
      <constructor>
        <class>electric.soap.jms.reference.SOAPToJMSFactory</class>
      </constructor>
      <priority>6</priority>
    </factory>
  </soapReferenceFactories>


  <!--***************************************************************-->
  <!--LOAD BALANCER FACTORIES-->
  <!--***************************************************************-->

  <loadBalancerFactories>
    <!-- always succeeds, so anything after this will never be used -->
    <factory>
      <constructor>
        <class>com.webmethods.fabric.services.reference.balance.RoundRobinFactory</class>
      </constructor>
    </factory>

    <!-- like round robin, but rebind every cycleTime milliseconds. -->
    <!-- this is an unsupported class -->
    <factory>
      <constructor>
        <class>com.webmethods.fabric.services.reference.balance.RoundRobinReloadFactory</class>
        <args>
          <defaultCycleTime>60000</defaultCycleTime> <!-- 1 minute, in milliseconds -->
        </args>
      </constructor>
    </factory>
  </loadBalancerFactories>


  <!--***************************************************************-->
  <!--REGISTRIES-->
  <!--***************************************************************-->

  <registries>
    <!--local services-->
    <registry>
      <name>local</name>
      <constructor>
        <class>electric.registry.local.LocalRegistry</class>
      </constructor>
      <priority>3</priority>
    </registry>

    <!--remote soap services-->
    <registry>
      <name>soap</name>
      <constructor>
        <class>electric.soap.registry.SOAPRegistry</class>
      </constructor>
      <priority>4</priority>
    </registry>

    <!--services hosted in the same vm, but different applications-->
    <registry>
      <name>crossapplication</name>
      <constructor>
        <class>electric.soap.registry.CrossApplicationRegistry</class>
      </constructor>
      <priority>5</priority>
    </registry>
  </registries>


  <!--***************************************************************-->
  <!--APPLICATION CONTEXT-->
  <!--***************************************************************-->

  <!--list of properties to be added into application context-->
  <applicationContext>
    <!--
    <simple>foo</simple>
      <complex>
        <x>10</x>
        <y>20</y>
      </complex>
    -->
  </applicationContext>


  <!--***************************************************************-->
  <!--MIME TYPES-->
  <!--***************************************************************-->

  <!--list of mime types recognized by web server-->
  <mimeTypes>
    <mimeType>
      <extension/>
      <type>text/plain</type>
    </mimeType>
    <mimeType>
      <extension>avi</extension>
      <type>video/x-msvideo</type>
    </mimeType>
    <mimeType>
      <extension>bmp</extension>
      <type>image/bmp</type>
    </mimeType>
    <mimeType>
      <extension>class</extension>
      <type>application/java</type>
    </mimeType>
    <mimeType>
      <extension>css</extension>
      <type>text/css</type>
    </mimeType>
    <mimeType>
      <extension>dll</extension>
      <type>application/octet-stream</type>
    </mimeType>
    <mimeType>
      <extension>doc</extension>
      <type>application/msword</type>
    </mimeType>
    <mimeType>
      <extension>exe</extension>
      <type>application/octet-stream</type>
    </mimeType>
    <mimeType>
      <extension>gif</extension>
      <type>image/gif</type>
    </mimeType>
    <mimeType>
      <extension>gz</extension>
      <type>application/x-gzip</type>
    </mimeType>
    <mimeType>
      <extension>htm</extension>
      <type>text/html</type>
    </mimeType>
    <mimeType>
      <extension>html</extension>
      <type>text/html</type>
    </mimeType>
    <mimeType>
      <extension>jar</extension>
      <type>application/java-archive</type>
    </mimeType>
    <mimeType>
      <extension>jpeg</extension>
      <type>image/jpeg</type>
    </mimeType>
    <mimeType>
      <extension>jpg</extension>
      <type>image/jpeg</type>
    </mimeType>
    <mimeType>
      <extension>js</extension>
      <type>text/javascript</type>
    </mimeType>
    <mimeType>
      <extension>mov</extension>
      <type>video/quicktime</type>
    </mimeType>
    <mimeType>
      <extension>mpg</extension>
      <type>video/mpeg</type>
    </mimeType>
    <mimeType>
      <extension>pdf</extension>
      <type>application/pdf</type>
    </mimeType>
    <mimeType>
      <extension>png</extension>
      <type>image/png</type>
    </mimeType>
    <mimeType>
      <extension>ppt</extension>
      <type>application/vnd.ms-powerpoint</type>
    </mimeType>
    <mimeType>
      <extension>ps</extension>
      <type>application/postscript</type>
    </mimeType>
    <mimeType>
      <extension>rtf</extension>
      <type>application/rtf</type>
    </mimeType>
    <mimeType>
      <extension>so</extension>
      <type>application/octet-stream</type>
    </mimeType>
    <mimeType>
      <extension>swf</extension>
      <type>application/x-shockwave-flash</type>
    </mimeType>
    <mimeType>
      <extension>tar</extension>
      <type>application/x-tar</type>
    </mimeType>
    <mimeType>
      <extension>tif</extension>
      <type>image/tiff</type>
    </mimeType>
    <mimeType>
      <extension>tiff</extension>
      <type>image/tiff</type>
    </mimeType>
    <mimeType>
      <extension>txt</extension>
      <type>text/plain</type>
    </mimeType>
    <mimeType>
      <extension>wav</extension>
      <type>audio/x-wav</type>
    </mimeType>
    <mimeType>
      <extension>wml</extension>
      <type>text/vnd.wap.wml</type>
    </mimeType>
    <mimeType>
      <extension>wmlc</extension>
      <type>application/vnd.wap.wmlc</type>
    </mimeType>
    <mimeType>
      <extension>wmls</extension>
      <type>application/vnd.wap.wmlscript</type>
    </mimeType>
    <mimeType>
      <extension>wmlsc</extension>
      <type>application/vnd.wap.wmlscriptc</type>
    </mimeType>
    <mimeType>
      <extension>wsdl</extension>
      <type>text/xml</type>
    </mimeType>
    <mimeType>
      <extension>xht</extension>
      <type>application/xhtml+xml</type>
    </mimeType>
    <mimeType>
      <extension>xhtml</extension>
      <type>application/xhtml+xml</type>
    </mimeType>
    <mimeType>
      <extension>xls</extension>
      <type>application/vnd.ms-excel</type>
    </mimeType>
    <mimeType>
      <extension>xml</extension>
      <type>text/xml</type>
    </mimeType>
    <mimeType>
      <extension>xsl</extension>
      <type>text/xml</type>
    </mimeType>
    <mimeType>
      <extension>zip</extension>
      <type>application/zip</type>
    </mimeType>
  </mimeTypes>


  <!--***************************************************************-->
  <!--XPATHS-->
  <!--***************************************************************-->

  <xpath>
    <!--factory to use for creating xpaths?-->
    <factory>electric.xml.xpath.TMEXPathFactory</factory>

    <!-- needed for ws-security, this factory requires that the -->
    <!-- jaxen implementation jars are available on the classpath -->
    <factory>electric.xml.jaxen.JaxenXPathFactory</factory>

    <!--cache xpaths by default?-->
    <cacheByDefault>yes</cacheByDefault>
  </xpath>


  <!--***************************************************************-->
  <!--JAXP-->
  <!--***************************************************************-->

  <jaxp>
    <DOMFactory>org.apache.xerces.jaxp.DocumentBuilderFactoryImpl</DOMFactory>
    <SAXFactory>org.apache.xerces.jaxp.SAXParserFactoryImpl</SAXFactory>
  </jaxp>


  <!--***************************************************************-->
  <!--XML/JAVA MAPPING-->
  <!--***************************************************************-->

  <javaMapping>
    <!--use direct field access?-->
    <directFieldAccess>yes</directFieldAccess>

    <!--suppress javabean properties if at least one public field?-->
    <propertySuppression>yes</propertySuppression>

    <!--use java serialization by default?-->
    <useJavaSerializationByDefault>no</useJavaSerializationByDefault>

    <!--
    namespace prefixes that use the glue extended form for package mappings.
    primary means that this is the one that glue uses to produce a namespace for a package.
    last primary wins.
    -->
    <understoodNamespacePrefix primary="true">http://www.webmethods.com/package/</understoodNamespacePrefix>
    <understoodNamespacePrefix>http://www.themindelectric.com/package/</understoodNamespacePrefix>

    <!--include xsi:type attributes when writing in literal mode?-->
    <writeTypesForLiteral>yes</writeTypesForLiteral>
  </javaMapping>


  <!--***************************************************************-->
  <!--TYPE FACTORIES-->
  <!--***************************************************************-->

  <typeFactories>
    <!--list of type factories (order is significant)-->
    <factory>electric.xml.io.mapping.MappingTypeFactory</factory>
    <factory>electric.xml.io.array.ArrayTypeFactory</factory>
    <factory>electric.xml.io.elements.ElementTypeFactory</factory>
    <factory>electric.xml.io.serialize.SerializeTypeFactory</factory>
    <factory>electric.xml.io.simple.SimpleTypeFactory</factory>
    <factory>electric.xml.io.complex.ComplexTypeFactory</factory>

    <defaultArrayType>electric.xml.io.array.ArrayType</defaultArrayType>
  </typeFactories>


  <!--***************************************************************-->
  <!--XML SCHEMAS-->
  <!--***************************************************************-->

  <schema>
    <!--list of xsd versions-->
    <xsd>http://www.w3.org/1999/XMLSchema</xsd>
    <xsd>http://www.w3.org/2000/10/XMLSchema</xsd>
    <xsd>http://www.w3.org/2001/XMLSchema</xsd>

    <!--default xsd version to be used during publishing-->
    <defaultXSD>http://www.w3.org/2001/XMLSchema</defaultXSD>
    <defaultMinOccurs>1</defaultMinOccurs>

    <!--namespace prefix-->
    <namespacePrefix>http://www.webmethods.com/</namespacePrefix>
  </schema>


  <!--***************************************************************-->
  <!--XML ENCODINGS-->
  <!--***************************************************************-->

  <xmlEncodings>
    <!--list of encodings to try in order when decyphering an xml document-->
    <encoding>UTF-16BE</encoding>
    <encoding>UTF-16LE</encoding>
    <encoding>cp037</encoding>
    <encoding>UTF8</encoding>
  </xmlEncodings>


  <!--***************************************************************-->
  <!--HTTP ENCODINGS-->
  <!--***************************************************************-->

  <httpEncoding>
    <!--some protocols declare things bytes, but are used as Strings/char[]s-->
    <!--internally for other reasons. basic authentication in http is a-->
    <!--good example of this. this setting is used to set the encoding to-->
    <!--use for those situations.-->
    <assumed>UTF8</assumed>

    <!--http requires that certain things be in ascii (the method/version of-->
    <!--request, and the status of the response. in japan, and other asian-->
    <!--countries, however, the request-uri of the service or file could contain-->
    <!--Shift-JIS or KOI-8 characters. since there is no way to represent these-->
    <!--in ascii, we offer this setting to control this behaviour. the encoding-->
    <!--specified should be ascii compliant, or you will have problems-->
    <!--communicating with other http compliant servers and clients-->
    <protocol>UTF8</protocol>
  </httpEncoding>


  <!--***************************************************************-->
  <!--SOAP ENCODINGS-->
  <!--***************************************************************-->

  <soapEncoding>
    <!--character encoding for soap documents-->
    <!--<xmlEncoding>UTF-8</xmlEncoding>-->

    <!--use system default encoding for soap documents?-->
    <useSystemDefault>no</useSystemDefault>
  </soapEncoding>


  <!--***************************************************************-->
  <!--JMS ADAPTERS-->
  <!--***************************************************************-->

  <jms>
    <!--list of built-in jms adaptors-->
    <adapter>electric.server.jms.tibco.TibcoAdapter</adapter>
    <adapter>electric.server.jms.swiftmq.SwiftMQAdapter</adapter>
    <adapter>electric.server.jms.j2ee.J2EEAdapter</adapter>
    <adapter>electric.server.jms.mqseries.MQSeriesAdapter</adapter>
    <adapter>electric.server.jms.sonicmq.SonicMQAdapter</adapter>
    <adapter>electric.server.jms.jbossmq.JBossMQAdapter</adapter>
  </jms>


  <!--***************************************************************-->
  <!--CONSOLE-->
  <!--***************************************************************-->

  <console>
    <!--enable the console by default?-->
    <enabled>yes</enabled>

    <!--title for console home page-->
    <title>Glue Management Console</title>

    <product productName='Glue Professional' treeLabel='Glue' detailsPanelURL='console/glue/glue-details.swf' helpFileURL='console/glue/gluePanelHelp.xml' serviceURL='console/system/console' consoleService='electric.console.services.glue.Glue'>
      <module>
        <title>Product</title>
        <detailsPanelURL>console/glue/licensing/licensing-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/licensing/licensingPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.licensing.Licensing</consoleService>
        <productName>Glue Professional</productName>
      </module>

      <module>
        <title>System</title>
        <detailsPanelURL>console/glue/system/systeminfo-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/system/systemPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.system.System</consoleService>
        <productName>Glue Professional</productName>
      </module>

      <module>
        <title>HTTP</title>
        <detailsPanelURL>console/glue/http/connections-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/http/httpPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.connections.Connections</consoleService>
        <productName>Glue Professional</productName>
      </module>

      <module>
        <title>Services</title>
        <detailsPanelURL>console/glue/services/services-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/services/servicesPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.services.Services</consoleService>
        <productName>Glue Professional</productName>
      </module>

      <module>
        <title>Servlets</title>
        <detailsPanelURL>console/glue/servlets/servlet-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/servlets/servletPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.servlets.Servlets</consoleService>
        <productName>Glue Professional</productName>
      </module>

      <module>
        <title>Threads</title>
        <detailsPanelURL>console/glue/threads/threads-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/threads/threadsPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.threads.Threads</consoleService>
        <productName>Glue Professional</productName>
      </module>

      <module>
        <title>Logging</title>
        <detailsPanelURL>console/glue/logging/logging-details.swf</detailsPanelURL>
        <helpFileURL>console/glue/logging/loggingPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.pro.console.services.log.Logging</consoleService>
        <productName>Glue Professional</productName>
      </module>
    </product>

    <product productName='Glue Enterprise' treeLabel='Glue' detailsPanelURL='console/glue/glue-details.swf' helpFileURL='console/glue/gluePanelHelp.xml' serviceURL='console/system/console' consoleService='electric.console.services.glue.Glue'>
      <module>
         <title>Cluster</title>
         <detailsPanelURL>console/clusters/cluster/cluster-details.swf</detailsPanelURL>
         <helpFileURL>console/clusters/cluster/clusterPanelHelp.xml</helpFileURL>
         <serviceURL>console/system/console</serviceURL>
         <consoleService>electric.glue.enterprise.console.services.cluster.Cluster</consoleService>
         <productName>Glue Enterprise</productName>
      </module>

      <module>
        <title>Application</title>
        <detailsPanelURL>console/clusters/application/application-details.swf</detailsPanelURL>
        <helpFileURL>console/clusters/application/applicationPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>electric.glue.enterprise.console.services.application.Application</consoleService>
        <productName>Glue Enterprise</productName>
      </module>

    </product>

    <product productName='Fabric' treeLabel='Fabric' detailsPanelURL='console/fabric/fabric-details.swf' helpFileURL='console/fabric/fabricPanelHelp.xml' serviceURL='console/system/console' consoleService='electric.console.services.fabric.Fabric'>

      <module>
        <title>Nodes</title>
        <detailsPanelURL>console/fabric/nodes/nodes-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/nodes/nodesPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.nodes.Nodes</consoleService>
        <productName>Fabric</productName>
      </module>

      <module>
        <title>Web Services</title>
        <detailsPanelURL>console/fabric/services/services-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/services/servicesPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.services.Services</consoleService>
        <productName>Fabric</productName>
      </module>

      <module>
        <title>Log</title>
        <detailsPanelURL>console/fabric/log/log-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/log/logPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.log.Log</consoleService>
        <productName>Fabric</productName>
      </module>

      <module>
        <title>Rules</title>
        <detailsPanelURL>console/fabric/rules/rules-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/rules/rulesPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.rules.Rules</consoleService>
        <productName>Fabric</productName>
      </module>

      <module>
        <title>Security</title>
        <detailsPanelURL>console/fabric/security/security-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/security/securityPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.security.Security</consoleService>
        <productName>Fabric</productName>
      </module>

      <module>
        <title>Databases</title>
        <detailsPanelURL>console/fabric/database/database-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/database/databasePanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.database.Database</consoleService>
        <productName>Fabric</productName>
      </module>

      <module>
        <title>Configuration</title>
        <detailsPanelURL>console/fabric/configuration/configuration-details.swf</detailsPanelURL>
        <helpFileURL>console/fabric/configuration/configurationPanelHelp.xml</helpFileURL>
        <serviceURL>console/system/console</serviceURL>
        <consoleService>com.webmethods.fabric.console.services.configuration.Configuration</consoleService>
        <productName>Fabric</productName>
      </module>

    </product>

    <!-- <handler>electric.console.handlers.IConsoleHandler</handler>
    <handler>electric.console.handlers.DefaultHandler</handler>
    <handler>electric.console.handlers.LayoutHandler</handler>
    <handler>electric.console.handlers.ResourceHandler</handler>
    <handler>electric.console.handlers.ServiceHandler</handler> -->
    <handler>electric.glue.pro.console.handlers.LoggingHandler</handler>
    <handler>electric.glue.pro.console.handlers.VitalSignsHandler</handler>
    <handler>electric.glue.enterprise.console.handlers.AppDeploymentHandler</handler>
    <handler>electric.glue.enterprise.console.handlers.ClusterHandler</handler>
    <handler>electric.glue.enterprise.console.handlers.DeployServiceHandler</handler>
    <handler>com.webmethods.fabric.console.handlers.AddTransformHandler</handler>

    <extension>
      <name>consoleLoggingService</name>
      <value>console/system/console</value>
    </extension>

    <extension>
      <name>vitalSignsService</name>
      <value>console/system/console</value>
    </extension>
  </console>


  <!--***************************************************************-->
  <!--SQL DATABASE-->
  <!--***************************************************************-->

  <sql>
    <!--list of sql databases -->
    <!--
    <database>
      <name>uddi</name>
      <driver>org.hsqldb.jdbcDriver</driver>
      <url>jdbc:hsqldb:hsql://localhost:9001</url>
      <user>sa</user>
      <password></password>
      <poolSize>10</poolSize>
    </database>
    -->
  </sql>


  <!--***************************************************************-->
  <!--UDDI-->
  <!--***************************************************************-->

  <uddi>
    <!--uddi type taxonomy-->
    <tModel tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'>
      <name>uddi-org:types</name>
      <description xml:lang='en'>UDDI Type Taxonomy</description>
    </tModel>

    <!--uddi registry tmodel-->
    <tModel tModelKey='uuid:4CD7E4BC-648B-426D-9936-443EAAC8AE23'>
      <name>uddi-org:inquiry</name>
      <description xml:lang='en'>UDDI Inquiry API - Core Specification</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='xmlSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='soapSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi registry tmodel-->
    <tModel tModelKey='uuid:AC104DCC-D623-452F-88A7-F8ACD94D9B2B'>
      <name>uddi-org:inquiry_v2</name>
      <description xml:lang='en'>UDDI Inquiry API V2.0 - Core Specification</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='xmlSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='soapSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi registry tmodel-->
    <tModel tModelKey='uuid:A2F36B65-2D66-4088-ABC7-914D0E05EB9E'>
      <name>uddi-org:publication_v2</name>
      <description xml:lang='en'>UDDI Publication API V2.0 - Core Specification</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='xmlSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='soapSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi registry tmodel-->
    <tModel tModelKey='uuid:64C756D1-3374-4E00-AE83-EE12E38FAE63'>
      <name>uddi-org:publication</name>
      <description xml:lang='en'>UDDI Publication API - Core Specification</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='xmlSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='soapSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi registry tmodel-->
    <tModel tModelKey='uuid:3FB66FB7-5FC3-462F-A351-C140D9BD8304'>
      <name>uddi-org:taxonomy</name>
      <description xml:lang='en'>UDDI Taxonomy API</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='xmlSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='soapSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi registry tmodel-->
    <tModel tModelKey='uuid:1E3E9CBC-F8CE-41AB-8F99-88326BAD324A'>
      <name>uddi-org:taxonomy_v2</name>
      <description xml:lang='en'>UDDI validate_values API</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='xmlSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
        <keyedReference keyName='categorization' keyValue='soapSpec' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:C0B9FE13-179F-413D-8A5B-5004DB8E5BB2' checked='true'>
      <name>ntis-gov-naics:1997</name>
      <description xml:lang='en'>Business Taxonomy: NAISC (1997 Release)</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='categorization' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:DB77450D-9FA8-45D4-A7BC-04411D14E384' checked='true'>
      <name>unspsc-org:3-1</name>
      <description xml:lang='en'>Product Taxonomy: UNSPSC (Version 3.1)</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='categorization' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:61668105-B6B6-425C-914B-409FB252C36D' checked='true'>
      <name>uddi-org:iso-ch:3166:1999</name>
      <description xml:lang='en'>UDDI Geographic Taxonomy</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='categorization' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:A035A07C-F362-44DD-8F95-E2B134BF43B4'>
      <name>uddi-org:misc-taxonomy</name>
      <description xml:lang='en'>Other Taxonomy</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='categorization' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:4064C064-6D14-4F35-8953-9652106476A9' checked='true'>
      <name>uddi-org:owningBusiness</name>
      <description xml:lang='en'>A pointer to a businessEntity that owns the categorized data</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='identifier' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:807A2C6A-EE22-470D-ADC7-E0424A337C03'>
      <name>uddi-org:relationships</name>
      <description xml:lang='en'>UDDI businessEntity relationship descriptions</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='identifier' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:327A56F0-3299-4461-BC23-5CD513E95C55' checked='true'>
      <name>uddi-org:operators</name>
      <description xml:lang='en'>Identifier system for identifying operators of a registry</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='identifier' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:8609C81E-EE1F-4D5A-B202-3EB13AD01823'>
      <name>dnb-com:D-U-N-S</name>
      <description xml:lang='en'>Dun &amp; Bradstreet D-U-N-S(r) Number</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='identifier' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - taxonomy-->
    <tModel tModelKey='uuid:B1B1BAF5-2329-43E6-AE13-BA8E97195039'>
      <name>thomasregister-com:supplierID</name>
      <description xml:lang='en'>Thomas Registry Suppliers</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='identifier' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - other-->
    <tModel tModelKey='uuid:93335D49-3EFB-48A0-ACEA-EA102B60DDC6'>
      <name>uddi-org:smtp</name>
      <description xml:lang='en'>E-mail based web service</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='transport' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - other-->
    <tModel tModelKey='uuid:1A2B00BE-6E2C-42F5-875B-56F32686E0E7'>
      <name>uddi-org:fax</name>
      <description xml:lang='en'>Fax based web service</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='protocol' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - other-->
    <tModel tModelKey='uuid:5FCF5CD0-629A-4C50-8B16-F94E9CF2A674'>
      <name>uddi-org:ftp</name>
      <description xml:lang='en'>File transfer protocol (ftp) based web service</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='transport' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - other-->
    <tModel tModelKey='uuid:38E12427-5536-4260-A6F9-B5B530E63A07'>
      <name>uddi-org:telephone</name>
      <description xml:lang='en'>Telephone based web service</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - other-->
    <tModel tModelKey='uuid:68DE9E80-AD09-469D-8A37-088422BFBC36'>
      <name>uddi-org:http</name>
      <description xml:lang='en'>E-mail based web service</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='transport' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>

    <!--uddi core model - other-->
    <tModel tModelKey='uuid:4CEC1CEF-1F68-4B23-8CB7-8BAA763AEB89'>
      <name>uddi-org:homepage</name>
      <description xml:lang='en'>HTTP Web Home Page URL</description>
      <categoryBag>
        <keyedReference keyName='categorization' keyValue='specification' tModelKey='uuid:C1ACF26D-9672-4404-9D70-39B756E62AB4'/>
      </categoryBag>
    </tModel>
    
    <predefinedKeys>
      <businessKeys>
        <business>
          <name>fabric</name>
          <businessKey>62188325-6296-3f9e-9a11-f138eb84e52b</businessKey>
        </business>
      </businessKeys>  
      <tModelKeys>
        <tModel>
          <name>webmethods-org:signature</name>
          <tModelKey>89f556a1-f683-3ae0-a09d-4c463b335e2a</tModelKey>
        </tModel>
      </tModelKeys> 
    </predefinedKeys>  
    
  </uddi>


  <!--***************************************************************-->
  <!--GENERAL FABRIC-->
  <!--***************************************************************-->

  <!--If true, execute a Fabric.join() when startup occurs.--> 
  <!--This allows Glue applications to join the fabric when hosted in a-->
  <!--third party servlet container as well as allowing existing Glue -->
  <!--programs to join the fabric without adding Fabric.join().-->
  <autoJoinFabric>false</autoJoinFabric>


  <!--***************************************************************-->
  <!--FABRIC SECURITY -->
  <!--***************************************************************-->

  <fabricSecurity>
    <!--realm entry must match fabric realm configures in the "realms" section-->
    <fabricRealm>realm</fabricRealm>
    <!--<fabricUser>fabric</fabricUser>-->
    <!--<fabricPassword>changeit</fabricPassword>-->
    <!--<keyStore>FabricKeyStore</keyStore>-->
    <!--<keyStorePassword>changeit</keyStorePassword>-->
    <!--<trustStore>FabricTrustStore</trustStore>-->
  </fabricSecurity>


  <!--***************************************************************-->
  <!--FABRIC DISCOVERY-->
  <!--***************************************************************-->

  <discovery>
    <noPath>fabric://failover&amp;monitor</noPath>
    <useLocator>chain</useLocator>
    <useSignatures>true</useSignatures>

    <!--This locator creates a local UDDI registry that uses a-->
    <!--P2P XML database backend. This registry attempts to replicate itself-->
    <!--until there are at least two copies of the registry in the fabric.-->
    <locator>
      <name>xdb</name>
      <constructor>
        <class>com.webmethods.fabric.services.registry.locators.xdb.XDBLocator</class>
        <args>
          <inquiryURL>/fabric/uddi/inquiry</inquiryURL>
          <publicationURL>/fabric/uddi/publication</publicationURL>
          <adminURL>/fabric/uddi/admin</adminURL>
          <user>guest</user>
          <password>guest</password>
          <business>fabric</business>
          <operator>fabric</operator>
        </args>
      </constructor>
    </locator>

    <!--This locator returns a reference to a third party UDDI registry.-->
    <!--Use this locator if you want the fabric to store information about services-->
    <!--into a third party UDDI implementation instead of into the Fabric's built-in-->
    <!--replicating UDDI server.-->
    <locator>
      <name>thirdparty</name>
      <constructor>
        <class>com.webmethods.fabric.services.registry.locators.uddi.UDDILocator</class>
        <args>
          <inquiryURL>http://localhost:8004/uddi/inquiry</inquiryURL>
          <publicationURL>http://localhost:8005/uddi/publication</publicationURL>
          <user>santa</user>
          <password>christmas</password>
          <business>fabric</business>
        </args>
      </constructor>
    </locator>

    <!--This locator sends out a UDP ping on a particular port (9030 by default)-->
    <!--to other nodes in the same subnet. When a node with an installed SubnetLocator-->
    <!--receives this ping, it responds with a UDP packet that contains the URL of the-->
    <!--registry that it is currently using. The SubnetLocator that sent the ping selects-->
    <!--the first UDDI registry that can be contacted using a received URL, or null if no live-->
    <!--registries are located.-->
    <locator>
      <name>subnet</name>
      <constructor>
        <class>com.webmethods.fabric.services.registry.locators.subnet.SubnetLocator</class>
        <args>
          <port>9030</port>
          <maxWait>10</maxWait>
          <pingCycle>5</pingCycle>
        </args>
      </constructor>
    </locator>

    <!--This locator returns a reference to the same UDDI registry as the one being used-->
    <!--by the fabric node at the specified URL.-->
    <!--It does this by contacting the service manager-->
    <!--whose WSDL is located at <url>/fabric/servicemanager.wsdl.-->
    <locator>
      <name>wan</name>
      <constructor>
        <class>com.webmethods.fabric.services.registry.locators.wan.WANLocator</class>
        <args>
          <url>http://host:port/context</url>
        </args>
      </constructor>
    </locator>

    <!--This is the default locator, and iterates through a list of named-->
    <!--locators until one of them returns a reference to a UDDI registry.-->
    <!--Named locators cannot currently be forward referenced.-->
    <locator>
      <name>chain</name>
      <constructor>
        <class>com.webmethods.fabric.services.registry.locators.chain.ChainedLocator</class>
        <args>
          <clientExitStartup>true</clientExitStartup>
          <serverExitStartup>true</serverExitStartup>
          <retryLimit>-1</retryLimit>
          <maxWaitTime>60000</maxWaitTime>
          <locators>subnet,xdb</locators>
        </args>
      </constructor>
    </locator>
  </discovery>


  <!--***************************************************************-->
  <!--FABRIC XML DATABASES-->
  <!--***************************************************************-->

  <!--xml database settings-->
  <xdbServers>
    <!--default seconds between server syncs-->
    <defaultSyncCycle>10</defaultSyncCycle>

    <!--default replication factor-->
    <defaultReplicationFactor>2</defaultReplicationFactor>

    <!--factory for creating data stores-->
    <defaultStoreFactory>
      <constructor>
        <class>com.webmethods.xdb.store.memory.MemoryStoreFactory</class>
      </constructor>
    </defaultStoreFactory>
  </xdbServers>


  <!--***************************************************************-->
  <!--FABRIC ENDPOINT ACTIVITY-->
  <!--***************************************************************-->

  <endpointActivity>
    <!--seconds between keep-alive cycles-->
    <keepAliveCycle>60</keepAliveCycle>

    <!--seconds between check for rule updates-->
    <ruleCheckCycle>20</ruleCheckCycle>
  </endpointActivity>


  <!--***************************************************************-->
  <!--FABRIC LIVENESS CHECKING-->
  <!--***************************************************************-->

  <liveness>
    <!--seconds between checking nodes for liveness-->
    <nodeCycle>30</nodeCycle>

    <!--seconds after which a dead node should be removed-->
    <nodeThreshold>100</nodeThreshold>

    <!--seconds between checking services for liveness-->
    <serviceCycle>30</serviceCycle>

    <!--seconds after which a dead service should be removed-->
    <serviceThreshold>100</serviceThreshold>
  </liveness>
</config>
