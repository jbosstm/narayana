# trace recovery in the XTS demo after killing the demo
# before returning from the second (theatre service) prepare
# the point at which the JVM is killed can be either
# 1 just before the theatre service prepares local changes
# 2 just before XTS logs the recovery record
# 3 just before the theatre service commits local changes
# 4 just before XTS notifies COMPLETED

# fiddle the first recovery wait so it does not take all day
RULE speed up first recovery wait
CLASS PeriodicRecovery
METHOD doPeriodicWait
AT ENTRY
IF !flagged("firstPeriodicRecoveryWait")
DO flag("firstPeriodicRecoveryWait"),
   Thread.sleep(30 * 1000),
   RETURN
ENDRULE

# open the trace file
RULE open trace file
CLASS ServiceStateManager
METHOD <init>
IF openTrace("log", "trace.out")
DO traceln("log", "*** started logging recovery")
ENDRULE


# track restoration of service state from disk
# triggered in 1-4, current will always be non-null
# shadow will be null for restaurant and null for
# theatre service in 1,4 and non-null in 2,3

RULE trace restore state
CLASS ServiceStateManager
METHOD restoreState
AT RETURN
IF TRUE
DO traceln("log", "restore state for " + $0),
   traceln("log", "preparedTxId =  " + $shadowTxId),
   traceln("log", "current =  " + $current),
   traceln("log", "shadow =  " + $shadow)
ENDRULE

# track recovered call to restaurant and theatre managers during recovery
# for restaurant participant AT triggered in 1,2 with $! == true
# for restaurant participant BA triggered in 1-4 with $! == false
# for theatre participant AT triggered in 3 with $! = true
# and in 4 with $! = false
# for theatre participant BA triggered in 3 with $! = true
# and in 4 with $! = false
RULE trace service state
CLASS ServiceStateManager
METHOD recovered
AT EXIT
IF TRUE
DO traceln("log", "recovered tx " + $1 + " type " + $2 + " ==> " + $!)
ENDRULE

# track call to commitSeats in theatre
# triggered in 3 for BA
RULE trace commit seats under local recovery in theatre participant
CLASS ServiceStateManager
METHOD commit
IF callerEquals("confirmCompleted")
AT CALL commitShadowState
DO traceln("log", "committing shadow state for " + $0 + " in " + $1)
ENDRULE

# track call to rollbackSeats in theatre
# triggered in 2 for AT and BA
RULE trace rollback seats under local recovery in theatre participant
CLASS ServiceStateManager
METHOD rollback
AT CALL clearShadowState
IF callerEquals("recoveryScanCompleted") OR
   callerEquals("confirmCompleted")
DO traceln("log", "rolling back shadow state for " + $0 + " in " + $1)
ENDRULE
