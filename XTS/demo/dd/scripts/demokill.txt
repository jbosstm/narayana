# kill the XTS demo after preparing the AT theatre participant
# or after preparing the BA theatre participant
#
# this script crashes the XTS demo at one of 4 points depending upon
# the value of system property demo.kill.point, which should be
# set to one of the string values "1", "2", "3" or "4". The four
# kill points are
#
# 1 just before the theatre service prepares local changes
# 2 just before XTS logs the theatre recovery record
# 3 just before the theatre service commits local changes
# 4 just after the theatre service commits local changes
#
# At each point there  may be a participant record for each service (PR, PT)
# and/or a shadow state file for each service (SR, ST) (n.b. this assumes the
# restaurant is booked and enlisted before the theatre and that the coordinator
# processes the participants in this order). The files should be present as
# follows
#
# AT 1 SR, PR
# AT 2 SR, PR, ST
# AT 3 ST, PT
# AT 4 PT
#
# BA 1 PR
# BA 2 PR, ST
# BA 3 PR, ST, PT
# BA 4 PR, PT
#
# In all cases the transactions should be rolled back/and or compensated
# but recovery processing will vary according to the presence of the
# participant record and shadow state file
#
# AT 1 -- restaurant participant should be recovered and restaurant
# shadow state should be cleared under participant rollback
#
# AT 2 -- restaurant participant should be recovered and restaurant
# shadow state should be cleared under participant rollback. theatre
# shadow state should be cleared at end of recovery scan
#
# AT 3 -- theatre participant should be recovered and theatre shadow
# state should be cleared under participant rollback.
#
# AT 4 -- theatre participant should be recovered but participant
# rollback should find no theatre shadow state to clear

# BA 1 -- restaurant participant should be recovered and compensated
#
# BA 2 -- restaurant participant should be recovered and compensated.
# theatre shadow state should be cleared at end of recovery scan.
#
# BA 3 -- restaurant participant should be recovered and compensated.
# theatre participant should be recovered, theatre shadow state should
# be committed and theatre participant should be compensated.
#
# BA 4 -- restaurant participant should be recovered and
# compensated. theatre participant should be recovered and compensated

# open the trace file
RULE open trace file
CLASS ServiceStateManager
METHOD <init>
IF openTrace("log", "trace.out")
DO traceln("log", "started logging kill  -- point = " + System.getProperty("demo.kill.point"))
ENDRULE

# identify the theatre manager
RULE identify theatre manager
CLASS TheatreManager
METHOD <init>
AT EXIT
IF TRUE
DO flag($0)
ENDRULE

# kill the demo just before the theatre service prepares local changes
RULE kill at kill point 1
CLASS ServiceStateManager
METHOD prepare
AT CALL writeShadowState
BIND killPoint =  System.getProperty("demo.kill.point")
IF flagged($0) && killPoint == "1"
DO traceln("killing JVM at point " + killPoint),
   killJVM()
ENDRULE

# kill the demo just before XTS logs the recovery record
RULE kill at kill point 2
CLASS ServiceStateManager
METHOD prepare
AT RETURN
BIND killPoint =  System.getProperty("demo.kill.point")
IF flagged($0) && killPoint == "2"
DO traceln("killing JVM at point " + killPoint),
   killJVM()
ENDRULE

# kill the demo just before the theatre service commits local changes
RULE kill at kill point 3
CLASS ServiceStateManager
METHOD commit
AT ENTRY
BIND killPoint =  System.getProperty("demo.kill.point"),
     nullValue : Object = null
IF flagged($0) && (killPoint == "3" || killPoint == nullValue)
DO traceln("killing JVM at point " + killPoint),
   killJVM()
ENDRULE

# kill the demo just before XTS notifies COMPLETED
RULE kill at kill point 4
CLASS ServiceStateManager
METHOD commit
AT RETURN
BIND killPoint =  System.getProperty("demo.kill.point")
IF flagged($0) && killPoint == "4"
DO traceln("killing JVM at point " + killPoint),
   killJVM()
ENDRULE

