<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, JBoss Inc., and individual contributors as indicated
  by the @authors tag.  All rights reserved. 
  See the copyright.txt in the distribution for a full listing 
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU General Public License, v. 2.0.
  This program is distributed in the hope that it will be useful, but WITHOUT A 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE.  See the GNU General Public License for more details.
  You should have received a copy of the GNU General Public License,
  v. 2.0 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
  MA  02110-1301, USA.
  
  (C) 2005-2006,
  @author JBoss Inc.
-->
<!DOCTYPE web-app PUBLIC "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN" "http://java.sun.com/dtd/web-app_2_3.dtd">

<!--
  Welcome to the Glue web.xml file.

  A copy of this file is located in glue.jar with the name "default-web.xml".
  If Glue starts a web application and no web.xml is found in the application's
  WEB-INF directory, the file "default-web.xml" is loaded via the class path and
  used instead.

  If the newapp utility is used to create a skeleton J2EE application structure,
  this file is copied from <GLUE-HOME>/app-template/WEB-INF/web.xml
  into the new application's WEB-INF directory.

  This file installs two servlets:

  1. The glue-soap servlet processes WSDL requests and
     SOAP invocations that arrive via /services/*.

  2. The glue-console servlet processes flash console
     requests that arrive via /console/*.

  All other requests, such as those for HTML and JSPs, are assumed to be handled
  by the servlet container, which can be either the Glue servlet container in
  the standalone case, or a 3rd party servlet container when Glue is hosted.

  By default, requests are not authenticated. To enable authentication,
  uncomment the <login-config> element and set the <auth-method> and <realm-name>
  fields to their desired values. If you are running in the Glue servlet
  container, you can define realms by editing the Glue WEB-INF/glue-config.xml file.

  The <init-param> for httpRegistryRoot defines how inbound messages are routed
  to the local registry. A value of "/" maps ".../services/xxx" to "/xxx" in the
  registry, while a value of "/foo" maps ".../services/xxx" to "/foo/xxx". If
  this parameter is not set, a value of "/" is assumed.

  If Glue is hosted in an old servlet 2.1 container, uncomment the
  <init-param> for electric.http.url and set the <param-value> to the URL
  that Glue is exposed on.
-->

<web-app>
	<display-name>XML Transaction Service Demo Client</display-name>

    <description>XML Transaction Service Demo Client</description>
    
    <!-- Initialise WS-C services -->
    <listener>
        <listener-class>com.arjuna.webservices.wscoor.server.ActivationCoordinatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wscoor.server.ActivationRequesterInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wscoor.server.RegistrationCoordinatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wscoor.server.RegistrationRequesterInitialisation</listener-class>
    </listener>
    
    <!-- Initialise WS-C  -->
    <listener>
        <listener-class>com.arjuna.wsc.messaging.deploy.CoordinationInitialisation</listener-class>
    </listener>
    
    <!-- Initialise WSCF -->
    <listener>
        <listener-class>com.arjuna.mw.wsc.deploy.WSCFInitialisation</listener-class>
    </listener>

    <!-- Initialise Arjuna TX services -->
    <listener>
        <listener-class>com.arjuna.webservices.wsarjtx.server.TerminationParticipantInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsarjtx.server.TerminationCoordinatorInitialisation</listener-class>
    </listener>
    
    <!-- Initialise WS-AT services -->
    <listener>
        <listener-class>com.arjuna.webservices.wsat.server.CompletionCoordinatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsat.server.CompletionInitiatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsat.server.CoordinatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsat.server.ParticipantInitialisation</listener-class>
    </listener>
    
    <!-- Initialise WS-BA services -->
    <listener>
        <listener-class>com.arjuna.webservices.wsba.server.CoordinatorCompletionCoordinatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsba.server.CoordinatorCompletionParticipantInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsba.server.ParticipantCompletionCoordinatorInitialisation</listener-class>
    </listener>
    <listener>
        <listener-class>com.arjuna.webservices.wsba.server.ParticipantCompletionParticipantInitialisation</listener-class>
    </listener>
    
    <!-- Initialise WS-T  -->
    <listener>
        <listener-class>com.arjuna.wst.messaging.deploy.TransactionInitialisation</listener-class>
    </listener>

    <!-- Initialise WSTX -->
    <listener>
        <listener-class>com.arjuna.mw.wst.deploy.WSTXInitialisation</listener-class>
    </listener>
    
    <!--  Initialise the HTTP Client -->
    <listener>
        <listener-class>com.arjuna.webservices.transport.http.HttpClientInitialisation</listener-class>
    </listener>

    <servlet>
      <servlet-name>Basic Client Servlet</servlet-name>
      <servlet-class>com.arjuna.xts.nightout.clients.webmethods.BasicClient</servlet-class>
      <init-param>
        <param-name>restaurantATURL</param-name>
        <param-value>@restaurantATURL@</param-value>
      </init-param>
      <init-param>
        <param-name>restaurantBAURL</param-name>
        <param-value>@restaurantBAURL@</param-value>
      </init-param>
      <init-param>
        <param-name>taxiATURL</param-name>
        <param-value>@taxiATURL@</param-value>
      </init-param>
      <init-param>
        <param-name>taxiBAURL</param-name>
        <param-value>@taxiBAURL@</param-value>
      </init-param>
      <init-param>
        <param-name>theatreATURL</param-name>
        <param-value>@theatreATURL@</param-value>
      </init-param>
      <init-param>
        <param-name>theatreBAURL</param-name>
        <param-value>@theatreBAURL@</param-value>
      </init-param>
    </servlet>
    
    <servlet>
      <servlet-name>glue-soap</servlet-name>
      <servlet-class>electric.server.http.ServletServer</servlet-class>
      <init-param>
        <param-name>httpRegistryRoot</param-name>
        <param-value>/</param-value>
      </init-param>
      <!--
      <init-param>
        <param-name>electric.http.url</param-name>
        <param-value>http://host:port/context</param-value>
      </init-param>
      -->
      <load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
      <servlet-name>glue-console</servlet-name>
      <servlet-class>electric.console.ConsoleServlet</servlet-class>
      <init-param>
        <param-name>soapServletContext</param-name>
        <param-value>/services</param-value>
      </init-param>
      <load-on-startup>2</load-on-startup>
    </servlet>
    
    <servlet>
        <servlet-name>HTTP SOAP Service Multiplexor Servlet</servlet-name>
        <servlet-class>com.arjuna.webservices.transport.http.HttpServiceMultiplexorServlet</servlet-class>
        <!--
          The BaseHttpURI and BaseHttpsURI parameters specify the default values
          used to generate the service URIs without reference to an incoming
          request.
         -->
        <init-param>
            <param-name>BaseHttpURI</param-name>
            <param-value>http://@hostname@:@port@/@urlstub@/soap/</param-value>
        </init-param>
        <!--
        <init-param>
            <param-name>BaseHttpsURI</param-name>
            <param-value>https://@hostname@:@port@/arjuna/soap/</param-value>
        </init-param>
        -->
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <!-- servlet mappings -->	
    <servlet-mapping>
      <servlet-name>Basic Client Servlet</servlet-name>
      <url-pattern>/basicclient</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>glue-soap</servlet-name>
      <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
      <servlet-name>glue-console</servlet-name>
      <url-pattern>/console/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>HTTP SOAP Service Multiplexor Servlet</servlet-name>
        <url-pattern>/soap/*</url-pattern>
    </servlet-mapping>

    <welcome-file-list>
      <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
</web-app>
