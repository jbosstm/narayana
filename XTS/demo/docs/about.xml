<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags. 
  See the copyright.txt in the distribution for a full listing 
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.

  
  (C) 2005-2008,
  @author JBoss Inc.
-->
<page title="XML Transaction Service Demonstration Application: About the sample application" rootpath="../..">
    <header>
        XML Transaction Service Demonstration Application: About the sample application
    </header>
    <content>
        <navigation>
            <links include="includes/trailmap_navigation.xml"/>
            <links title="Navigation">
                <link ref="index.html">Start Trailmap</link>
                <link ref="installcontent.html">Previous</link>
                <link ref="deploying.html">Next</link>
            </links>
        </navigation>

        <area title="About the sample application">
            <html>
                <p>
                    The sample application features some simple transactional Web services, a client application, deployment metadata files and a build script.
                    The application is designed to introduce some of the key features of the XML Transaction component of JBossTS 4.4.0 and help you get started with writing your own transactional Web services applications.
                </p>
                <p>
                    The application is based around a simple booking scenario. The services provide the ability to transactionally reserve resources,
                    whilst the client provides an interface to select the nature and quantity of the reservations.
                    The chosen application domain is services for a night out.
                </p>
                <p>
                    The server components consist of three Web services (Restaurant, Theatre, Taxi) which offer transactional booking services.
                    These services each expose a GUI with state information and an event trace log.
                </p>
                <p>
                    The client side of the application is a servlet which allows the user to select the required reservations and then books a night out by making invocations on each of the services within the scope of a Web Services transaction.
                </p>
                <p>
                    The demo is implemented in two versions. The standard version exposes the services as JaxWS service endpoints. The client obtains service endpoint proxies from JaxWS and uses them to invoke the remote service methods. This version of the demo employs the XTS 1.1 protocol implementation.
                    The alternative implementation demonstrates how to invoke legacy services. It uses JaxRPC to invoke the remote methods of services exposed as classes implementing the Remote interface. This version of the demo employs the XTS 1.0 protocol implementation.
                </p>
                <p>
                    Full source code for the services and the client is included, along with an ant script for building and deploying the code.
                    The following step of this trail map will show you how to deploy and run the application.
                </p>
            </html>
        </area>
    </content>
    <footer/>
</page>
