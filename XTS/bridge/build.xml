<!--
  JBoss, Home of Professional Open Source
  Copyright 2007, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.


  (C) 2007,
  @author JBoss Inc.
-->

<project name="bridge" default="jars" basedir=".">

    <!-- ================================================================== -->
    <!-- build and install the XTS bridge implementation and api jars       -->
    <!-- ================================================================== -->

    <property  name="root.dir" location=".."/>

    <import file="../sharedbuild.xml"/>

    <!-- Set module name -->
    <property name="modulename" value="recovery"/>

    <!-- the directory in which XTS resides -->
    <property name="xts.home" value="../xts-install"/>

    <!-- use $JBOSS_HOME to locate directory for deploy and undeploy -->
    <property  environment="env"/>
    <property  name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property  name="jboss.server" value="default"/>
    <property  name="deploy.dir" value="${jboss.home}/derver/${jboss.server}/deploy}"/>

    <property name="src.dir" location="src"/>

    <property name="metainf.dir"         value="META-INF"/>
    <property name="build.dir"         value="build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.lib.dir" location="${build.dir}/lib"/>

	<!--sibling lib directories -->

	<property name="wsas.build.lib.dir" value="${wsas.dir}/build/lib"/>
    <property name="wsc.build.lib.dir" value="${ws-c.dir}/build/lib"/>
	<property name="wscf.build.lib.dir" value="${wscf.dir}/build/lib"/>
    <property name="wst.build.lib.dir" value="${ws-t.dir}/build/lib"/>
    <property name="wstx.build.lib.dir" value="${wstx.dir}/build/lib"/>
    <property name="recovery.build.lib.dir" value="${recovery.dir}/build/lib"/>

    <!--sibling module directories and jars -->

    <property name="wsas.libs" value="wsas.jar"/>

    <property name="wsc.libs" value="ws-c.jar"/>
    <property name="wsc-api.libs" value="ws-c-api.jar"/>
    <property name="wsc11.libs" value="ws-c11.jar"/>
    <property name="wsc.all.libs" value="${wsc.libs} ${wsc11.libs}"/>

    <property name="wscf.libs" value="wscf.jar"/>
    <property name="wscf11.libs" value="wscf11.jar"/>
    <property name="wscf.all.libs" value="${wscf.libs} ${wscf11.libs}"/>

    <property name="wst.libs" value="ws-t.jar"/>
    <property name="wst-api.libs" value="ws-t-api.jar"/>
    <property name="wst11.libs" value="ws-t11.jar"/>
    <property name="wst11-api.libs" value="ws-t11-api.jar"/>
    <property name="wst.all.libs" value="${wst.libs} ${wst-api.libs} ${wst11.libs} ${wst11-api.libs} "/>

    <property name="wstx.libs" value="wstx.jar"/>
    <property name="wstx-api.libs" value="wstx-api.jar"/>
    <property name="wstx11.libs" value="wstx11.jar"/>
    <property name="wstx11-api.libs" value="wstx11-api.jar"/>
    <property name="wstx.all.libs" value="${wstx.libs} ${wstx-api.libs} ${wstx11.libs} ${wstx11-api.libs}  "/>

    <property name="recovery.libs" value="xts.recovery.jar"/>
    <!-- enable debugging of XTS service code -->

    <property name="javac.debug" value="on"/>

    <property name="bridge.api.class.files" value="org/jboss/jbossts/xts/bridge/at/BridgeWrapper.class"/>

    <target name="init">
        <delete dir="${build.dir}"/>
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.lib.dir}"/>
    </target>

    <!-- compile the 1.1 specific classes in the sar source which support WS-AT 1.1. bridging -->
    <target name="compile" depends="init">
        <compile.macro included.classes="org/jboss/jbossts/xts/bridge/**/*">
            <additional.classpath>
                <fileset dir="${wsas.build.lib.dir}" includes="${wsas.libs}"/>
                <fileset dir="${wsc.build.lib.dir}" includes="${wsc.all.libs}"/>
                <fileset dir="${wscf.build.lib.dir}" includes="${wscf.all.libs}"/>
                <fileset dir="${wst.build.lib.dir}" includes="${wst.all.libs}"/>
                <fileset dir="${wstx.build.lib.dir}" includes="${wstx.all.libs}"/>
                <fileset dir="${recovery.build.lib.dir}" includes="${recovery.libs}"/>
            </additional.classpath>
        </compile.macro>
    </target>

    <!-- build the api jar -->
    <target name="api-jar" depends="compile">
        <!-- include bridge api class -->
        <jar jarfile="${build.lib.dir}/bridge-api.jar">
            <fileset dir="${build.classes.dir}" includes="${bridge.api.class.files}"/>
        </jar>
    </target>
    
    <target name="clean">
      <delete dir="${build.dir}"/>
      <delete file="${build.lib.dir}/jbossxts-api.jar"/>
    </target>

    <!-- the bridge code only builds a 1.1 version and only exports an api jar -->

    <target name="jars" depends="api-jar"/>

</project>
