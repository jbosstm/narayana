<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.


  (C) 2005-2006,
  @author JBoss Inc.
-->
<project name="WSTX" default="war" basedir=".">

    <!-- Set module name -->
    <property name="modulename" value="wstx"/>

    <!-- set root before including shared build -->

    <property name="root.dir" location = ".."/>

    <import file="../sharedbuild.xml"/>

    <!-- use $JBOSS_HOME to locate directory for deploy and undeploy -->
    <property  environment="env"/>
    <property  name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property  name="jboss.server" value="default"/>
    <property  name="deploy.dir" value="${jboss.home}/derver/${jboss.server}/deploy}"/>

    <!-- internal paths and jars -->

    <property name="src.dir" value="classes"/>
    <property name="src10.dir" value="classes10"/>
    <property name="src11.dir" value="classes11"/>
	<property name="build.dir" value="build"/>
    <property name="build.classes.dir" value="${build.dir}/classes"/>
    <property name="build.classes10.dir" value="${build.dir}/classes10/classes"/>
    <property name="build.classes11.dir" value="${build.dir}/classes11/classes"/>
	<property name="build.webapps.dir" value="${build.dir}/webapps"/>
	<property name="build.lib.dir" value="${build.dir}/lib"/>
	<property name="build.htdocs.dir" value="${build.dir}/htdocs"/>

    <property name="tests.src.dir" value="tests/classes"/>
    <property name="tests.dd.dir" value="tests/dd"/>

    <property name="tests.build.dir" value="tests/build"/>
    <property name="tests.build.classes.dir" value="${tests.build.dir}/classes"/>
    <property name="tests.build.dd.dir" value="${tests.build.dir}/dd"/>
    <property name="tests.build.webapps.dir" value="${tests.build.dir}/webapps"/>
    <property name="tests.build.lib.dir" value="${tests.build.dir}/lib"/>


    <!-- classes provided for clients via api jars -->
    <property name="wstx.api.classes" value="com/arjuna/mw/wst/TxContext.class"/>
    <property name="wstx10.api.classes" value="com/arjuna/mw/wst/UserTransaction.class
            com/arjuna/mw/wst/UserTransactionFactory.class com/arjuna/mw/wst/TransactionManager.class
            com/arjuna/mw/wst/TransactionManagerFactory.class com/arjuna/mw/wst/UserBusinessActivity.class
            com/arjuna/mw/wst/UserBusinessActivityFactory.class com/arjuna/mw/wst/BusinessActivityManager.class
            com/arjuna/mw/wst/BusinessActivityManagerFactory.class
            com/arjuna/mw/wst/client/JaxWSHeaderContextProcessor.class
            com/arjuna/mw/wst/client/JaxRPCHeaderContextProcessor.class
            com/arjuna/mw/wst/client/JaxBaseHeaderContextProcessor.class
            com/arjuna/mw/wst/service/JaxWSHeaderContextProcessor.class
            com/arjuna/mw/wst/service/JaxWSSubordinateHeaderContextProcessor.class
            com/arjuna/mw/wst/service/JaxRPCHeaderContextProcessor.class
            com/arjuna/mw/wst/service/JaxBaseHeaderContextProcessor.class"/>
    <property name="wstx11.api.classes" value="com/arjuna/mw/wst11/UserTransaction.class
            com/arjuna/mw/wst11/UserTransactionFactory.class com/arjuna/mw/wst11/TransactionManager.class
            com/arjuna/mw/wst11/TransactionManagerFactory.class com/arjuna/mw/wst11/UserBusinessActivity.class
            com/arjuna/mw/wst11/UserBusinessActivityFactory.class com/arjuna/mw/wst11/BusinessActivityManager.class
            com/arjuna/mw/wst11/BusinessActivityManagerFactory.class
            com/arjuna/mw/wst11/client/JaxWSHeaderContextProcessor.class
            com/arjuna/mw/wst11/client/JaxBaseHeaderContextProcessor.class
            com/arjuna/mw/wst11/service/JaxWSHeaderContextProcessor.class
            com/arjuna/mw/wst11/service/JaxWSSubordinateHeaderContextProcessor.class
            com/arjuna/mw/wst11/service/JaxBaseHeaderContextProcessor.class"/>

    <property  name="tests.libs" value="junit.jar"/>

    <path id="tests.lib.path">
        <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
    </path>

    <property name="javac.debug"             value="on"/>
    <property name="javac.optimize"          value="off"/>

    <path id="com.arjuna.mwlabs.wstx.tests.lib.path">
        <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
    	<path refid="build.classpath"/>
    </path>

    <property name="wstx.libs" value="${modulename}.jar"/>
    <property name="wstx10.libs" value="${modulename}10.jar"/>
    <property name="wstx11.libs" value="${modulename}11.jar"/>
    <property name="wstx.all.libs" value="${wstx.libs} ${wstx10.libs} ${wstx11.libs}"/>

    <property name="wstx.resourcebundle" value="wstx_msg_en_US.properties"/>

	<!--Set external directories -->

	<property name="wsas.build.lib.dir" value="${wsas.dir}/build/lib"/>
    <property name="wsc.build.lib.dir" value="${ws-c.dir}/build/lib"/>
    <property name="wsc.build.dd.dir" value="${ws-c.dir}/build/dd"/>
	<property name="wscf.build.lib.dir" value="${wscf.dir}/build/lib"/>
    <property name="wst.build.lib.dir" value="${ws-t.dir}/build/lib"/>
    <property name="wst.build.dd.dir" value="${ws-t.dir}/build/dd"/>

    <property name="wsas.test.build.lib.dir"  value="${wsas.dir}/tests/build/lib"/>

    <!--sibling module directories and jars -->

    <property name="wsas.libs" value="wsas.jar"/>
    <property name="wsc.libs" value="ws-c.jar"/>
    <property name="wsc-api.libs" value="ws-c-api.jar"/>
    <property name="wsc10.libs" value="ws-c10.jar"/>
    <property name="wsc10-api.libs" value="ws-c10-api.jar"/>
    <property name="wsc11.libs" value="ws-c11.jar"/>
    <property name="wsc.all.libs" value="${wsc.libs} ${wsc10.libs} ${wsc11.libs}"/>
    <property name="wscf.libs" value="wscf.jar"/>
    <property name="wscf10.libs" value="wscf10.jar"/>
    <property name="wscf11.libs" value="wscf11.jar"/>
    <property name="wscf.all.libs" value="${wscf.libs} ${wscf10.libs} ${wscf11.libs}"/>
    <property name="wst.libs" value="ws-t.jar"/>
    <property name="wst-api.libs" value="ws-t-api.jar"/>
    <property name="wst10.libs" value="ws-t10.jar"/>
    <property name="wst10-api.libs" value="ws-t10-api.jar"/>
    <property name="wst11.libs" value="ws-t11.jar"/>
    <property name="wst11-api.libs" value="ws-t11-api.jar"/>
    <property name="wst.all.libs" value="${wst.libs} ${wst10.libs} ${wst11.libs}"/>

    <property name="tests.all.libs" value="${wsas.libs} ${wsc.all.libs} ${wscf.all.libs} ${wst.all.libs} ${wstx.all.libs} ${tests.libs}"/>

    <path id="lib.classpath">
        <path  refid="build.classpath"/>
        <fileset dir="${wsas.build.lib.dir}" includes="${wsas.libs}"/>
        <fileset dir="${wsc.build.lib.dir}" includes="${wsc.libs} ${wsc-api.libs}"/>
        <fileset dir="${wscf.build.lib.dir}" includes="${wscf.libs}"/>
        <fileset dir="${wst.build.lib.dir}" includes="${wst.libs} ${wst-api.libs}"/>
    </path>

    <path id="lib.classpath10">
        <fileset dir="${wsc.build.lib.dir}" includes="${wsc10.libs} ${wsc10-api.libs}"/>
        <fileset dir="${wscf.build.lib.dir}" includes="${wscf10.libs}"/>
        <fileset dir="${wst.build.lib.dir}" includes="${wst10.libs}  ${wst10-api.libs}"/>
    </path>

    <path id="lib.classpath11">
        <fileset dir="${wsc.build.lib.dir}" includes="${wsc11.libs}"/>
        <fileset dir="${wscf.build.lib.dir}" includes="${wscf11.libs}"/>
        <fileset dir="${wst.build.lib.dir}" includes="${wst11.libs}  ${wst11-api.libs}"/>
    </path>

	<!-- Initialisation -->
	<target name="init">
		<!-- Define default build properties -->
		<tstamp>
			<format property="com.arjuna.mw.wstx.date" pattern="yyyy/mm/dd hh:mm aa"/>
		</tstamp>
		<!-- Make the destination directory -->
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.classes10.dir}"/>
        <mkdir dir="${build.classes11.dir}"/>
		<mkdir dir="${build.webapps.dir}"/>
	</target>

	<!-- Compilation targets -->

    <target name="compile" depends="compile11, wstx.compile10"/>

    <target name="wstx.compile10" depends="compile-generic">
        <echo message="Compiling module 1.0 code"/>
        <javac srcdir="${src10.dir}"
                       destdir="${build.classes10.dir}"
                       debug="on">
            <classpath>
                <path>
                    <pathelement path="${build.classes.dir}"/>
                </path>
                <path refid="lib.classpath10"/>
                <path refid="lib.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="compile11" depends="compile-generic">
        <echo message="Compiling module 1.1 code"/>
        <javac srcdir="${src11.dir}"
                       destdir="${build.classes11.dir}"
                       debug="on">
            <classpath>
                <path>
                    <pathelement path="${build.classes.dir}"/>
                </path>
                <path refid="lib.classpath11"/>
                <path refid="lib.classpath"/>
            </classpath>
        </javac>
    </target>

    <target name="compile-generic" depends="init">
        <echo message="Compiling module generic code"/>
        <javac srcdir="${src.dir}"
                       destdir="${build.classes.dir}"
                       debug="on">
            <classpath>
                <path refid="lib.classpath"/>
            </classpath>
        </javac>
    </target>

	<!-- htdocs paths -->
	<path id="htdocs.path">
		<pathelement path="classes"/>
	</path>

	<!-- Build htdocs for just mw, or mw and mwlabs -->
	<property name="htdocs.list" value="com.arjuna.mw.*"/>

    <target name="war" depends="jar">
        <war warfile="${build.webapps.dir}/${modulename}10.war" webxml="xml/wstx_web-app.xml"/>
        <war warfile="${build.webapps.dir}/${modulename}11.war" webxml="xml/wstx_web-app11.xml"/>
    </target>

	<!-- Jar targets -->
	<target name="jar" depends="compile, htdocs, generateresourcebundle">
		<echo message="Building jar file"/>
		<mkdir dir="${build.lib.dir}"/>

        <copy file="xml/UserTwoPhaseTx.xml"
              tofile="${build.classes10.dir}/com/arjuna/mwlabs/wstx/model/as/twophase/UserTwoPhaseTx.xml"/>

        <copy file="xml/UserTwoPhaseTx.xml"
              tofile="${build.classes11.dir}/com/arjuna/mwlabs/wstx11/model/as/twophase/UserTwoPhaseTx.xml"/>

        <copy file="xml/AtomicTransaction.xml"
              tofile="${build.classes10.dir}/com/arjuna/mwlabs/wst/at/ContextFactoryImple.xml"/>
        <copy file="xml/BusinessActivity.xml"
              tofile="${build.classes10.dir}/com/arjuna/mwlabs/wst/ba/ContextFactoryImple.xml"/>

        <copy file="xml/AtomicTransaction11.xml"
              tofile="${build.classes11.dir}/com/arjuna/mwlabs/wst11/at/ContextFactoryImple.xml"/>
        <copy file="xml/BusinessActivity11.xml"
              tofile="${build.classes11.dir}/com/arjuna/mwlabs/wst11/ba/ContextFactoryImple.xml"/>


        <jar jarfile="${build.lib.dir}/${modulename}.jar">
            <fileset dir="${wsc.build.dd.dir}" includes="wsdl/*"/>
            <fileset dir="${wst.build.dd.dir}" includes="wsdl/*"/>
            <fileset dir="${build.classes.dir}" excludes="${wstx.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/${modulename}-api.jar">
            <fileset dir="${build.classes.dir}" includes="${wstx.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/${modulename}10.jar">
            <fileset dir="${build.classes10.dir}" excludes="${wstx10.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/${modulename}10-api.jar">
            <fileset dir="${build.classes10.dir}" includes="${wstx10.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/${modulename}11.jar">
            <fileset dir="${build.classes11.dir}" excludes="${wstx11.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/${modulename}11-api.jar">
            <fileset dir="${build.classes11.dir}" includes="${wstx11.api.classes}"/>
        </jar>
	</target>

	<target name="htdocs"
				depends="init">
		<echo message="Building htdocs "/>
		<mkdir dir="${build.htdocs.dir}"/>

		<javadoc
			sourcepathref="htdocs.path"
			destdir="${build.htdocs.dir}"
			packagenames="${htdocs.list}"
	        >
			<classpath>
                <path refid="lib.classpath"/>
				<path path="${src.dir}"/>
			</classpath>
		</javadoc>
	</target>

        <target name="generateresourcebundle">

            <echo message="Generating WSTX Bundle"/>

            <javadoc    packagenames="com.arjuna.*"
                        failonerror="yes"
                        private="yes"
                        defaultexcludes="yes"
                        classpath="${build.classpath}">

                <packageset dir="${src.dir}" defaultexcludes="yes">
                  <include name="com/arjuna/**"/>
                </packageset>

                <packageset dir="${src10.dir}" defaultexcludes="yes">
                  <include name="com/arjuna/**"/>
                </packageset>

                <packageset dir="${src11.dir}" defaultexcludes="yes">
                  <include name="com/arjuna/**"/>
                </packageset>

                 <doclet name="com.hp.mw.buildsystem.doclet.resbundledoclet.ResourceBundleDoclet">
                    <path refid="doclet.classpath"/>
                    <param name="-basedir" value="${basedir}/${build.classes.dir}"/>
                    <param name="-resourcebundle" value="${wstx.resourcebundle}"/>
                 </doclet>
            </javadoc>

        </target>

	<target name="tests.init">
        <!-- delete the test destination directories -->
        <delete dir="${tests.build.dir}"/>
		<!-- make the test destination directories -->
		<mkdir dir="${tests.build.dir}"/>
		<mkdir dir="${tests.build.classes.dir}"/>
		<mkdir dir="${tests.build.dd.dir}"/>
		<mkdir dir="${tests.build.webapps.dir}"/>
		<mkdir dir="${tests.build.lib.dir}"/>
	</target>

    <!-- this assumes all the rwuired libs have been built -->
	<target name="tests.compile" depends="tests.init">
	  <javac destdir="${tests.build.classes.dir}" debug="yes" optimize="no">
	    <classpath>
            <pathelement path="${build.lib.dir}/${modulename}.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}-api.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}10.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}10-api.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}11.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}11-api.jar"/>
            <path refid="com.arjuna.mwlabs.wstx.tests.lib.path"/>
            <path refid="lib.classpath10"/>
            <path refid="lib.classpath11"/>
            <path refid="lib.classpath"/>
	    </classpath>
	    <src path="${tests.src.dir}"/>
	  </javac>
	</target>

    <!-- this assumes all the rwuired libs have been built -->
    <target name="tests.compile11" depends="tests.init">
      <javac destdir="${tests.build.classes.dir}" debug="yes" optimize="no">
        <classpath>
            <pathelement path="${build.lib.dir}/${modulename}.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}-api.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}11.jar"/>
            <pathelement path="${build.lib.dir}/${modulename}11-api.jar"/>
            <path refid="com.arjuna.mwlabs.wstx.tests.lib.path"/>
            <path refid="lib.classpath10"/>
            <path refid="lib.classpath11"/>
            <path refid="lib.classpath"/>
        </classpath>
        <src path="${tests.src.dir}"/>
        <include  name="com/arjuna/qa/**"/>
        <include  name="com/arjuna/wst/tests/common/**"/>
        <include  name="com/arjuna/wst11/tests/**"/>
        <include  name="com/arjuna/wstx11/tests/**"/>
      </javac>
    </target>

	<target name="tests.webapps" depends="tests.compile">
	  <copy file="${tests.dd.dir}/wstx-tests_web-app.xml" tofile="${tests.build.dd.dir}/web-app.xml">
	  </copy>
	  <copy file="${tests.dd.dir}/wstx11-tests_web-app.xml" tofile="${tests.build.dd.dir}/web-app11.xml">
	  </copy>
	  <jar jarfile="${tests.build.webapps.dir}/wstx-tests.jar">
	    <fileset dir="${tests.build.classes.dir}"/>
	  </jar>
	  <war warfile="${tests.build.webapps.dir}/wstx-tests.war" webxml="${tests.build.dd.dir}/web-app.xml">
	    <classes dir="${tests.build.classes.dir}"/>
	  </war>
	  <war warfile="${tests.build.webapps.dir}/wstx11-tests.war" webxml="${tests.build.dd.dir}/web-app11.xml"/>
	  <ear earfile="${tests.build.webapps.dir}/wstx-tests.ear" appxml="${tests.dd.dir}/wstx-tests_application.xml">
	    <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
	    <fileset dir="${tests.build.webapps.dir}" includes="wstx-tests.war wstx11-tests.war wstx-tests.jar"/>
        <fileset dir="${wsas.test.build.lib.dir}" includes="xts-test-servlet.jar"/>
	  </ear>
	</target>

	<target name="tests.webapps11" depends="tests.compile11">
	  <copy file="${tests.dd.dir}/wstx11-tests_web-app.xml" tofile="${tests.build.dd.dir}/web-app11.xml">
	  </copy>
	  <jar jarfile="${tests.build.webapps.dir}/wstx-tests.jar">
	    <fileset dir="${tests.build.classes.dir}"/>
	  </jar>
	  <war warfile="${tests.build.webapps.dir}/wstx11-tests.war" webxml="${tests.build.dd.dir}/web-app11.xml"/>
	  <ear earfile="${tests.build.webapps.dir}/wstx-tests.ear" appxml="${tests.dd.dir}/wstx11-tests_application.xml">
	    <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
	    <fileset dir="${tests.build.webapps.dir}" includes="wstx11-tests.war wstx-tests.jar"/>
        <fileset dir="${wsas.test.build.lib.dir}" includes="xts-test-servlet.jar"/>
	  </ear>
	</target>

	<target name="tests.deploy" depends="tests.webapps, tests.undeploy">
	  <copy file="${tests.build.webapps.dir}/wstx-tests.ear" tofile="${deploy.dir}/wstx-tests.ear"/>
	</target>

    <target name="tests.deploy11" depends="tests.webapps11, tests.undeploy">
      <copy file="${tests.build.webapps.dir}/wstx-tests.ear" tofile="${deploy.dir}/wstx-tests.ear"/>
    </target>

	<target name="tests.undeploy">
	  <delete file="${deploy.dir}/wstx-tests.ear"/>
	</target>

	<!-- Clean targets -->
	<target name="clean">
		<echo message="Cleaning module"/>
		<delete dir="${build.classes.dir}"/>
		<delete dir="${build.htdocs.dir}"/>
        <delete file="${build.lib.dir}/${modulename}.jar"/>
		<!-- delete the test destination directories -->
		<delete dir="${tests.build.dir}"/>
	</target>

	<!-- production target for 1.1 tests -->
    <target name="tests-11" depends="tests.webapps11"/>
    <target name="tests-both" depends="tests.webapps"/>
</project>
