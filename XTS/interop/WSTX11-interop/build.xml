<?xml version="1.0"?>
<!--
 * JBoss, Home of Professional Open Source
 * Copyright 2007, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags.
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * (C) 2005-2006,
 * @author JBoss Inc.
 -->
<project name="project" default="war">
    <description>
        JBoss Transactions WS-Addressing interop test
    </description>

    <!-- Set module name -->
    <property name="modulename" value="wstx11-interop"/>

    <!-- the directory in which XTS resides -->
    <property name="xts.home" value="../../xts-install"/>

    <!-- the name of the host where the coordinator resides. this defaults to the
    special symbol server.bind.address which will be substituted with the actual
    server bind address employed when jboss is started -->
    <property name="coordinator.hostname" value="server.bind.address"/>

    <!-- the name of the port the coordinator is listening on.  this defaults to the
    special symbol jboss.web.bind.port which will be substituted with the actual
    jboss web service HTTP listener port employed when jboss is started -->
    <property name="coordinator.port" value="jboss.web.bind.port"/>

    <!-- location of JBossTS parent tree -->
    <property name="jbossts.dir" location="../../.."/>

    <!-- all libraries external to JBossTS should be found in parent build/extlib -->
    <property name="jbossts.build.dir" location="${jbossts.dir}/build"/>
    <property name="jbossts.build.extlib.dir" location="${jbossts.build.dir}/extlib"/>

    <!-- JBossTS products are in parent install/lib  -->
    <property name="jbossts.install.dir" location="${jbossts.dir}/install"/>
    <property name="jbossts.install.lib.dir" location="${jbossts.install.dir}/lib"/>

    <!-- JBossTS resource bundle doclet code is in parent antbuildsystem build tree -->
    <property name="jbossts.buildsystem.build.dir" location="${jbossts.dir}/antbuildsystem/build"/>
    <property name="jbossts.buildsystem.build.lib.dir" location="${jbossts.buildsystem.build.dir}/lib"/>

    <!-- TODO ok, I lied. stop using the old junit from our own ext lib and use the new one in the parent build/extlib -->

    <property name="xts.ext.dir" location="../../ext"/>

    <!-- required JBossTS product jars -->
    <property name="jbossts.install.lib.jars" value="jbossjta.jar jbossjts.jar"/>

    <!-- external jars also used by JBossTS -->
    <property name="jbossts.build.extlib.jars" value="jbossts-common.jar commons-logging-1.1.jar"/>

    <!-- buildsystem jar from JBossTS containg resource bundle doclet for messages -->
    <property name="jbossts.buildsystem.jars" value="buildsystem.jar"/>

    <!-- external jars used by XTS for CXF enabled builds -->
    <condition property="cxf.build.extlib.jars" value="cxf-api.jar saaj-api.jar jaxrpc-api.jar jaxws-api.jar
            geronimo-ws-metadata_2.0_spec.jar">
        <isset property="cxf.build"/>
    </condition>

    <!-- external jars used by XTS for all builds -->
    <property name="xts.build.extlib.jars" value="jaxb-api.jar jboss-javaee.jar
            jbossws-client.jar stax-api.jar
            jbossws-native-core.jar jbossws-common.jar jboss-logging-spi.jar
            jta.jar servlet-api.jar dom4j.jar ${cxf.build.extlib.jars}"/>

    <!-- paths internal to build -->

    <path id="build.classpath">
        <fileset dir="${jbossts.install.lib.dir}" includes="${jbossts.install.lib.jars}"/>
        <fileset dir="${jbossts.build.extlib.dir}" includes="${jbossts.build.extlib.jars} ${xts.build.extlib.jars}"/>
    </path>

    <path id="doclet.classpath">
        <fileset dir="${jbossts.buildsystem.build.lib.dir}" includes="${jbossts.buildsystem.jars}"/>
    </path>

    <property name="build.classpath" refid="build.classpath"/>

    <property name="doclet.classpath" refid="doclet.classpath"/>

    <!-- use $JBOSS_HOME to locate directory for deploy and undeploy -->
    <property  environment="env"/>
    <property  name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property  name="jboss.server" value="default"/>
    <property  name="deploy.dir" value="${jboss.home}/derver/${jboss.server}/deploy}"/>
	<property environment="env"/>
	
	<property name="host" value="localhost"/>
	<property name="port" value="8080"/>
	
	<property name="build.dir" location="build"/>
	<property name="build.classes.dir" location="${build.dir}/classes"/>
	<property name="build.lib.dir" location="${build.dir}/lib"/>
	<property name="build.war.file" location="${build.lib.dir}/interop11.war"/>
	<property name="build.webxml.file" location="${build.lib.dir}/web.xml"/>
	
	<property name="src.dir" location="src"/>
	<property name="dd.dir" location="dd/"/>
	<property name="webxml.file" location="web.xml"/>
	<property name="lib.dir" location="lib"/>
	<property name="web.dir" location="web"/>
	
	<property name="xts11.compile.libs" value="ws-c11.jar ws-t11.jar wscf11.jar wstx11.jar"/>
	<property name="xts.compile.libs" value="jbossxts-api.jar ws-c.jar ws-t.jar wscf.jar wstx.jar wsas.jar"/>

	<property name="xts.ext.libs" value="junit.jar"/>

	<property name="xts.libs" value="${xts11.compile.libs} ${xts.compile.libs}"/>

	<property name="compile.debug" value="true"/>
	
	<target name="init">
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${build.lib.dir}"/>
	</target>
	
	<target name="compile" depends="init">
		<javac destdir="${build.classes.dir}" srcdir="${src.dir}" debug="${compile.debug}">
            <classpath>
                <fileset dir="${xts.home}/lib" includes="${xts.libs}"/>
                <fileset dir="${xts.ext.dir}" includes="${xts.ext.libs}"/>
                <path refid="build.classpath"/>
            </classpath>
        </javac>
	</target>
	
    <target name="war" depends="compile">
    	    <copy file="${webxml.file}" tofile="${build.webxml.file}" overwrite="yes">
    	    		<filterset>
    	    			<filter token="HOST" value="${host}"/>
    	    			<filter token="PORT" value="${port}"/>
    	    		</filterset>
            </copy>
        <!-- todo put a copy of each handler file in WEB-INF and refer to it correctly from SEI class annotation-->
        <copy file="${dd.dir}/interop11/participanthandlers.xml" toDir="${build.classes.dir}/com/jboss/transaction/txinterop/webservices/atinterop/sei" overwrite="yes">
        </copy>
        <copy file="${dd.dir}/interop11/participanthandlers.xml" toDir="${build.classes.dir}/com/jboss/transaction/txinterop/webservices/bainterop/sei" overwrite="yes">
        </copy>
	<!-- wsdl gets loaded relative to service implementation class -->
        <copy toDir="${build.classes.dir}/com/jboss/transaction/txinterop/webservices/atinterop/generated"
	      overwrite="yes">
            <fileset dir="${dd.dir}/interop11"
                    includes="wsdl/interopat*.wsdl"/>
        </copy>
        <copy toDir="${build.classes.dir}/com/jboss/transaction/txinterop/webservices/bainterop/generated"
	      overwrite="yes">
            <fileset dir="${dd.dir}/interop11"
                    includes="wsdl/interopba*.wsdl"/>
        </copy>
        <copy toDir="${build.classes.dir}/com/jboss/transaction/txinterop/webservices/soapfault/generated"
	      overwrite="yes">
            <fileset dir="${dd.dir}/interop11"
                    includes="wsdl/soapfault.wsdl"/>
        </copy>
            <war destfile="${build.war.file}" webxml="${build.webxml.file}">
    			<classes dir="${build.classes.dir}"/>
    			<classes dir="${src.dir}" excludes="**/*.java"/>
                <webinf dir="${dd.dir}/interop11" includes="wsdl/*.wsdl"/>
                <fileset dir="${web.dir}"/>
                <!-- need to stop using this at some point soon -->
                <lib dir="${xts.ext.dir}" includes = "${xts.ext.libs}"/>
    		</war>
    </target>
	
	<target name="deploy" depends="war">
		<copy file="${build.war.file}" todir="${deploy.dir}"/>
	</target>
	
	<target name="undeploy">
		<delete file="${deploy.dir}/interop11.war"/>
	</target>

	<target name="clean">
		<delete dir="${build.dir}"/>
	</target>
</project>

