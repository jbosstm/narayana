<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a full listing
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.


  (C) 2005-2006,
  @author JBoss Inc.
-->

<!-- ====================================================================== -->
<!--                                                                        -->
<!--        Copyright (c) 2002, 2003, Arjuna Technologies Limited.          -->
<!--                                                                        -->
<!--                      Web service - Coordination                        -->
<!--                                                                        -->
<!-- ====================================================================== -->

<project name="WebServicesCoordination" default="webapps" basedir=".">

    <!-- ================================================================== -->

    <!-- Set module name -->
    <property name="modulename" value="ws-c"/>

    <!-- set root before including shared build -->

    <property name="root.dir" location = ".."/>

    <import file="../sharedbuild.xml"/>

    <!-- use $JBOSS_HOME to locate directory for deploy and undeploy -->
    <property  environment="env"/>
    <property  name="jboss.home" value="${env.JBOSS_HOME}"/>
    <property  name="jboss.server" value="default"/>
    <property  name="deploy.dir" value="${jboss.home}/derver/${jboss.server}/deploy}"/>

    <!-- internal paths and jars -->
    <property name="src.dir"             value="dev/src"/>
    <property name="src10.dir"           value="dev/src10"/>
    <property name="src11.dir"           value="dev/src11"/>
    <property name="dd.dir"              value="dev/dd"/>

    <property name="build.dir"           value="build"/>
    <property name="build.classes.dir"   value="${build.dir}/classes"/>
    <property name="build.classes10.dir" value="${build.dir}/classes10/classes"/>
    <property name="build.classes11.dir" value="${build.dir}/classes11/classes"/>
    <property name="build.lib.dir"       value="${build.dir}/lib"/>
    <property name="build.dd.dir"        value="${build.dir}/dd"/>
    <property name="build.webapps.dir"   value="${build.dir}/webapps"/>

    <property name="tests.src.dir"       value="tests/src"/>
    <property name="tests.dd.dir"        value="tests/dd"/>

    <property name="tests.build.dir"         value="tests/build"/>
    <property name="tests.build.classes.dir" value="${tests.build.dir}/classes"/>
    <property name="tests.build.lib.dir"     value="${tests.build.dir}/lib"/>
    <property name="tests.build.dd.dir"      value="${tests.build.dir}/dd"/>
    <property name="tests.build.webapps.dir" value="${tests.build.dir}/webapps"/>

    <property name="wsas.tests.build.lib.dir"  value="${wsas.dir}/tests/build/lib"/>

    <!-- classes provided for clients via api jar -->
    <property name="ws-c.api.classes" value="com/arjuna/wsc/AlreadyRegisteredException.class"/>
    <!-- we had to delete the JaxRPC handlers so we export the bist needed to allow clients to create them -->
    <property name="ws-c10.api.classes" value="com/arjuna/webservices/wscoor/CoordinationConstants.class"/>

    <property name="tests.libs" value="junit.jar"/>

    <path id="tests.lib.path">
        <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
    </path>

    <!-- module targets -->

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${tests.build.dir}"/>
        <delete>
            <fileset dir="." includes="**/*.bak" defaultexcludes="no"/>
            <fileset dir="." includes="**/*~"    defaultexcludes="no"/>
            <fileset dir="." includes="**/#*#"   defaultexcludes="no"/>
            <fileset dir="." includes="**/.#*"   defaultexcludes="no"/>
        </delete>
    </target>

    <target name="init" depends="clean,init-dir">
        <!-- Define default build properties -->
        <tstamp>
            <format property="date" pattern="yyyy/mm/dd hh:mm aa"/>
        </tstamp>
    </target>

    <target name="init-dir">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes.dir}"/>
        <mkdir dir="${build.classes10.dir}"/>
        <mkdir dir="${build.classes11.dir}"/>
        <mkdir dir="${build.lib.dir}"/>
        <mkdir dir="${build.dd.dir}"/>
        <mkdir dir="${build.webapps.dir}"/>
        <mkdir dir="${tests.build.dir}"/>
        <mkdir dir="${tests.build.classes.dir}"/>
        <mkdir dir="${tests.build.lib.dir}"/>
        <mkdir dir="${tests.build.dd.dir}"/>
        <mkdir dir="${tests.build.webapps.dir}"/>
    </target>

    <target name="compile-generic">
        <compile.macro/>
    </target>

    <target name="compile10" if="build10">
        <compile.macro src.dir="${src10.dir}" dest.dir="${build.classes10.dir}">
            <additional.classpath>
                <path>
                  <pathelement path="${build.classes.dir}"/>
                </path>
            </additional.classpath>
        </compile.macro>
    	<copy todir="${build.classes10.dir}">
    		<fileset dir="${src10.dir}" excludes="**/*.java"/>
    	</copy>
    </target>

    <target name="compile11">
        <compile.macro src.dir="${src11.dir}" dest.dir="${build.classes11.dir}">
            <additional.classpath>
                <path>
                  <pathelement path="${build.classes.dir}"/>
                </path>
            </additional.classpath>
        </compile.macro>
    </target>

    <target name="compile" depends="init, compile-generic, compile10, compile11"/>

    <target name="wsdl11" >
        <!-- wsdl files for services - loaded as /WEB-INF/wsdl/... -->
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor.wsdl" tofile="${build.dd.dir}/wsdl/wscoor.wsdl"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor.xsd" tofile="${build.dd.dir}/wsdl/wscoor.xsd"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/ws-addr.xsd" tofile="${build.dd.dir}/wsdl/ws-addr.xsd"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor-activation-binding.wsdl" tofile="${build.dd.dir}/wsdl/wscoor-activation-binding.wsdl"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor-registration-binding.wsdl" tofile="${build.dd.dir}/wsdl/wscoor-registration-binding.wsdl"/>

        <!-- wsdl files for clients - loaded as <ClientClassDir>/wsdl/... -->
        <mkdir dir="${build.classes11.dir}/org/oasis_open/docs/ws_tx/wscoor/_2006/_06/wsdl"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor.wsdl" tofile="${build.classes11.dir}/org/oasis_open/docs/ws_tx/wscoor/_2006/_06/wsdl/wscoor.wsdl"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor.xsd" tofile="${build.classes11.dir}/org/oasis_open/docs/ws_tx/wscoor/_2006/_06/wsdl/wscoor.xsd"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/ws-addr.xsd" tofile="${build.classes11.dir}/org/oasis_open/docs/ws_tx/wscoor/_2006/_06/wsdl/ws-addr.xsd"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor-activation-binding.wsdl" tofile="${build.classes11.dir}/org/oasis_open/docs/ws_tx/wscoor/_2006/_06/wsdl/wscoor-activation-binding.wsdl"/>
        <copy file="${dd.dir}/wscoor1.1/wsdl/wscoor-registration-binding.wsdl" tofile="${build.classes11.dir}/org/oasis_open/docs/ws_tx/wscoor/_2006/_06/wsdl/wscoor-registration-binding.wsdl"/>
    </target>

    <target name="jars-generic">
        <jar jarfile="${build.lib.dir}/ws-c.jar">
            <fileset dir="${build.classes.dir}" excludes="${ws-c.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/ws-c-api.jar">
            <fileset dir="${build.classes.dir}" includes="${ws-c.api.classes}"/>
        </jar>
    </target>

    <target name="jars11">
        <jar jarfile="${build.lib.dir}/ws-c11.jar">
            <fileset dir="${build.classes11.dir}">
                <exclude name="com/arjuna/webservices11/wscoor/sei/**"/>
                <exclude name="handlers.xml"/>
            </fileset>
        </jar>
    </target>

    <target name="jars10" if="build10">
        <jar jarfile="${build.lib.dir}/ws-c10.jar">
            <fileset dir="${build.classes10.dir}" excludes="${ws-c10.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/ws-c10-api.jar">
            <fileset dir="${build.classes10.dir}" includes="${ws-c10.api.classes}"/>
        </jar>
        <jar jarfile="${build.lib.dir}/ws-c11.jar">
            <fileset dir="${build.classes11.dir}">
                <exclude name="com/arjuna/webservices11/wscoor/sei/**"/>
                <exclude name="handlers.xml"/>
            </fileset>
        </jar>
    </target>

    <target name="jars" depends="compile, wsdl11, jars11, jars10, jars-generic"/>

    <target name="webapps10" if="build10">
        <copy file="${dd.dir}/ws-c_web-app.xml" tofile="${build.dd.dir}/web-app.xml"/>
        <war warfile="${build.webapps.dir}/ws-c10.war" webxml="${build.dd.dir}/web-app.xml"/>
    </target>

    <target name="webapps11" depends="jars11" >
        <copy file="${dd.dir}/ws-c11_web-app.xml" tofile="${build.dd.dir}/web-app11.xml"/>
        <copy file="${dd.dir}/ws-c_handlers.xml" tofile="${build.classes11.dir}/handlers.xml"/>
        <war warfile="${build.webapps.dir}/ws-c11.war" webxml="${build.dd.dir}/web-app11.xml">
            <webinf dir="${build.dir}/classes11" includes="classes/com/arjuna/webservices11/wscoor/sei/* classes/handlers.xml"/>
            <webinf dir="${build.dd.dir}" includes="wsdl/**"/>
        </war>
    </target>

    <target name="webapps" depends="jars, webapps11, webapps10"/>

    <!-- this assumes the required libs have already been built -->
    <target name="tests-compile10" if="build10">
        <javac destdir="${tests.build.classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath>
                <pathelement path="${build.lib.dir}/ws-c.jar"/>
                <pathelement path="${build.lib.dir}/ws-c-api.jar"/>
                <pathelement path="${build.lib.dir}/ws-c10.jar"/>
                <pathelement path="${build.lib.dir}/ws-c10-api.jar"/>
                <pathelement path="${build.lib.dir}/ws-c11.jar"/>
                <path refid="tests.lib.path"/>
                <path refid="build.classpath"/>
            </classpath>
            <src path="${tests.src.dir}"/>
        </javac>
    </target>

    <!-- this assumes the required libs have already been built -->
    <target name="tests-compile11">
        <javac destdir="${tests.build.classes.dir}" debug="${debug}" deprecation="${deprecation}">
            <classpath>
                <pathelement path="${build.lib.dir}/ws-c.jar"/>
                <pathelement path="${build.lib.dir}/ws-c-api.jar"/>
                <pathelement path="${build.lib.dir}/ws-c11.jar"/>
                <path refid="tests.lib.path"/>
                <path refid="build.classpath"/>
            </classpath>
            <src path="${tests.src.dir}"/>
	        <include name="com/arjuna/qa/**"/>
	        <include name="com/arjuna/wsc11/**"/>
        </javac>
    </target>

    <target name="tests-compile" depends="tests-compile10, tests-compile11"/>

    <target name="tests-jar" depends="tests-compile">
        <jar jarfile="${tests.build.lib.dir}/xts-test-servlet.jar">
            <fileset dir="${tests.build.classes.dir}" includes="com/arjuna/qa/junit/*.class"/>
        </jar>
        <jar jarfile="${tests.build.lib.dir}/ws-c-tests.jar">
            <fileset dir="${tests.build.classes.dir}" excludes="com/arjuna/qa/junit/*.class"/>
        </jar>
    </target>

    <target name="tests-webapps10" if="build10">
        <copy file="${tests.dd.dir}/ws-c-tests_web-app.xml" tofile="${tests.build.dd.dir}/web-app.xml"/>
        <war warfile="${tests.build.webapps.dir}/ws-c-tests.war" webxml="${tests.build.dd.dir}/web-app.xml">
        </war>
    </target>

    <target name="tests-webapps11">
        <copy file="${tests.dd.dir}/ws-c11-tests_web-app.xml" tofile="${tests.build.dd.dir}/web-app11.xml"/>
        <war warfile="${tests.build.webapps.dir}/ws-c11-tests.war" webxml="${tests.build.dd.dir}/web-app11.xml">
            <classes dir="${tests.build.classes.dir}"  excludes="com/arjuna/qa/junit/**/*.class"/>
        </war>
    </target>

    <target name="tests-webapps" depends="tests-jar, tests-webapps10, tests-webapps11"/>

    <target name="tests-ear-both" if="build10">
        <ear earfile="${tests.build.webapps.dir}/ws-c-tests.ear" appxml="${tests.dd.dir}/ws-c-tests_application.xml">
            <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
            <fileset dir="${tests.build.webapps.dir}" includes="ws-c-tests.war"/>
            <fileset dir="${tests.build.webapps.dir}" includes="ws-c11-tests.war"/>
            <fileset dir="${tests.build.lib.dir}" includes="ws-c-tests.jar"/>
            <fileset dir="${wsas.tests.build.lib.dir}" includes="xts-test-servlet.jar"/>
        </ear>
    </target>

    <target name="tests-ear11" if="nobuild10">
        <ear earfile="${tests.build.webapps.dir}/ws-c-tests.ear" appxml="${tests.dd.dir}/ws-c11-tests_application.xml">
            <fileset dir="${jbossts.build.extlib.dir}" includes="${tests.libs}"/>
            <fileset dir="${tests.build.webapps.dir}" includes="ws-c11-tests.war"/>
            <fileset dir="${tests.build.lib.dir}" includes="ws-c-tests.jar"/>
            <fileset dir="${wsas.tests.build.lib.dir}" includes="xts-test-servlet.jar"/>
        </ear>
    </target>

    <target name="tests-ear" depends="tests-webapps, tests-ear-both, tests-ear11"/>

    <!-- production target for tests -->
    <target name="tests" depends="tests-ear"/>
    
    <target name="tests-deploy" depends="tests-ear, tests-undeploy">
        <copy file="${tests.build.webapps.dir}/ws-c-tests.ear" tofile="${deploy.dir}/ws-c-tests.ear"/>
    </target>

    <target name="tests-undeploy">
        <delete file="${deploy.dir}/ws-c-tests.ear"/>
    </target>
</project>
