<!--
  JBoss, Home of Professional Open Source
  Copyright 2009, Red Hat Middleware LLC, and individual contributors
  as indicated by the @author tags.
  See the copyright.txt in the distribution for a
  full listing of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.

  (C) 2007-2009,
  @author JBoss Inc. (jonathan.halliday@redhat.com)
-->
<!--
    build-release-pkgs.xml: Utility script for building JBossTS release artifacts.
    Probably only useful for JBossTS dev team. Everyone else should only need the
    regular build.xml.

    This script automates the some steps of the release build and packaging process
    to reduce the opportunities for users to get it wrong. For example, it works from
    a fresh svn checkout to ensure locally modified files in a dev's svn working copy
    don't sneak into the release bundle.

    usage:

      Tag the JBossTS release in svn.
        or you can do a snapshot release direct from trunk, see properties below.

      Check the version of JBossAS referenced in pom.xml is sane.
        In general, use the oldest JBossAS release the JBossTS release is intended to support.

      Update the properties section below to suit your machine.

      Set JAVA_HOME to a jdk 1.6, since that's the version we currently support.

      ant -f build-release-pkgs.xml dist downloads

      rsync or sftp the downloads to publish to the web site (careful with the trailing '/') e.g.
        rsync \-\-protocol=29 -avz 4.11.0.Final jbosstm@filemgmt.jboss.org:downloads_htdocs/jbosstm/

      Log in to magnolia cms at https://www.jboss.org/author, create page under jbosstm/downloads
       (note: 'magnolia' target below may help) then edit downloads node itself to update table in downloads.html

      Update appropriate wiki pages, such as the 'which version to use' page.
        http://community.jboss.org/wiki/JBossTransactionsVersionGuide

      Then login to https://repository.jboss.org/nexus/ and publish the artifacts.

      This version is for JBossTS 5.0.0 onwards. Don't use it for earlier releases, they are structured differently.
-->
<project name="JBossTS Release Packaging" default="fail" basedir=".">
  <description>
        package JBossTS binary + src files for upload to website and other repos.
    </description>
  <!-- you probably need to change these properties to suit your machine -->
  <!-- uncomment the block of properties below to do a snapshot release.
            you need permissions to webdav upload to the server for this to work
            http://www.jboss.org/community/docs/DOC-11381  -->
  <!--
    <property name="svnbase" value="https://svn.jboss.org/repos/labs/labs/jbosstm"/>
    <property name="tag" value="trunk"/>
    <property name="version" value="5.0.0.M2-SNAPSHOT"/>
-->
  <!-- a working directory for the process. Can contain output from previous releases if you like to keep them archived locally. -->
  <!--property name="workdir" location="/tmp/narayana_releases"/-->
  <!-- where to get the source -->
  <property name="svnbase" value="https://svn.jboss.org/repos/labs/labs/jbosstm/tags"/>
  <!-- The tag as it appears under svnbase -->
  <property name="tag" value="5_0_0_M1"/>
  <!-- The file name base for the user downloadable files. Derive it from the tag -->
  <property name="version" value="5.0.0.M1"/>
  <!-- which uber jar to use -->
  <property name="orb" value="jacorb"/>
  <!-- the location the JBossTS web site content is copied to -->
  <property name="downloads.dir" value="${user.home}/narayana/filemgmt.jboss.org/downloads_htdocs/jbosstm/"/>
  <property name="docs.dir" value="${user.home}/narayana/filemgmt.jboss.org/docs_htdocs/jbosstm/"/>
  <!-- you probably don't need to change anything below here -->
  <taskdef resource="net/sf/antcontrib/antlib.xml">
    <classpath>
      <pathelement location="./antbuildsystem/ant-contrib-1.0b3.jar"/>
    </classpath>
  </taskdef>
  <target name="fail">
    <fail message="you must specify a target"/>
  </target>
  <target name="all" depends="dist,downloads"/>
  <target name="dist-init" unless="dist-init">
    <tstamp/>
    <fail message="You must set a workdir">
      <condition>
        <not>
          <isset property="workdir"/>
        </not>
      </condition>
    </fail>
    <fail message="You must not already have a local maven cached repository to do a release build">
      <condition>
        <available file="repository" type="dir"/>
      </condition>
    </fail>
    <fail message="You cannot perform a build without cleaning the old version out">
      <condition>
        <available file="${workdir}/${tag}" type="dir"/>
      </condition>
    </fail>
    <mkdir dir="${workdir}"/>
    <!-- pull the source code from svn -->
    <exec executable="svn" dir="${workdir}">
      <arg value="checkout"/>
      <arg value="${svnbase}/${tag}"/>
    </exec>
  </target>
  <target name="dist" depends="dist-init" description="build the end-user release bundles (src and binary)">
    <!-- build the binary releases -->
    <exec dir="${workdir}/${tag}" executable="tools/maven/bin/mvn" failonerror="true">
      <arg line="clean -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar"/>
    </exec>
    <!-- package the JTA only src tree (no JTS, XTS, txbridge, RTS) -->
    <delete file="${workdir}/narayana-jta-${version}-src.zip"/>
    <zip basedir="${workdir}" destfile="${workdir}/narayana-jta-${version}-src.zip" includes="${tag}/**" excludes="${tag}/ArjunaJTS/**, ${tag}/XTS/** ${tag}/txbridge/**, ${tag}/rest-tx/**, ${tag}/repository/**"/>
    <!-- package the full source release (all src tree) -->
    <delete file="${workdir}/narayana-full-${version}-src.zip"/>
    <zip basedir="${workdir}" destfile="${workdir}/narayana-full-${version}-src.zip" includes="${tag}/**" excludes="${tag}/repository/**"/>
    <!-- build the binary releases -->
    <exec dir="${workdir}/${tag}" executable="tools/maven/bin/mvn" failonerror="true">
      <arg line="deploy -DskipTests -gs tools/maven/conf/settings.xml -Demma.jar.location=${user.dir}/ext/emma.jar -Dorson.jar.location=${user.dir}/ext/orson-0.5.0.jar"/>
    </exec>
  </target>
  <!-- copy the release into the downloads dir tree (http://www.jboss.org/jbosstm web site content) -->
  <target name="downloads" description="copy release bundles to JBossTS web site content">
    <fail>
      <condition>
        <not>
          <available file="${downloads.dir}" type="dir"/>
        </not>
      </condition>
    </fail>
    <fail>
      <condition>
        <available file="${downloads.dir}/${version}" type="dir"/>
      </condition>
    </fail>
    <fail>
      <condition>
        <not>
          <available file="${docs.dir}" type="dir"/>
        </not>
      </condition>
    </fail>
    <fail>
      <condition>
        <available file="${docs.dir}/${version}" type="dir"/>
      </condition>
    </fail>
    <delete dir="tmp-downloads-dir"/>
    <mkdir dir="tmp-downloads-dir"/>
    <mkdir dir="tmp-downloads-dir/src"/>
    <mkdir dir="tmp-downloads-dir/binary"/>
    <mkdir dir="tmp-downloads-dir/idl"/>
    <delete dir="tmp-docs-dir"/>
    <mkdir dir="tmp-docs-dir"/>
    <copy todir="tmp-downloads-dir/src">
      <fileset dir="${workdir}" includes="narayana-*-${version}-src.zip"/>
    </copy>
    <copy todir="tmp-downloads-dir/binary">
      <fileset dir="${workdir}/${tag}/narayana-full/target/" includes="narayana-full-${version}-bin.zip"/>
    </copy>
    <copy todir="tmp-downloads-dir/idl">
      <fileset dir="${workdir}/${tag}/ArjunaJTS/jts/idl/arjuna">
        <include name="ArjunaOTS.idl"/>
      </fileset>
    </copy>
    <copy todir="tmp-downloads-dir/idl">
      <fileset dir="${workdir}/${tag}/ArjunaJTS/jts/idl/omg">
        <include name="CosTransactions.idl"/>
        <include name="XA.idl"/>
      </fileset>
    </copy>
    <copy file="${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar" todir="tmp-downloads-dir/api/jta"/>
    <copy file="${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar" todir="tmp-downloads-dir/api/jts"/>
    <copy file="${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar" todir="tmp-downloads-dir/api/rts"/>
    <copy file="${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar" todir="tmp-downloads-dir/api/xts"/>
    <copy todir="tmp-docs-dir/guides/narayana-jts-orbportability_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTS/docs/orbportability_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jts-quick_start_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTS/docs/quick_start_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jts-administration_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTS/docs/administration_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jts-development_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTS/docs/development_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/arjunacore-failure_recovery_guide">
      <fileset dir="${workdir}/${tag}/ArjunaCore/docs/failure_recovery_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/arjunacore-development_guide">
      <fileset dir="${workdir}/${tag}/ArjunaCore/docs/development_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jta-quick_start_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTA/docs/quick_start_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jta-installation_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTA/docs/installation_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jta-administration_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTA/docs/administration_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/narayana-jta-development_guide">
      <fileset dir="${workdir}/${tag}/ArjunaJTA/docs/development_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/xts-administration_and_development_guide">
      <fileset dir="${workdir}/${tag}/XTS/docs/administration_and_development_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/failure_recovery_guide">
      <fileset dir="${workdir}/${tag}/docs/failure_recovery_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/release_notes">
      <fileset dir="${workdir}/${tag}/docs/release_notes/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/development_guide">
      <fileset dir="${workdir}/${tag}/docs/development_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/transactions_overview_guide">
      <fileset dir="${workdir}/${tag}/docs/transactions_overview_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <copy todir="tmp-docs-dir/guides/txbridge_guide">
      <fileset dir="${workdir}/${tag}/docs/txbridge_guide/target/docbook/publish/en-US/html"/>
    </copy>
    <unzip src="${workdir}/${tag}/ArjunaJTS/narayana-jts-${orb}/target/narayana-jts-${version}-javadoc.jar" dest="tmp-docs-dir/api/jts"/>
    <unzip src="${workdir}/${tag}/ArjunaJTA/narayana-jta/target/narayana-jta-${version}-javadoc.jar" dest="tmp-docs-dir/api/jta"/>
    <unzip src="${workdir}/${tag}/rest-tx/tx/target/rest-tx-api-${version}-javadoc.jar" dest="tmp-docs-dir/api/rts"/>
    <unzip src="${workdir}/${tag}/XTS/jbossxts/target/jbossxts-${version}-javadoc.jar" dest="tmp-docs-dir/api/xts"/>
    <move todir="${downloads.dir}/${version}" verbose="true">
      <fileset dir="tmp-downloads-dir"/>
    </move>
    <move todir="${docs.dir}/${version}" verbose="true">
      <fileset dir="tmp-docs-dir"/>
    </move>
  </target>
  <!-- copy the release artifacts to the maven repository -->
  <target name="mvn-repository" description="copy the release artifacts to the maven repository">
    <!-- xts -->
    <mvn-artifact.macro artifact="jbossxts-tests" packaging="zip" dir="${workdir}/build/${tag}/xts/tests"/>
    <mvn-artifact.macro artifact="jbossxts-interop-tests" packaging="zip" dir="${workdir}/build/${tag}/xts/interop-tests"/>
  </target>
  <!-- magnolia (the cms that sits behind jboss.org/jbosstm pages) is a pain. This target generates
     xml for /downloads/somerelease.xml pages to ease some of the pain in publishing an upload
      right click jbosstm/downloads node, import from xml, then right click new node and activate.
      download ordering in the rollover menu is determined by ordering the GUI - move new page as needed.
      edit the 'downloads' node itself to link the new release from downloads.html, it's not automatic. -->
  <target name="magnolia">
    <exec executable="date" outputproperty="date">
      <arg line="+'%FT%H:%M:%S.000Z'"/>
    </exec>
    <length property="jta-src-length" file="${workdir}/jbossts-jta-${version}-src.zip"/>
    <length property="full-src-length" file="${workdir}/jbossts-full-${version}-src.zip"/>
    <length property="jta-bin-length" file="${workdir}/jbossts-jta-${version}.zip"/>
    <length property="full-bin-length" file="${workdir}/jbossts-full-${version}.zip"/>
    <copy file="magnolia-release-download-page-template.xml" tofile="${workdir}/website.jbosstm.downloads.${version}.xml" filtering="true" overwrite="true">
      <filterset>
        <filter token="tag" value="${tag}"/>
        <filter token="version" value="${version}"/>
        <filter token="date" value="${date}"/>
        <filter token="jta-src-length" value="${jta-src-length}"/>
        <filter token="full-src-length" value="${full-src-length}"/>
        <filter token="jta-bin-length" value="${jta-bin-length}"/>
        <filter token="full-bin-length" value="${full-bin-length}"/>
      </filterset>
    </copy>
  </target>
</project>
