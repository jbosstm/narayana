<!--
  JBoss, Home of Professional Open Source
  Copyright 2010, Red Hat, Inc. and/or its affiliates,
  and individual contributors as indicated by the @author tags.
  See the copyright.txt in the distribution for a
  full listing of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  MA  02110-1301, USA.

  (C) 2010,
  @author JBoss, by Red Hat.
-->
<!--
  JBossTS is built using ant. Historically most 3rd party dependencies lived in svn
  in dir 'ext' to allow for offline builds and strong versioning. Building the JBossAS
  integration code required a copy of JBossAS via the JBOSS_HOME env var.

  Starting with 4.10 the build uses maven for dependency management whilst still
  using ant for the main build. This helps us play nice in a maven ecosystem. The top
  level build script calls one or other method in this file to install the dependencies
  into build/extlib. Build scripts use the maven names without versions to minimise the
  updating that is needed.
-->
<project name="JBossTS Dependency Management" default="maven" basedir=".">
    <description>
        Utility functions for build time 3rd party dependency processing.
    </description>

    <property name="ext.lib.src" value="../ext"/>
    <property name="ext.lib.dest" value="../build/extlib"/>

    <property name="groupid" value="jboss.jbossts"/>
    <property name="artifact" value="jbossts-build"/>
    <property name="version" value="unknown"/>

    <target name="maven">
        <!-- munge the pom template into an actual pom, then use it to install
            the dependencies into the dir where the build looks for them -->

        <delete dir="${ext.lib.dest}"/>
        <mkdir dir="${ext.lib.dest}"/>

        <copy  file="pom-template.xml"
               tofile="pom.xml"
               filtering="true"
               overwrite="true">
            <filterset>
                <filter token="groupid" value="${groupid}"/>
                <filter token="artifact" value="${artifact}"/>
                <filter token="version" value="${version}"/>
                <filter token="packaging" value="jar"/>
                <filter token="extdir" value="../build/extlib"/>
            </filterset>
        </copy>

        <exec executable="mvn" dir="${basedir}">
            <arg value="dependency:copy-dependencies"/>
        </exec>

        <copy todir="${ext.lib.dest}" overwrite="true">
            <fileset dir="${ext.lib.src}">
                <include name="third_party_licenses.txt"/>
                <!-- we need a patched version of emma, see JBTM-682 -->
                <include name="emma.jar"/>
            </fileset>
        </copy>

        <!-- we use a local copy of JacORB for build/test as we need bits of it that are not in mvn.
            However, we should ensure the AS has not upgraded or we'll wind up running on an untested version: -->
        <checksum file="${ext.lib.dest}/jacorb.jar" property="as-jacorb-md5"/>
        <checksum file="../ArjunaJTS/jacorb/lib/jacorb.jar" property="local-jacorb-md5"/>
        <fail message="WARNING: effective JacORB version does not match JBossAS JacORB version. This is bad. I'm sulking. Edit maven/build.xml if you want to live dangerously, or go fix the problem.">
            <condition>
                <not><equals arg1="${as-jacorb-md5}" arg2="${local-jacorb-md5}"/></not>
            </condition>
        </fail>

    </target>

</project>
