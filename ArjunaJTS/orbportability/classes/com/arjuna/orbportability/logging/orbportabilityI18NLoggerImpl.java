/*
 * JBoss, Home of Professional Open Source
 * Copyright 2010, Red Hat, Inc. and/or its affiliates,
 * and individual contributors as indicated by the @author tags.
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
 * MA  02110-1301, USA.
 *
 * (C) 2010,
 * @author JBoss, by Red Hat.
 */
package com.arjuna.orbportability.logging;

import com.arjuna.common.util.logging.Logi18n;

/**
 * i18n log messages for the orbportability module.
 * This class is autogenerated. Don't mess with it.
 *
 * @author Jonathan Halliday (jonathan.halliday@redhat.com) 2010-06
 */
public class orbportabilityI18NLoggerImpl implements orbportabilityI18NLogger {

	private final Logi18n logi18n;

	orbportabilityI18NLoggerImpl(Logi18n logi18n) {
		this.logi18n = logi18n;
	}

	public void log_OA_caughtexception(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.OA.caughtexception", new Object[] {arg0, arg1});
		}
	}

	public void log_OA_exceptioncaughtforobj(String arg0, String arg1, String arg2) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.OA.exceptioncaughtforobj", new Object[] {arg0, arg1, arg2});
		}
	}

	public void log_OA_initialize(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.OA.initialize", new Object[] {arg0});
		}
	}

	public void log_OA_invalidpoa(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.OA.invalidpoa", new Object[] {arg0, arg1});
		}
	}

	public void log_OA_oanotinitialised() {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.OA.oanotinitialised");
		}
	}

	public void log_OA_uninitialsedorb() {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.OA.uninitialsedorb");
		}
	}

	public void log_ORB_cannotfinddefaultorbconfig(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.ORB.cannotfinddefaultorbconfig", new Object[] {arg0});
		}
	}

	public void log_ORB_caughtexception(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.ORB.caughtexception", new Object[] {arg0, arg1});
		}
	}

	public void log_ORB_invalidorbconfig(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.ORB.invalidorbconfig", new Object[] {arg0, arg1});
		}
	}

	public void log_ORBInfo_creationfailed(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.ORBInfo.creationfailed", new Object[] {arg0});
		}
	}

	public void log_ORBInfo_unsupportedorb() {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.ORBInfo.unsupportedorb");
		}
	}

	public void log_Services_openfailure(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.openfailure", new Object[] {arg0, arg1});
		}
	}

	public void log_Services_optionnotsupported(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.optionnotsupported", new Object[] {arg0, arg1});
		}
	}

	public void log_Services_resolvereffailed(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.resolvereffailed", new Object[] {arg0, arg1});
		}
	}

	public void log_Services_servicenotfound(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.servicenotfound", new Object[] {arg0, arg1});
		}
	}

	public void log_Services_suspectentry(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.suspectentry", new Object[] {arg0, arg1});
		}
	}

	public void log_Services_unexpectedexception(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.unexpectedexception", new Object[] {arg0, arg1});
		}
	}

	public void log_Services_unsupportedoption(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.Services.unsupportedoption", new Object[] {arg0});
		}
	}

	public void log_common_Configuration_bindDefault_invalidbind(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.common.Configuration.bindDefault.invalidbind", new Object[] {arg0});
		}
	}

	public void log_event_EventManager_caughtexceptionfor(String arg0, String arg1, String arg2) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.event.EventManager.caughtexceptionfor", new Object[] {arg0, arg1, arg2});
		}
	}

	public void log_event_EventManager_forhandlethrewexception(String arg0, String arg1, String arg2) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.event.EventManager.forhandlethrewexception", new Object[] {arg0, arg1, arg2});
		}
	}

	public void log_event_EventManager_novalue(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.event.EventManager.novalue", new Object[] {arg0, arg1});
		}
	}

	public void log_internal_orbspecific_jacorb_oa_implementations(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.internal.orbspecific.jacorb.oa.implementations", new Object[] {arg0});
		}
	}

	public void log_internal_utils_InitLoader_couldnotfindclass(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.internal.utils.InitLoader.couldnotfindclass", new Object[] {arg0, arg1});
		}
	}

	public void log_internal_utils_InitLoader_exception(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.internal.utils.InitLoader.exception", new Object[] {arg0, arg1});
		}
	}

	public void log_internal_utils_InitLoader_initfailed(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.internal.utils.InitLoader.initfailed", new Object[] {arg0, arg1});
		}
	}

	public void log_internal_utils_InitLoader_loading(String arg0, String arg1) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.internal.utils.InitLoader.loading", new Object[] {arg0, arg1});
		}
	}

	public void log_oa_core_OA_caughtexception(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.oa.core.OA.caughtexception", new Object[] {arg0});
		}
	}

	public void log_oa_core_OA_nosupportedorb() {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.oa.core.OA.nosupportedorb");
		}
	}

	public void log_orb_core_ORB_caughtexception(String arg0) {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.orb.core.ORB.caughtexception", new Object[] {arg0});
		}
	}

	public void log_orb_core_ORB_unsupportedorb() {
		if(logi18n.isWarnEnabled()) {
			logi18n.warn("com.arjuna.orbportability.orb.core.ORB.unsupportedorb");
		}
	}

}
