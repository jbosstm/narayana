/*
 * JBoss, Home of Professional Open Source
 * Copyright 2006, JBoss Inc., and individual contributors as indicated
 * by the @authors tag.  All rights reserved. 
 * See the copyright.txt in the distribution for a full listing 
 * of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU General Public License, v. 2.0.
 * This program is distributed in the hope that it will be useful, but WITHOUT A 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
 * PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License,
 * v. 2.0 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
 * MA  02110-1301, USA.
 * 
 * (C) 2005-2006,
 * @author JBoss Inc.
 */
// CosExternalization Module, 8-12 CORBAservices,
// Externalization Service V1.0, 3/94

#include <CosLifeCycle.idl>
#include <CosStream.idl>

#pragma prefix "omg.org"

module CosExternalization {
                exception InvalidFileNameError{};
                exception ContextAlreadyRegistered{};
                interface Stream: CosLifeCycle::LifeCycleObject{
                        void externalize(
                                        in CosStream::Streamable theObject);
                        CosStream::Streamable internalize( 
                                        in CosLifeCycle::FactoryFinder there)
                                raises( CosLifeCycle::NoFactory,
                                        CosStream::StreamDataFormatError );
                        void begin_context()
                                raises( ContextAlreadyRegistered);
                        void end_context(); 
                        void flush();
                };
                interface StreamFactory {
                        Stream create();
                };
                interface FileStreamFactory {
                        Stream create(
                                        in string theFileName) 
                                raises( InvalidFileNameError );
                };
};



//  CosExternalizationContainment Module, p 8-26 CORBAservices,
// Externalization Service V1.0, 3/94

#include <CosContainment.idl>
#include <CosCompoundExternalization.idl>

module CosExternalizationContainment {

        interface Relationship : 
                        CosCompoundExternalization::Relationship,
                        CosContainment::Relationship {};

        interface ContainsRole : 
                        CosCompoundExternalization::Role,
                        CosContainment::ContainsRole {};

        interface ContainedInRole : 
                        CosCompoundExternalization::Role,
                        CosContainment::ContainedInRole {};
};

// CosExternalizationReference Module, p 8-28 CORBAservices, 
// Externalization Service V1.0, 3/94

#include <CosReference.idl>
#include <CosCompoundExternalization.idl>

module CosExternalizationReference {

        interface Relationship : 
                        CosCompoundExternalization::Relationship,
                        CosReference::Relationship {};

        interface ReferencesRole : 
                        CosCompoundExternalization::Role,
                        CosReference::ReferencesRole {};

        interface ReferencedByRole : 
                        CosCompoundExternalization::Role,
                        CosReference::ReferencedByRole {};
};


