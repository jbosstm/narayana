/*
 * JBoss, Home of Professional Open Source
 * Copyright 2006, JBoss Inc., and individual contributors as indicated
 * by the @authors tag.  All rights reserved. 
 * See the copyright.txt in the distribution for a full listing 
 * of individual contributors.
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU General Public License, v. 2.0.
 * This program is distributed in the hope that it will be useful, but WITHOUT A 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
 * PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License,
 * v. 2.0 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
 * MA  02110-1301, USA.
 * 
 * (C) 2005-2006,
 * @author JBoss Inc.
 */
module org {
    module jacorb {
        module util {
            module tracing {
                const long TracingContextID = 0x7f00ff00;

                typedef long PointId;
                typedef long long RequestId;
                typedef long long MSec;
            
                struct Request{
                    PointId originator;
                    RequestId rid;
                    //rid is 64 bit long
                    //MSB|      32 bit        |   16 bit   |  16 bit  |LSB
                    //   |  target.hashCode() | originator | GIOP rid |
                };
         
                struct TraceData {
                    sequence <TraceData> subtrace;

                    // id of the position that logs this
                    PointId tracer_id;

                    string operation;

                    MSec client_time;
                    MSec trace_system_time;   
                };

                interface TracingService {                    
                    PointId get_id();                
                
                    exception NoSuchRequestId {};
                
                    /* retrive trace data for a call */
                
                    TraceData getTrace( in Request source ) 
                        raises (NoSuchRequestId);
                
                    /* log trace data for a call trace */
                
                    void logTraceAtPoint( in Request origin,
                                          in string operation,
                                          in MSec client_time,
                                          in MSec server_time )
                        raises (NoSuchRequestId);

                    /* registers a trace as a subtrace in another */

                    void registerSubTrace( in Request original, // original call
                                           in Request nested ) // nested call
                        raises (NoSuchRequestId);
                };

            };
        };
    };
};
