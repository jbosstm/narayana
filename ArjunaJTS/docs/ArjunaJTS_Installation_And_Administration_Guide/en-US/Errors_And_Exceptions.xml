<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "ArjunaJTS_Installation_And_Administration_Guide.ent">
%BOOK_ENTITIES;
]>
<chapter>
  <title></title>

  <para>
    This section covers the types and causes of errors and exceptions which may be thrown or reported during a transactional
    application.
  </para>
  <variablelist>
    <title>Errors and Exceptions</title>
    <varlistentry>
      <term><literal>NO_MEMORY</literal></term>
      <listitem>
        <para>
          The application has run out of memory, and has thrown an <systemitem>OutOfMemoryError</systemitem>
          exception. <application>ArjunaJTS</application> has attempted to do some cleanup, by running the garbage
          collector, before re-throwing the exception. This is probably a transient problem and retrying the invocation
          should succeed.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>com.arjuna.ats.arjuna.exceptions.FatalError</literal></term>
      <listitem>
        <para>
          An error has occurred, and the error is of such severity that that the transaction system must shut
          down. Prior to this error being thrown the transaction service ensures that all running transactions have
          rolled back. If an application catches this error, it should tidy up and exit. If further work is attempted,
          application consistency may be violated.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
      <term><literal>com.arjuna.ats.arjuna.exceptions.ObjectStoreError</literal></term>
      <listitem>
        <para>
          An error occurred while the transaction service attempted to use the object store. Further forward progress is
          not possible.
        </para>
      </listitem>
    </varlistentry>
  </variablelist>
  <para>
    Object store warnings about access problems on states may occur during the normal execution of crash recovery. This
    is the result of multiple concurrent attempts to perform recovery on the same transaction. It can be safely ignored.
  </para>
</chapter>