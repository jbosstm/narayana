<?xml version="1.0"?>
<!--
	JBoss, Home of Professional Open Source
	Copyright 2006, Red Hat Middleware LLC, and individual contributors
	as indicated by the @author tags. 
	See the copyright.txt in the distribution for a full listing 
	of individual contributors.
	This copyrighted material is made available to anyone wishing to use,
	modify, copy, or redistribute it subject to the terms and conditions
	of the GNU Lesser General Public License, v. 2.1.
	This program is distributed in the hope that it will be useful, but WITHOUT A
	WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
	PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
	You should have received a copy of the GNU Lesser General Public License,
	v.2.1 along with this distribution; if not, write to the Free Software
	Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
	MA  02110-1301, USA.

	
	(C) 2005-2006,
	@author JBoss Inc.
-->
<page
	title="JBoss (a Division of Redhat): Trail map: Overview of the Distributed Transaction Processing"
	rootpath="../..">
	<header>Trail map: JBossTS Overview</header>
	<content>
		<navigation>
			<links include="includes/www_arjuna_com_navigation.xml" />
			<links include="includes/trailmap_navigation.xml" />
			<links title="Navigation">
				<link ref="index.html">Home</link>
				<link ref="part2.html">Previous</link>
				<link ref="part4.html">Next</link>
			</links>
			<links include="includes/trailmap_additional.xml" />
		</navigation>
		<area title="JBossTS Overview">
			<html>
				<p>
					JBoss Transaction Service 4.0 (ATS 4.0) assures
					complete, accurate business transactions for any
					Java based applications, including those written for
					the J2EE and EJB frameworks.
				</p>
				<p>
					JBossTS is a 100% Java implementation of a
					distributed transaction management system based on
					the Sun Microsystems J2EE Java Transaction Service
					(JTS) standard. Our implementation of the JTS
					utilizes the Object Management Group's (OMG) Object
					Transaction Service (OTS) model for transaction
					interoperability as recommended in the J2EE and EJB
					standards. Although any JTS-compliant product will
					allow Java objects to participate in transactions,
					one of the key features of ATS is it's 100% Java
					implementation. This allows ATS to support fully
					distributed transactions that can be coordinated by
					distributed parties.
					<p>
						JBossTS runs can be run both as an embedded
						distributed service of an application server
						(e.g., HPAS. JBoss), affording the user all the
						added benefits of the application server
						environment such as real-time load balancing,
						unlimited linear scalability and unmatched fault
						tolerance that allows you to deliver an
						always-on solution to your customers. It is also
						available as a free-standing Java Transaction
						Service.
					</p>
					<p>
						In addition to providing full compliance with
						the latest version of the JTS specification, ATS
						4.0 leads the market in providing many advanced
						features such as fully distributed transactions
						and ORB portability with POA support.
					</p>
					<p>
						ATS 4.0 is supported on HP-UX 11i, Linux RedHat,
						Microsoft Windows NT 4.0, Microsoft Windows
						2000, Microsoft Window XP, Sun Solaris 8
						operating environments and with any JDK 1.3
						compliant environment.
					</p>
					<p>
						The Java Transaction API support for ATS comes
						in two flavours:
					</p>
					<ul>
						<li>
							a purely local implementation, that does not
							require an ORB, but obviously requires all
							coordinated resources to reside within the
							same JVM.
						</li>
						<li>a fully distributed implementation.</li>
					</ul>
					<h5>Key features</h5>
					<ul>
						<li>
							full compliant with the JTA 1.0.1
							specification:
							<ul>
								<li>
									Purely local (ORB-less) JTA offers
									the fastest JTA performance
								</li>
								<li>JDBC 2.0 support</li>
								<li>XA compliance</li>
								<li>
									JDBC drivers for database access
									with full transaction support
								</li>
								<li>
									Automatic crash recovery for
									XAResources
								</li>
							</ul>
						</li>
						<li>
							compliance with the JTS specification and
							OTS 1.2 specification from the OMG
							<ul>
								<li>Distributed JTA implementation</li>
								<li>
									support for distributed transactions
									(utilizing two-phase commit)
								</li>
								<li>POA ORB support</li>
								<li>interposition</li>
								<li>transaction heuristics</li>
								<li>
									distributed transaction manager
									(co-located with the transaction
									initiator) or transaction manager
									server
								</li>
								<li>
									checked/unchecked transaction
									behaviour
								</li>
								<li>
									supports both flat and nested
									transaction models, with
									nested-aware resources and resource
									adapters
								</li>
								<li>
									independent concurrency control
									system with support for
									type-specific concurrency control
								</li>
								<li>
									support for CosTransaction::Current
								</li>
								<li>
									direct and indirect transaction
									management
								</li>
								<li>synchronization interface</li>
								<li>
									explicit and implicit transaction
									context propagation
								</li>
								<li>automatic crash recovery</li>
								<li>multi-thread aware</li>
							</ul>
						</li>
						<li>transactional objects (TO) for Java</li>
						<li>
							ORB independence via the ORB portability
							layer
						</li>
					</ul>
				</p>
			</html>
		</area>
	</content>
	<footer />
</page>
