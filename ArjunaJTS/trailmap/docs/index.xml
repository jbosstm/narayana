<?xml version="1.0"?>
<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, JBoss Inc., and individual contributors as indicated
  by the @authors tag.  All rights reserved. 
  See the copyright.txt in the distribution for a full listing 
  of individual contributors.
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU General Public License, v. 2.0.
  This program is distributed in the hope that it will be useful, but WITHOUT A 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE.  See the GNU General Public License for more details.
  You should have received a copy of the GNU General Public License,
  v. 2.0 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
  MA  02110-1301, USA.
  
  (C) 2005-2006,
  @author JBoss Inc.
-->
<page title="Arjuna Technologies Limited: Trail map: Introduction" rootpath="../..">
	<header>
        Trail map: Introduction
    </header>
	<content>
		<navigation>
			<links include="includes/www_arjuna_com_navigation.xml"/>
			<links include="includes/trailmap_navigation.xml"/>
			<links title="Navigation">
				<link ref="part1.html">Start Trail map</link>
			</links>
			<links include="includes/trailmap_additional.xml"/>
		</navigation>
		<area title="Introduction">
			<html>		
				<p>JBoss Transaction Service (JBossTS) assures complete, accurate business 
  transactions for any Java based applications, including those written for the 
  J2EE and EJB frameworks.</p>
				<p>JBossTS is a 100% Java implementation of a 
				<a class="linkscoloured" href="DTP.html">distributed transaction management system</a> 
  based on the Sun Microsystems J2EE Java Transaction Service (<a class="linkscoloured" href="jta_overview.html">JTS</a>) standard. 
  Our implementation of the JTS utilizes the Object Management Group's (OMG) Object 
  Transaction Service (<a class="linkscoloured" href="ots_overview.html">OTS</a>) model for transaction interoperability as recommended 
  in the J2EE and EJB standards. Although any JTS-compliant product will allow 
  Java objects to participate in transactions, one of the key features of ATS 
  is it's 100% Java implementation. This allows ATS to support fully distributed 
  transactions that can be coordinated by distributed parties.
<p>JBossTS runs can be run both as an embedded distributed service of an application 
  server (e.g., HPAS. JBoss), affording the user all the added benefits of the 
  application server environment such as real-time load balancing, unlimited linear 
  scalability and unmatched fault tolerance that allows you to deliver an always-on 
  solution to your customers. It is also available as a free-standing Java Transaction 
  Service.</p>
					<p>In addition to providing full compliance with the latest version of the JTS 
specification, ATS 4.0 leads the market in providing many advanced features such 
as fully distributed transactions and ORB portability with POA support.</p>
					<p>ATS 4.0 is supported on HP-UX 11i, Linux RedHat, Microsoft Windows NT 4.0, 
  Microsoft Windows 2000, Microsoft Window XP, Sun Solaris 8 operating environments 
  and with any JDK 1.3 compliant environment.</p>
					<p>The Java Transaction API support for ATS comes in two flavours:</p>
					<ul>
						<li>a purely local implementation, that does not require an ORB, but obviously 
  requires all coordinated resources to reside within the same JVM. </li>
						<li>a fully distributed implementation. </li>
					</ul>
					<h4>Key features</h4>
					<ul>
						<li>full compliant with the JTA 1.0.1 specification: 
    <ul>
								<li>Purely local (ORB-less) JTA offers the fastest JTA performance </li>
								<li>JDBC 2.0 support </li>
								<li>XA compliance </li>
								<li>JDBC drivers for database access with full transaction support </li>
								<li>Automatic crash recovery for XAResources </li>
							</ul>
						</li>
						<li>compliance with the JTS specification and OTS 1.2 specification from the 
    OMG 
    <ul>
								<li>Distributed JTA implementation </li>
								<li>support for distributed transactions (utilizing two-phase commit) </li>
								<li>POA ORB support </li>
								<li>interposition </li>
								<li>transaction heuristics</li>
								<li>distributed transaction manager (co-located with the transaction initiator) 
        or transaction manager server </li>
								<li>checked/unchecked transaction behaviour </li>
								<li>supports both flat and nested transaction models, with nested-aware 
        resources and resource adapters </li>
								<li>independent concurrency control system with support for type-specific 
        concurrency control </li>
								<li>support for CosTransaction::Current </li>
								<li>direct and indirect transaction management </li>
								<li>synchronization interface </li>
								<li>explicit and implicit transaction context propagation </li>
								<li>automatic crash recovery </li>
								<li>multi-thread aware </li>
							</ul>
						</li>
						<li>transactional objects (TO) for Java </li>
						<li>ORB independence via the ORB portability layer </li>
					</ul>
				</p>
				
				<p>
                    This trail map will help you get started with running Arjuna  transaction service product.
                    It is structured as follows:</p>
				<ul>
					<li>
						<a class="linkscoloured" href="part1.html">1. Installation Content</a>: This trail describes the content installed by the JBossTS distribution </li>
					<li>
						<a class="linkscoloured" href="part4.html">2. The Sample Application</a>: This trail describes via a set of examples how JBossTS is used to build transactional applications</li>
					<li>
						<a class="linkscoloured" href="part5.html">3. Deploying and testing the Sample Application</a>: This trail describes how to deploy and to test the sample application</li>
					<li>
						<a class="linkscoloured" href="part6.html">4. Making the Sample Application Persistent</a>: This trail describes tools allowing to build a persistent application</li>
					<li>
						<a class="linkscoloured" href="part7.html">5. Recovery from Failure</a>: This trail describes via a simple scenario how ATS manages recovery from failure.</li>
					<li>
						<a class="linkscoloured" href="next.html">6. Where Next?</a>: This trail indicates where to find additional information</li>
				</ul>
					In addition to the trails listed above, a set of trails giving more explanation on concept around 
					transaction processing and standards, and also a quick access to section explaining how to configure ATS 
					are listed in the section "Additional Trails".
			</html>
		</area>
	</content>
	<footer/>
</page>
