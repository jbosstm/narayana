
JBossTS 4.16 is designed for use standalone.
It may also be used by JBossAS 7.1 releases, but manual upgrading of the component inside JBossAS is not recommended.
Integration with JBossAS 6 or earlier is no longer supported.


                         Embedded Tools
                         --------------

JMX Instrumentation
-------------------

It is possible to monitor the transaction Object Store using JMX.
Monitoring the Object Store is useful for trouble
shooting problems that occur when transactions are committed (it does
not expose transactions prior to commit). The JMX instrumentation
(of the ObjectStore) is a not fully integrated with the AS console and
is therefore not necessarily suitable for monitoring production systems
but can provide useful diagnostic information that is otherwise not
available.

In any compliant JMX browser (such as jconsole) there should appear an
MBean with the name
    jboss.jta:type=ObjectStore
This MBean corresponds to the object store and provides a naming context
for other MBeans (for example in a JMX client such as jconsole the MBeans
will be displayed in the form of a tree control). The various MBeans
corresponding to this ObjectStore will have names prefixed by this
'top level' MBean. The bean has two operations:

probe - searches for Object Store records and creates corresponding MBeans
	or unregisters any beans that no longer have a corresponding record;
viewSubordinateAtomicActions - toggles the ability to view Subordinate Atomic Actions.
        Set the boolean parameter to the text "true"/"false" to enable/disable viewing
        of these record types.
        WARNING: Viewing a Subordinate Atomic Action will trigger a recovery scan
	independently of the Transaction Recovery Service so please use with care
	(for example if you know that the distributed transaction is not recovering
	automatically).

Each MBean corresponding to an transaction contains an operation for removing the
record from the object store. After this operation the system will no longer have
any knowledge of the transaction.

Transactions contain participants such datasources. These have MBean representations in
the JMX viewer. It sometimes happens that a particpant made a different transaction
completion decision from the one the Transaction Manager expected - such a state is
called a heuristic. Heuristics will never be completed automatically so the MBean
contains an operation (called clearHeuristic) for moving the participant back into
the "prepared" state. Once back in the prepared state the Recovery system will
attempt to replay completion.

[For embedded use simply instantiate an object of type
com.hp.mwtests.ts.arjuna.tools.ObjStoreBrowser.
If the default set of types is not adequate other types for handling ObjectStore records
can be added either by setting a System property called
ObjStoreBrowser.OBJ_STORE_BROWSER_HANDLERS or by calling the method setType() on the
ObjStoreBrowser object.]

Please refer to the unit tests in the src distribution for more details.

Tools Deployment
----------------

There is also a transaction statistics graphing tool which can run standalone or inside a
jconsole tab (jconsole, a tool for managing JVMs, is distributed with the reference JDK).
Various transaction statistics are graphed in real time with each graph updated during each
poll interval (4 seconds unless the interval is overridden on the jconsole command line).

The tool depends on the JFree graphing library. Download and upack Orson from http://www.jfree.org/orson
and set the env variable ORSON_HOME to the directory where you plan to unpack the downloaded zip.
If you intend to use the tool with jconsole you will also need to put the JDK tools and jconsole jars on
the classpath:

export CLASSPATH="$JDK_HOME/lib/tools.jar:$JDK_HOME/lib/jconsole.jar:$ORSON_HOME/orson-0.5.0.jar:$ORSON_HOME/lib/jfreechart-1.0.6.jar:$ORSON_HOME/lib/jcommon-1.0.10.jar:$TS_INSTALL_DIR/lib/jbossjts.jar>"

Standalone Usage:

java com.arjuna.ats.arjuna.tools.stats.TxPerfGraph

(note that standalone usage does not require the JDK tools and jconsole jars)

Usage with jconsole:

jconsole -J-Djava.class.path="$CLASSPATH" -pluginpath $TS_INSTALL_DIR/lib/jbossjts.jar

The tool will automatically enable statistics gathering on startup. It is recommended that you disable statistics gathering prior to exit on the Settings tab in the GUI.
