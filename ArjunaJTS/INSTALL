
Installing JBossJTA into JBoss 4.0.3SP1, 4.0.4GA and 4.0.5GA
------------------------------------------------------------

This version of JBossTS no longer supports these older
JBossAS releases. You probably need JBossTS 4.2.3 instead.


Installing JBossTS 4.3 into JBossAS 4.2 or JBossAS 5.0
------------------------------------------------------------

Starting with JBossAS 4.2, the application server ships with
JBossTS JTA as a default component. You do not need to take
any action if you want JTA support only.

To change the JTA to the full JTS in JBossAS 4.2 or 5.0, follow these steps:

 - download the tar or zip version of the application server
 - extract the distribution into an installation directory

 - Remove from JBossAS:
    server/XXX/lib/jbossjta.jar
    server/XXX/lib/jbossjta-integration.jar
    server/XXX/lib/jbossts-common.jar

 - Copy the following from JBossTS into server/XXX/lib:
    jbossjts.jar
    jbossjts-integration.jar
    jbossjts-jacorb.jar
    jbossts-common.jar

 - Remove:
    server/XXX/conf/jbossjta-properties.xml
 - Replace it with
    jbossjts-properties.xml

 - edit the server/XXX/conf/jbossjts-properties.xml file and remove the
   recovery extension property containing the value
      "com.arjuna.ats.internal.jta.recovery.jts.XARecoveryModule"

 - edit the server/XXX/conf/jbossjts-properties.xml file and remove the
   recovery extension property containing the value
   "com.arjuna.ats.internal.jta.recovery.arjunacore.XARecoveryModule"

 - Edit the server/XXX/conf/jboss-service.xml file and modify the
   jboss:service=TransactionManager mbean declaration:

   <!-- for JTA (comment this out) -->
   <mbean code="com.arjuna.ats.jbossatx.jta.TransactionManagerService"
      name="jboss:service=TransactionManager">
      <attribute name="TransactionTimeout">300</attribute>
      <attribute name="ObjectStoreDir">${jboss.server.data.dir}/tx-object-store</attribute>
   </mbean>

   <!-- for JTS -->
   <mbean code="com.arjuna.ats.jbossatx.jts.TransactionManagerService"
      name="jboss:service=TransactionManager">
      <depends>jboss:service=CorbaORB</depends>
      <attribute name="TransactionTimeout">300</attribute>
      <attribute name="ObjectStoreDir">${jboss.server.data.dir}/tx-object-store</attribute>
   </mbean>

 - Edit the server/XXX/conf/jacorb.properies as follows.
  - change the jacorb.poa.thread_pool_max property to 32

 - Edit the server/XXX/deploy/iiop-service.xml and modify the
   PortableInterceptorInitializers attribute as follows.
  - remove the following lines
         <!-- comment out to disable null transaction propagation over IIOP -->
         <initializer>org.jboss.tm.iiop.TxServerClientInterceptorInitializer</initializer>
         <!-- comment out to disable transaction demarcation over IIOP -->
         <initializer>org.jboss.tm.iiop.TxServerInterceptorInitializer</initializer>
  - add the following lines, according to the version of JBossAS you are running
         <!-- JBoss TS interceptor. Use with AS 4.2 and AS 5.0 -->
         <initializer>com.arjuna.ats.jts.orbspecific.jacorb.interceptors.interposition.InterpositionORBInitializerImpl</initializer>
         <!-- RMI/IIOP tx context interceptor, use with AS 5.0 only, comment out in AS 4.2 -->
         <initializer>com.arjuna.ats.jbossatx.jts.InboundTransactionCurrentInitializer</initializer>

For each deployment of JacORB, you will need to ensure that the jacorb.implname in the jacorb.properties
file is unique.

If running an external recovery manager, edit jbossjts-properties.xml to remove
the recovery activator property named "com.arjuna.ats.arjuna.recovery.recoveryActivator_1".
This may be necessary in cluster setups where the ObjectStore is shared, as
there should be only one recovery manager per ObjectStore.

Note that JBossTS 4.3 provides a JTA 1.1 implementation, whereas JBossAS
4.2 ships the JTA 1.0.1b API files. You may therefore also need to copy
the JTA 1.1 API into the application server's server/XXX/lib dir
  - lib/ext/jta-1_1-classes.zip

Due to issues with statup ordering, of some versions of AS 5.0 you may need to
move the mbeans in deploy/iiop-service.xml into conf/jboss-service.xml

If building the JTS To AS integration code from source, you must build against
a JBOSS_HOME for AS 5.0, even if you intend to run the resulting binaries on AS 4.2

Finally, note that starting with JBossAS 4.2, the application server binds to the
localhost address by default. This is inappropriate for distributed transactions,
so please ensure the server is bound to a alternative address.

JBossTS 4.3 is the last JBossTS release that will support JBossAS 4.2.
Future releases of JBossTS (4.4 onwards) will integrate with JBossAS 5.0 only.


                         Web Services Transactions
                         -------------------------

Deployment
----------

JBossAS 4.2

The Web Services Transactions component (also known as the XML
Transaction Service, or XTS) currently has to be deployed into JBossAS
4.2 embedded in an application ear file. The XTS demo application
provides an example of how to deploy XTS in this manner. See file
demo/BUILDING in the installed XTS tree for instructions on how to
build the demo for JBossAS 4.2. Read ant script demo/build.xml to
identify how the XTS code is packaged in the demo ear.

When deploying into JBossAS 4.2 it is possible to factor out the
coordinator component of XTS to run in a separate application server.
However, in this case the XTS code must still be packaged with the
application so that it can invoke the XTS service remote APIs and
implement the client-side services to which the coordinator and other
XTS services reply. See the coordinator sub directory of the XTS
installed tree for details of how to build and deploy a stand alone
coordinator.

JBossAS 5.0

In JBossAS 5.0 XTS is deployed as a service archive (sar). Follow the
steps listed below in order to build and deploy this sar

(1) set environment variable JBOSS_HOME to point to the root firectory
of your JBossAS5.0 installation.

(2) change to the sar subdirectory in the XTS source tree

(3) execute 'ant deploy'

(the instructions above assume you have first built the rest of
the XTS code by executing command 'ant clean install' in the XTS
source root directory).

n.b. XTS sar deployment to JbossAS 5.0Beta4 requires the web listener
hostname and port to be "localhost" and "8080". this restriction will
be lifted in future releases. use of a stand alone coordinator is also
not currently supported in JbossAS 5.0Beta4.


XTS Trailmap Documentation
--------------------------

We recommend that you run through the XTS trailmap in order to
understand how to build and use transaction-aware Web Services, before
deciding whether or not to use a stand alone coordinator service. The
trail map web pages are located in the htdocs subdirectory of the XTS
installed tree.

Note, the  following issues exist  with the XTS trailmap  shipped with
JBossTS

(i) The XTS trailmap demo application generates warning messages on the
application server console if it is run in JBoss 4.0.4GA or 4.0.5GA.  These
warnings do not affect the functionality of the demo application.

The warning is:
  [JSR109ServerMetaDataBuilder] Cannot obtain SEI mapping for:
