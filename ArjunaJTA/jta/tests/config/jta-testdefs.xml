<!--
  JBoss, Home of Professional Open Source
  Copyright 2006, Red Hat Middleware LLC, and individual contributors 
  as indicated by the @author tags. 
  See the copyright.txt in the distribution for a
  full listing of individual contributors. 
  This copyrighted material is made available to anyone wishing to use,
  modify, copy, or redistribute it subject to the terms and conditions
  of the GNU Lesser General Public License, v. 2.1.
  This program is distributed in the hope that it will be useful, but WITHOUT A 
  WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
  PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
  You should have received a copy of the GNU Lesser General Public License,
  v.2.1 along with this distribution; if not, write to the Free Software
  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
  MA  02110-1301, USA.
  
  (C) 2005-2006,
  @author JBoss Inc.
-->
<test_set>

	<default_timeout value="480"/>

	<description>JTA module test definitions</description>


	<test_group name="Basic">

		<task_declaration>

			<task id="JTATest" classname="com.hp.mwtests.ts.jta.basic.JTATest" runner="UnitTestRunner" type="expect_pass_fail"/>
            <task id="JTATransactionCommitTest" classname="com.hp.mwtests.ts.jta.basic.JTATransactionCommitTest" runner="UnitTestRunner" type="expect_pass_fail"/>
            <task id="JTATransactionCommitTest2" classname="com.hp.mwtests.ts.jta.basic.JTATransactionCommitTest2" runner="UnitTestRunner" type="expect_pass_fail"/>
			<task id="JTAAbort" classname="com.hp.mwtests.ts.jta.basic.JTAAbort" runner="UnitTestRunner" type="expect_pass_fail"/>
			<task id="NullResource" classname="com.hp.mwtests.ts.jta.basic.NullResource" runner="UnitTestRunner" type="expect_pass_fail"/>

		</task_declaration>

		<test_declaration id="JTATest001" descriptive_name="Simple JTA test" author="QA2DTF">

			<description>A simple JTA test - testing synchronization classes too</description>
			<configuration/>
			<action_list>
				<perform_task id="JTATest"/>
			</action_list>

		</test_declaration>

		<test_declaration id="JTATest002" descriptive_name="Simple JTA test" author="QA2DTF">

			<description>A simple JTA test - testing synchronization classes too</description>
			<configuration/>
			<action_list>
				<perform_task id="JTATest">
					<param>-txcommit</param>
				</perform_task>
			</action_list>

		</test_declaration>

		<test_declaration id="JTAAbort" descriptive_name="Simple JTA abort test" author="QA2DTF">

			<description>A simple JTA abort test</description>
			<configuration/>
			<action_list>
				<perform_task id="JTAAbort"/>
			</action_list>

		</test_declaration>

		<test_declaration id="NullResource" descriptive_name="NullResource test" author="QA2DTF">

			<description>A simple NullResource JTA test</description>
			<configuration/>
			<action_list>
				<perform_task id="NullResource"/>
			</action_list>

		</test_declaration>

        <test_declaration id="CommitTest" descriptive_name="Commit test" author="Richard Begg">

            <description>
                A simple test that ensure that you can start a transaction and then commit it via
                the Transaction interface even when another transaction is associated with the thread.
            </description>
            <configuration/>
            <action_list>
                <perform_task id="JTATransactionCommitTest"/>
            </action_list>

		</test_declaration>

        <test_declaration id="CommitTest2" descriptive_name="Commit test" author="Richard Begg">

            <description>
                A simple test that ensures that if a COMMITTED transaction is associated with the thread
                calling begin will throw an illegal state exception.
            </description>
            <configuration/>
            <action_list>
                <perform_task id="JTATransactionCommitTest2"/>
            </action_list>

		</test_declaration>
	</test_group>

</test_set>
