<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.jboss.narayana.rts</groupId>
        <artifactId>lra-parent</artifactId>
        <version>5.10.2.Final-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>

    <artifactId>lra-coordinator-jar</artifactId>
    <name>LRA Coordinator jar</name>
    <packaging>jar</packaging>

    <properties>
        <ipv6.server.jvm.args>
            -Djboss.bind.address=[::1] -Djboss.bind.address.management=[::1] -Djboss.bind.address.unsecure=[::1]
            -Djava.net.preferIPv4Stack=false -Djava.net.preferIPv6Addresses=true
        </ipv6.server.jvm.args>
        <modular.jdk.args/>
        <modular.jdk.props/>
        <!-- the resource path of the coordinator - must match the deployment URL (see arquillian.xml) -->
        <lra.coordinator.path>lra-coordinator/lra-coordinator</lra.coordinator.path>
        <jvm.args.other>
            -Dlra.coordinator.path=${lra.coordinator.path}
        </jvm.args.other>
        <server.jvm.args>${jvm.args.other} ${jvm.args.byteman} ${jvm.args.memory} ${jvm.args.debug} ${jvm.args.modular}</server.jvm.args>

        <server.port.offset>100</server.port.offset>
        <server2.jvm.args>
            -Djboss.socket.binding.port-offset=${server.port.offset} ${jvm.args.other} ${jvm.args.memory} ${jvm.args.modular}
        </server2.jvm.args>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.microprofile.lra</groupId>
            <artifactId>microprofile-lra-api</artifactId>
            <version>${version.microprofile.lra.api}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>lra-service-base</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.arjunacore</groupId>
            <artifactId>arjuna</artifactId>
            <version>${project.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>sun.jdk</groupId>
                    <artifactId>jconsole</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
            <version>${version.javax.ws.rs-api}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-jaxrs</artifactId>
            <version>${version.org.jboss.resteasy}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.resteasy</groupId>
            <artifactId>resteasy-client</artifactId>
            <version>${version.org.jboss.resteasy}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>lra-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.smallrye</groupId>
            <artifactId>smallrye-open-api</artifactId>
            <version>1.1.19</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.arquillian.junit</groupId>
            <artifactId>arquillian-junit-container</artifactId>
            <version>${version.org.jboss.arquillian.core}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.byteman</groupId>
            <artifactId>byteman</artifactId>
            <version>${version.org.jboss.byteman}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.rts</groupId>
            <artifactId>narayana-lra</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>lra-coordinator</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <showDeprecation>false</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                    <includes>
                        <include>**/*TestCase.java</include>
                    </includes>
                    <!-- workaround to force tests that use byteman to run first -->
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <stripVersion>true</stripVersion>
                            <includeGroupIds>org.jboss.byteman</includeGroupIds>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
              <inherited>false</inherited>
              <groupId>org.sonatype.plugins</groupId>
              <artifactId>nexus-staging-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>arq</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.org.wildfly.arquillian}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet</artifactId>
                    <version>${version.org.jboss.arquillian.core}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <systemPropertyVariables combine.children="append">
                                <lra.http.host>127.0.0.1</lra.http.host>
                                <lra.http.port>8080</lra.http.port>

                                <lra.coordinator.path>${lra.coordinator.path}</lra.coordinator.path>
                                <lra-participant.address>127.0.0.1</lra-participant.address>
                                <lra-participant.port>9080</lra-participant.port>
                                <server.jvm.args>${server.jvm.args}</server.jvm.args>
                            </systemPropertyVariables>
                            <excludes>
                              <exclude>AnnotationsTestCase.java</exclude>
                            </excludes>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>arqIPv6</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.wildfly.arquillian</groupId>
                    <artifactId>wildfly-arquillian-container-managed</artifactId>
                    <version>${version.org.wildfly.arquillian}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.protocol</groupId>
                    <artifactId>arquillian-protocol-servlet</artifactId>
                    <version>${version.org.jboss.arquillian.core}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <skip>false</skip>
                            <argLine>${ipv6.server.jvm.args}</argLine>
                            <systemPropertyVariables combine.children="append">
                                <server.jvm.args>${server.jvm.args} ${ipv6.server.jvm.args}</server.jvm.args>
                                <node.address>[::1]</node.address>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>codeCoverage</id>
            <properties>
                <server.jvm.args>
                    ${jvm.args.other} ${jvm.args.memory} ${jvm.args.debug} ${jvm.args.jacoco} ${jvm.args.modular}
                </server.jvm.args>
            </properties>
        </profile>
        <profile>
            <id>release</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-install-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>default-install</id>
                                <phase>install</phase>
                            </execution>
                        </executions>
                        <inherited>false</inherited>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
