/*
 * JBoss, Home of Professional Open Source
 * Copyright 2006, JBoss Inc., and others contributors as indicated 
 * by the @authors tag. All rights reserved. 
 * See the copyright.txt in the distribution for a
 * full listing of individual contributors. 
 * This copyrighted material is made available to anyone wishing to use,
 * modify, copy, or redistribute it subject to the terms and conditions
 * of the GNU Lesser General Public License, v. 2.1.
 * This program is distributed in the hope that it will be useful, but WITHOUT A 
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A 
 * PARTICULAR PURPOSE.  See the GNU Lesser General Public License for more details.
 * You should have received a copy of the GNU Lesser General Public License,
 * v.2.1 along with this distribution; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, 
 * MA  02110-1301, USA.
 * 
 * (C) 2005-2006,
 * @author JBoss Inc.
 */
/*
 * Copyright (C) 1998, 1999, 2000, 2001,
 *
 * Arjuna Solutions Limited,
 * Newcastle upon Tyne,
 * Tyne and Wear,
 * UK.  
 *
 * $Id: Configuration.javatmpl 2342 2006-03-30 13:06:17Z  $
 */

package com.arjuna.ats.txoj.common;

import com.arjuna.common.util.propertyservice.PropertyManager;
import java.io.File;

import java.io.IOException;

/**
 * Runtime configuration class for this module.
 *
 * @author Mark Little (mark@arjuna.com)
 * @version $Id: Configuration.javatmpl 2342 2006-03-30 13:06:17Z  $
 * @since JTS 1.0.
 */

public class Configuration
{

    /**
     * @return the name of the module properties file to use.
     */

public static synchronized final String propertiesFile ()
    {
	return _propFile;
    }

    /**
     * Set the name of the properties file.
     */

public static synchronized final void setPropertiesFile (String file)
    {
	_propFile = file;
    }

    /**
     * Used to get the root of the object store.
     *
     * @return <code>path</code> to lock store.
     */

public static synchronized final String lockStoreRoot ()
    {
	if (_lockStore == null)
	    /* Set default location under current directory */
	    _lockStore = System.getProperty("user.dir") + File.separator + "LockStore";

System.err.println("Returning lockstore location of: " + _lockStore);
	return _lockStore;
    }

    /**
     * Used to set the root of the lock store. Changes will
     * take effect the next time the root is queried. Existing
     * lock store instances will not be effected.
     */

public static synchronized final void setLockStoreRoot (String s)
    {
	_lockStore = s;
    }

public static final String version ()
    {
	return "@TXOJ_VERSION@";
    }

private static String _lockStore = null;
private static String _propFile = "@PROPERTIES_FILE@";
    
}

