<?xml version="1.0" encoding="UTF-8"?>
<!-- (c) Copyright 2006-2007 VR Communications, Inc. All rights reserved. -->
<!-- Ant script for the garage sample processed as  a hierarchy of topics (garage_hierarchy_all.xml) -->
<!-- Depending on the argument passed to the script at runtime, 
this script processed to one (example: dita2xhtml), multiple, or all output targets. -->
<!-- This is a "user script," meant to be modified.
However, be cautious in modifying the environment initialization section. -->
<!-- -->
<!-- ENVIRONMENT INITIALIZATION SECTION -->
<!-- -->
<!-- The project name is garage. The default output target is xhtml. -->
<project default="xhtml">
<!--<project name="arjunaCore_intall_guide" default="xhtml">-->
	<!-- This message is echoed to the screen at the beginning of the build process -->
	<!-- -->
	<!-- To process using a different map, you need to change the following statement -->
	<!-- -->
	<echo> </echo>
	<echo>Building document as a hierarchy of topics.</echo>
	<echo> </echo>
	<!-- Allow the build process access to environment variables -->
	<property environment="env"/>
	<!-- Set toolkit directory from environment variable $DITA_DIR-->
	<property name="toolkit_dir" value="${env.DITA_DIR}" />

	<!-- Note: basedir may be set in a higher-level script that invokes this one.
  Some plug-ins depend on its pointing to the Toolkit directory.  
  In particular, the Idiom plug-in, which is required for PDF2 processing, requires it. -->
	<property name="basedir" value="${toolkit_dir}"/>
	<!-- Define the location of the project (source file) directory.
  In this case, the project directory is up two directory levels from the location of this file. -->
	<property name="projdir" value=".."/>
	<!-- Define the location of the output directory.
  In this case, it is a directory directly above the project (source file) directory. -->
	<property name="outdir" value="${projdir}/output"/>
	<property name="PHPexe" value="${toolkit_dir}/php-5.1.4-Win32/php.exe"/>
	<property name="args.logdir" value="${outdir}"/>
	<!-- Set the name of the (master) ditamap -->
	<!-- -->
	<!-- To process using a different map, you need to change the following value -->
	<!-- -->
	<property name="MAP_file" value="hierarchy.ditamap"/>
	<!-- Set the extension string for the dita files (files can also be .xml) -->
	<property name="EXTNAME" value=".dita"/>
	<!-- Define the path to the Java code -->
	<path id="dost.class.path">
		<pathelement location="${toolkit_dir}${file.separator}lib${file.separator}dost.jar"/>
	</path>
	<!-- Define the Ant targets and initialize the DITA processing environment -->
	<taskdef name="integrate" classname="org.dita.dost.platform.IntegratorTask">
		<classpath refid="dost.class.path"/>
	</taskdef>
	<!-- Create the default XHTML output and debug cross-reference -->
	<target name="xhtml" depends="integrate, dita2xhtml">
  </target>
	<target name="integrate">
		<integrate ditadir="${toolkit_dir}"/>
	</target>
	<!-- -->
	<!-- BEGIN INSTANCE PROCESSING SECTION -->
	<!-- -->
	<!-- Names of the output types this script is capable of producing -->
	<!-- The target names are somewhat arbitrary. The following are traditional,
  and they allude to the source and target (for example, dita2xhtml). -->
  <!-- JavaHelp and PDF (using FOP) are not included in this list, because they don't work in Toolkit 1.3.1! -->
	<target name="alltargets" depends="integrate, dita2xhtml, dita2filtered, dita2htmlhelp, dita2pdf2,  
     dita2eclipsecontent, dita2eclipsehelp, dita2docbook, dita2javahelp, dita2troff, dita2wordrtf">
  </target>
	<!-- Handy abbreviation (all) for alltargets -->
	<target name="all" depends="alltargets"/>
	<!-- Create all reports -->
	<target name="allreports" depends="ditadebug, ditalinks, ditaauthors, ditaids, ditakeys"/>
	<!-- Create the ditamap debug cross-reference -->
	<target name="ditadebug">
		<echo>Building debugging cross-reference file ditadebug.txt</echo>
		<mkdir dir="${outdir}/debug_files"/>
		<exec executable="${PHPexe}" dir="${projdir}" output="${outdir}/debug_files/ditadebug.txt">
			<arg value="${projdir}/project/tools/ditadebug.php"/>
			<arg value="${MAP_file}"/>
		</exec>
	</target>
	<!-- Create plausible preview -->
	<target name="preview">
		<echo>Building XHTML plausible preview</echo>
		<mkdir dir="${outdir}/debug_files"/>
		<exec executable="${PHPexe}" dir="${projdir}" output="${outdir}/debug_files/ditapreview.txt">
			<arg value="${projdir}/project/tools/ditapreview.php"/>
			<arg value="${MAP_file}"/>
			<arg value="L"/>
		</exec>
	</target>
	<!-- Create the ditamap URL check -->
	<target name="ditalinks">
		<echo>Building URL check file ditalinks.txt</echo>
		<mkdir dir="${outdir}/debug_files"/>
		<exec executable="${PHPexe}" dir="${projdir}" output="${outdir}/debug_files/ditalinks.txt">
			<arg value="${projdir}/project/tools/ditalinks.php"/>
			<arg value="${MAP_file}"/>
		</exec>
	</target>
	<!-- Create the ditamap author and copyright statistics -->
	<target name="ditaauthors">
		<echo>Building author/copyright file ditaauth.txt</echo>
		<mkdir dir="${outdir}/debug_files"/>
		<exec executable="${PHPexe}" dir="${projdir}" output="${outdir}/debug_files/ditaauthors.txt">
			<arg value="${projdir}/project/tools/ditaauthors.php"/>
			<arg value="${MAP_file}"/>
		</exec>
	</target>
	<!-- Create the ditamap ID listing  -->
	<target name="ditaids">
		<echo>Building ID list file ditaids.txt</echo>
		<mkdir dir="${outdir}/debug_files"/>
		<exec executable="${PHPexe}" dir="${projdir}" output="${outdir}/debug_files/ditaids.txt">
			<arg value="${projdir}/project/tools/ditaids.php"/>
			<arg value="${MAP_file}"/>
		</exec>
	</target>
	<!-- Create the ditamap keyword metadata statistics -->
	<target name="ditakeys">
		<echo>Building keyword metadata file ditakeys.txt</echo>
		<mkdir dir="${outdir}/debug_files"/>
		<exec executable="${PHPexe}" dir="${projdir}" output="${outdir}/debug_files/ditakeys.txt">
			<arg value="${projdir}/project/tools/ditakeys.php"/>
			<arg value="${MAP_file}"/>
		</exec>
	</target>
	<!-- Create xhtml output (unfiltered) -->
	<target name="dita2xhtml">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
		    <!-- -->
			<!-- To process using a different map, you need to change the following value -->
			<!-- -->
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/xhtml"/>
			<!-- -->
			<!-- To process using a different map, you need to change the following value -->
			<!-- -->
			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="xhtml"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create xhtml output (filtered) -->
	<!-- The output file directory is structured so the filtered output files will not "step on" the existing files.
    They will be placed one level deeper than the existing hierarchy files. -->
	<target name="dita2filtered">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/filtered/xhtml"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/filtered//temp"/>
			<property name="transtype" value="xhtml"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
			<!-- Specify the ditaval file to be used for filtering -->
			<!-- -->
			<!-- To turn on filtering, you first need to change the following ditaval file to include the filter.
			See the ditaval file for instructions.
			Then run the Ant script with the dita2filtered target name. 
			Example (using the batch to call the Ant script): runbuild dita2filtered hierarchy -->
			<!-- -->
			<property name="dita.input.valfile" value="${projdir}/ditaval_files/filtering.ditaval"/>
		</ant>
	</target>
	<!-- Create htmlhelp output -->
	<target name="dita2htmlhelp">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/htmlhelp"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="htmlhelp"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create idiom fo pdf2 output -->
	<target name="dita2pdf2">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/pdf2"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="pdf2"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create eclipsecontent output -->
	<target name="dita2eclipsecontent">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/eclipsecontent"/>

			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>

			<property name="transtype" value="eclipsecontent"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create eclipsehelp output -->
	<target name="dita2eclipsehelp">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/eclipsehelp"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="eclipsehelp"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create docbook output -->
	<target name="dita2docbook">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/docbook"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="docbook"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create javahelp output -->
	<target name="dita2javahelp">
		<property name="jarfile" value="${outdir}/hierarchy/javahelp/arjunaCore_install_guide.jar"/>
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/javahelp"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="javahelp"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
		<delete file="${jarfile}"/>
		<jar destfile="${jarfile}" basedir="${outdir}/hierarchy/javahelp" includes="**">
    </jar>
	</target>
	<!-- Create troff output -->
	<target name="dita2troff">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/troff"/>

			<!-- The temp directory is shared by all targets -->
			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<property name="transtype" value="troff"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
	<!-- Create wordrtf output -->
	<target name="dita2wordrtf">
		<ant antfile="${toolkit_dir}${file.separator}conductor.xml" target="init">
			<property name="args.input" value="${projdir}/${MAP_file}"/>
			<property name="output.dir" value="${outdir}/hierarchy/wordrtf"/>

			<property name="dita.temp.dir" value="${outdir}/hierarchy/temp"/>
			<!-- The temp directory is shared by all targets -->
			<property name="transtype" value="wordrtf"/>
			<property name="args.draft" value="yes"/>
			<property name="args.indexshow" value="yes"/>
			<property name="dita.extname" value="${EXTNAME}"/>
		</ant>
	</target>
</project>
